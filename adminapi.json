{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopware Admin API",
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.\n\nFor a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints\nadd the query parameter `type=jsonapi`.",
    "version": "6.4.20.2"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "paths": {
    "/acl-role": {
      "get": {
        "tags": [
          "Acl Role"
        ],
        "summary": "List with basic information of Acl Role resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRoleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Acl Role resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AclRole"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/acl-role?limit=25"
                                },
                                "last": {
                                  "example": "/acl-role?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/acl-role?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/acl-role?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AclRole"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Acl Role"
        ],
        "summary": "Create a new Acl Role resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createAclRole",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AclRole"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AclRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/acl-role/{id}": {
      "get": {
        "tags": [
          "Acl Role"
        ],
        "summary": "Detailed information about a Acl Role resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Acl Role"
        ],
        "summary": "Delete a Acl Role resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Acl Role"
        ],
        "summary": "Partially update information about a Acl Role resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Acl Role resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AclRole"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AclRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "List with basic information of App resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/App"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app?limit=25"
                                },
                                "last": {
                                  "example": "/app?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/App"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App"
        ],
        "summary": "Create a new App resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "createApp",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/App"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app/{id}": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "Detailed information about a App resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "getApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App"
        ],
        "summary": "Delete a App resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App"
        ],
        "summary": "Partially update information about a App resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/App"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-action-button": {
      "get": {
        "tags": [
          "App Action Button"
        ],
        "summary": "List with basic information of App Action Button resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButtonList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Action Button resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppActionButton"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-action-button?limit=25"
                                },
                                "last": {
                                  "example": "/app-action-button?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-action-button?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-action-button?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppActionButton"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Action Button"
        ],
        "summary": "Create a new App Action Button resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppActionButton",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppActionButton"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppActionButton"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-action-button/{id}": {
      "get": {
        "tags": [
          "App Action Button"
        ],
        "summary": "Detailed information about a App Action Button resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Action Button"
        ],
        "summary": "Delete a App Action Button resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Action Button"
        ],
        "summary": "Partially update information about a App Action Button resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Action Button resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppActionButton"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppActionButton"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-administration-snippet": {
      "get": {
        "tags": [
          "App Administration Snippet"
        ],
        "summary": "List with basic information of App Administration Snippet resources",
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Administration Snippet resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppAdministrationSnippet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-administration-snippet?limit=25"
                                },
                                "last": {
                                  "example": "/app-administration-snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-administration-snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-administration-snippet?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppAdministrationSnippet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Administration Snippet"
        ],
        "summary": "Create a new App Administration Snippet resources",
        "description": "Available since: 6.4.15.0",
        "operationId": "createAppAdministrationSnippet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-administration-snippet/{id}": {
      "get": {
        "tags": [
          "App Administration Snippet"
        ],
        "summary": "Detailed information about a App Administration Snippet resource",
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Administration Snippet"
        ],
        "summary": "Delete a App Administration Snippet resource",
        "description": "Available since: 6.4.15.0",
        "operationId": "deleteAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Administration Snippet"
        ],
        "summary": "Partially update information about a App Administration Snippet resource",
        "description": "Available since: 6.4.15.0",
        "operationId": "updateAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Administration Snippet resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-cms-block": {
      "get": {
        "tags": [
          "App Cms Block"
        ],
        "summary": "List with basic information of App Cms Block resources",
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlockList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Cms Block resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppCmsBlock"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-cms-block?limit=25"
                                },
                                "last": {
                                  "example": "/app-cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-cms-block?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppCmsBlock"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Cms Block"
        ],
        "summary": "Create a new App Cms Block resources",
        "description": "Available since: 6.4.2.0",
        "operationId": "createAppCmsBlock",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppCmsBlock"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCmsBlock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-cms-block/{id}": {
      "get": {
        "tags": [
          "App Cms Block"
        ],
        "summary": "Detailed information about a App Cms Block resource",
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Cms Block"
        ],
        "summary": "Delete a App Cms Block resource",
        "description": "Available since: 6.4.2.0",
        "operationId": "deleteAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Cms Block"
        ],
        "summary": "Partially update information about a App Cms Block resource",
        "description": "Available since: 6.4.2.0",
        "operationId": "updateAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Cms Block resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppCmsBlock"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCmsBlock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-flow-action": {
      "get": {
        "tags": [
          "App Flow Action"
        ],
        "summary": "List with basic information of App Flow Action resources",
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowActionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Flow Action resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppFlowAction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-flow-action?limit=25"
                                },
                                "last": {
                                  "example": "/app-flow-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-flow-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-flow-action?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppFlowAction"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Flow Action"
        ],
        "summary": "Create a new App Flow Action resources",
        "description": "Available since: 6.4.10.0",
        "operationId": "createAppFlowAction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppFlowAction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFlowAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-flow-action/{id}": {
      "get": {
        "tags": [
          "App Flow Action"
        ],
        "summary": "Detailed information about a App Flow Action resource",
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Flow Action"
        ],
        "summary": "Delete a App Flow Action resource",
        "description": "Available since: 6.4.10.0",
        "operationId": "deleteAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Flow Action"
        ],
        "summary": "Partially update information about a App Flow Action resource",
        "description": "Available since: 6.4.10.0",
        "operationId": "updateAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Flow Action resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppFlowAction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFlowAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-payment-method": {
      "get": {
        "tags": [
          "App Payment Method"
        ],
        "summary": "List with basic information of App Payment Method resources",
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Payment Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppPaymentMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/app-payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-payment-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppPaymentMethod"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Payment Method"
        ],
        "summary": "Create a new App Payment Method resources",
        "description": "Available since: 6.4.1.0",
        "operationId": "createAppPaymentMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppPaymentMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-payment-method/{id}": {
      "get": {
        "tags": [
          "App Payment Method"
        ],
        "summary": "Detailed information about a App Payment Method resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Payment Method"
        ],
        "summary": "Delete a App Payment Method resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Payment Method"
        ],
        "summary": "Partially update information about a App Payment Method resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "updateAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Payment Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppPaymentMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-script-condition": {
      "get": {
        "tags": [
          "App Script Condition"
        ],
        "summary": "List with basic information of App Script Condition resources",
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptConditionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Script Condition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppScriptCondition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-script-condition?limit=25"
                                },
                                "last": {
                                  "example": "/app-script-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-script-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-script-condition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppScriptCondition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Script Condition"
        ],
        "summary": "Create a new App Script Condition resources",
        "description": "Available since: 6.4.10.3",
        "operationId": "createAppScriptCondition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppScriptCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScriptCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-script-condition/{id}": {
      "get": {
        "tags": [
          "App Script Condition"
        ],
        "summary": "Detailed information about a App Script Condition resource",
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Script Condition"
        ],
        "summary": "Delete a App Script Condition resource",
        "description": "Available since: 6.4.10.3",
        "operationId": "deleteAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Script Condition"
        ],
        "summary": "Partially update information about a App Script Condition resource",
        "description": "Available since: 6.4.10.3",
        "operationId": "updateAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Script Condition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppScriptCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScriptCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-template": {
      "get": {
        "tags": [
          "App Template"
        ],
        "summary": "List with basic information of App Template resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-template?limit=25"
                                },
                                "last": {
                                  "example": "/app-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "App Template"
        ],
        "summary": "Create a new App Template resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/app-template/{id}": {
      "get": {
        "tags": [
          "App Template"
        ],
        "summary": "Detailed information about a App Template resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "App Template"
        ],
        "summary": "Delete a App Template resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "App Template"
        ],
        "summary": "Partially update information about a App Template resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "List with basic information of Category resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Category resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Category"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/category?limit=25"
                                },
                                "last": {
                                  "example": "/category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/category?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create a new Category resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCategory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Detailed information about a Category resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a Category resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Category"
        ],
        "summary": "Partially update information about a Category resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Category resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-block": {
      "get": {
        "tags": [
          "Cms Block"
        ],
        "summary": "List with basic information of Cms Block resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlockList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Block resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsBlock"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-block?limit=25"
                                },
                                "last": {
                                  "example": "/cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-block?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CmsBlock"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Cms Block"
        ],
        "summary": "Create a new Cms Block resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsBlock",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsBlock"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsBlock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-block/{id}": {
      "get": {
        "tags": [
          "Cms Block"
        ],
        "summary": "Detailed information about a Cms Block resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Cms Block"
        ],
        "summary": "Delete a Cms Block resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Cms Block"
        ],
        "summary": "Partially update information about a Cms Block resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Block resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsBlock"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsBlock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-page": {
      "get": {
        "tags": [
          "Cms Page"
        ],
        "summary": "List with basic information of Cms Page resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Page resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsPage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-page?limit=25"
                                },
                                "last": {
                                  "example": "/cms-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-page?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CmsPage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Cms Page"
        ],
        "summary": "Create a new Cms Page resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsPage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsPage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-page/{id}": {
      "get": {
        "tags": [
          "Cms Page"
        ],
        "summary": "Detailed information about a Cms Page resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Cms Page"
        ],
        "summary": "Delete a Cms Page resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Cms Page"
        ],
        "summary": "Partially update information about a Cms Page resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Page resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsPage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-section": {
      "get": {
        "tags": [
          "Cms Section"
        ],
        "summary": "List with basic information of Cms Section resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSectionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Section resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsSection"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-section?limit=25"
                                },
                                "last": {
                                  "example": "/cms-section?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-section?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-section?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CmsSection"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Cms Section"
        ],
        "summary": "Create a new Cms Section resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSection",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSection"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-section/{id}": {
      "get": {
        "tags": [
          "Cms Section"
        ],
        "summary": "Detailed information about a Cms Section resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Cms Section"
        ],
        "summary": "Delete a Cms Section resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Cms Section"
        ],
        "summary": "Partially update information about a Cms Section resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Section resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSection"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-slot": {
      "get": {
        "tags": [
          "Cms Slot"
        ],
        "summary": "List with basic information of Cms Slot resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlotList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Slot resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsSlot"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-slot?limit=25"
                                },
                                "last": {
                                  "example": "/cms-slot?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-slot?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-slot?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CmsSlot"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Cms Slot"
        ],
        "summary": "Create a new Cms Slot resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSlot",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSlot"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSlot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cms-slot/{id}": {
      "get": {
        "tags": [
          "Cms Slot"
        ],
        "summary": "Detailed information about a Cms Slot resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Cms Slot"
        ],
        "summary": "Delete a Cms Slot resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Cms Slot"
        ],
        "summary": "Partially update information about a Cms Slot resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Slot resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSlot"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSlot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "List with basic information of Country resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Country resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Country"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/country?limit=25"
                                },
                                "last": {
                                  "example": "/country?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Country"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Country"
        ],
        "summary": "Create a new Country resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountry",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/country/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Detailed information about a Country resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Country"
        ],
        "summary": "Delete a Country resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Country"
        ],
        "summary": "Partially update information about a Country resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Country resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/country-state": {
      "get": {
        "tags": [
          "Country State"
        ],
        "summary": "List with basic information of Country State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Country State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CountryState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/country-state?limit=25"
                                },
                                "last": {
                                  "example": "/country-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CountryState"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Country State"
        ],
        "summary": "Create a new Country State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountryState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CountryState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/country-state/{id}": {
      "get": {
        "tags": [
          "Country State"
        ],
        "summary": "Detailed information about a Country State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Country State"
        ],
        "summary": "Delete a Country State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Country State"
        ],
        "summary": "Partially update information about a Country State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Country State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CountryState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "List with basic information of Currency resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrencyList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Currency resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Currency"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/currency?limit=25"
                                },
                                "last": {
                                  "example": "/currency?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Create a new Currency resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCurrency",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Currency"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Detailed information about a Currency resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Delete a Currency resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Currency"
        ],
        "summary": "Partially update information about a Currency resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Currency resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Currency"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/currency-country-rounding": {
      "get": {
        "tags": [
          "Currency Country Rounding"
        ],
        "summary": "List with basic information of Currency Country Rounding resources",
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRoundingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Currency Country Rounding resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CurrencyCountryRounding"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/currency-country-rounding?limit=25"
                                },
                                "last": {
                                  "example": "/currency-country-rounding?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency-country-rounding?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency-country-rounding?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyCountryRounding"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Currency Country Rounding"
        ],
        "summary": "Create a new Currency Country Rounding resources",
        "description": "Available since: 6.4.0.0",
        "operationId": "createCurrencyCountryRounding",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/currency-country-rounding/{id}": {
      "get": {
        "tags": [
          "Currency Country Rounding"
        ],
        "summary": "Detailed information about a Currency Country Rounding resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Currency Country Rounding"
        ],
        "summary": "Delete a Currency Country Rounding resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Currency Country Rounding"
        ],
        "summary": "Partially update information about a Currency Country Rounding resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "updateCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Currency Country Rounding resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-entity": {
      "get": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "List with basic information of Custom Entity resources",
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntityList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Entity resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomEntity"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-entity?limit=25"
                                },
                                "last": {
                                  "example": "/custom-entity?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-entity?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-entity?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomEntity"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Create a new Custom Entity resources",
        "description": "Available since: 6.4.9.0",
        "operationId": "createCustomEntity",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomEntity"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-entity/{id}": {
      "get": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Detailed information about a Custom Entity resource",
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Delete a Custom Entity resource",
        "description": "Available since: 6.4.9.0",
        "operationId": "deleteCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Partially update information about a Custom Entity resource",
        "description": "Available since: 6.4.9.0",
        "operationId": "updateCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Entity resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomEntity"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field": {
      "get": {
        "tags": [
          "Custom Field"
        ],
        "summary": "List with basic information of Custom Field resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomField"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomField"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Field"
        ],
        "summary": "Create a new Custom Field resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomField",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomField"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field/{id}": {
      "get": {
        "tags": [
          "Custom Field"
        ],
        "summary": "Detailed information about a Custom Field resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Field"
        ],
        "summary": "Delete a Custom Field resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Field"
        ],
        "summary": "Partially update information about a Custom Field resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomField"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field-set": {
      "get": {
        "tags": [
          "Custom Field Set"
        ],
        "summary": "List with basic information of Custom Field Set resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomFieldSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Field Set"
        ],
        "summary": "Create a new Custom Field Set resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field-set/{id}": {
      "get": {
        "tags": [
          "Custom Field Set"
        ],
        "summary": "Detailed information about a Custom Field Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Field Set"
        ],
        "summary": "Delete a Custom Field Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Field Set"
        ],
        "summary": "Partially update information about a Custom Field Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field-set-relation": {
      "get": {
        "tags": [
          "Custom Field Set Relation"
        ],
        "summary": "List with basic information of Custom Field Set Relation resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field Set Relation resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSetRelation"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set-relation?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set-relation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set-relation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set-relation?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomFieldSetRelation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Field Set Relation"
        ],
        "summary": "Create a new Custom Field Set Relation resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSetRelation",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/custom-field-set-relation/{id}": {
      "get": {
        "tags": [
          "Custom Field Set Relation"
        ],
        "summary": "Detailed information about a Custom Field Set Relation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Field Set Relation"
        ],
        "summary": "Delete a Custom Field Set Relation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Field Set Relation"
        ],
        "summary": "Partially update information about a Custom Field Set Relation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field Set Relation resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List with basic information of Customer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Customer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer?limit=25"
                                },
                                "last": {
                                  "example": "/customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new Customer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Detailed information about a Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "Partially update information about a Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-address": {
      "get": {
        "tags": [
          "Customer Address"
        ],
        "summary": "List with basic information of Customer Address resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddressList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Address resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerAddress"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-address?limit=25"
                                },
                                "last": {
                                  "example": "/customer-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-address?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Address"
        ],
        "summary": "Create a new Customer Address resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerAddress",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-address/{id}": {
      "get": {
        "tags": [
          "Customer Address"
        ],
        "summary": "Detailed information about a Customer Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Address"
        ],
        "summary": "Delete a Customer Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Address"
        ],
        "summary": "Partially update information about a Customer Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Address resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-group": {
      "get": {
        "tags": [
          "Customer Group"
        ],
        "summary": "List with basic information of Customer Group resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-group?limit=25"
                                },
                                "last": {
                                  "example": "/customer-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Group"
        ],
        "summary": "Create a new Customer Group resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-group/{id}": {
      "get": {
        "tags": [
          "Customer Group"
        ],
        "summary": "Detailed information about a Customer Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Group"
        ],
        "summary": "Delete a Customer Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Group"
        ],
        "summary": "Partially update information about a Customer Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-recovery": {
      "get": {
        "tags": [
          "Customer Recovery"
        ],
        "summary": "List with basic information of Customer Recovery resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecoveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Recovery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerRecovery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/customer-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-recovery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerRecovery"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Recovery"
        ],
        "summary": "Create a new Customer Recovery resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createCustomerRecovery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerRecovery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRecovery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-recovery/{id}": {
      "get": {
        "tags": [
          "Customer Recovery"
        ],
        "summary": "Detailed information about a Customer Recovery resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Recovery"
        ],
        "summary": "Delete a Customer Recovery resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Recovery"
        ],
        "summary": "Partially update information about a Customer Recovery resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Recovery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerRecovery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRecovery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-wishlist": {
      "get": {
        "tags": [
          "Customer Wishlist"
        ],
        "summary": "List with basic information of Customer Wishlist resources",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Wishlist resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlist"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlist"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Wishlist"
        ],
        "summary": "Create a new Customer Wishlist resources",
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlist",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlist"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-wishlist/{id}": {
      "get": {
        "tags": [
          "Customer Wishlist"
        ],
        "summary": "Detailed information about a Customer Wishlist resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Wishlist"
        ],
        "summary": "Delete a Customer Wishlist resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Wishlist"
        ],
        "summary": "Partially update information about a Customer Wishlist resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Wishlist resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlist"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-wishlist-product": {
      "get": {
        "tags": [
          "Customer Wishlist Product"
        ],
        "summary": "List with basic information of Customer Wishlist Product resources",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProductList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Wishlist Product resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlistProduct"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist-product?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist-product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist-product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist-product?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlistProduct"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Wishlist Product"
        ],
        "summary": "Create a new Customer Wishlist Product resources",
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlistProduct",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/customer-wishlist-product/{id}": {
      "get": {
        "tags": [
          "Customer Wishlist Product"
        ],
        "summary": "Detailed information about a Customer Wishlist Product resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Wishlist Product"
        ],
        "summary": "Delete a Customer Wishlist Product resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Customer Wishlist Product"
        ],
        "summary": "Partially update information about a Customer Wishlist Product resource",
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Wishlist Product resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/dead-message": {
      "get": {
        "tags": [
          "Dead Message"
        ],
        "summary": "List with basic information of Dead Message resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeadMessageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dead Message resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DeadMessage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/dead-message?limit=25"
                                },
                                "last": {
                                  "example": "/dead-message?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/dead-message?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/dead-message?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeadMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Dead Message"
        ],
        "summary": "Create a new Dead Message resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDeadMessage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeadMessage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeadMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeadMessage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/dead-message/{id}": {
      "get": {
        "tags": [
          "Dead Message"
        ],
        "summary": "Detailed information about a Dead Message resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeadMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the dead_message",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DeadMessage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Dead Message"
        ],
        "summary": "Delete a Dead Message resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDeadMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the dead_message",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Dead Message"
        ],
        "summary": "Partially update information about a Dead Message resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDeadMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the dead_message",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Dead Message resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeadMessage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeadMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeadMessage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/delivery-time": {
      "get": {
        "tags": [
          "Delivery Time"
        ],
        "summary": "List with basic information of Delivery Time resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTimeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Delivery Time resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DeliveryTime"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/delivery-time?limit=25"
                                },
                                "last": {
                                  "example": "/delivery-time?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/delivery-time?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/delivery-time?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeliveryTime"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Delivery Time"
        ],
        "summary": "Create a new Delivery Time resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDeliveryTime",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeliveryTime"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryTime"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/delivery-time/{id}": {
      "get": {
        "tags": [
          "Delivery Time"
        ],
        "summary": "Detailed information about a Delivery Time resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery Time"
        ],
        "summary": "Delete a Delivery Time resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Delivery Time"
        ],
        "summary": "Partially update information about a Delivery Time resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Delivery Time resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeliveryTime"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryTime"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "List with basic information of Document resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Document"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document?limit=25"
                                },
                                "last": {
                                  "example": "/document?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create a new Document resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocument",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document/{id}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Detailed information about a Document resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a Document resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Document"
        ],
        "summary": "Partially update information about a Document resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-base-config": {
      "get": {
        "tags": [
          "Document Base Config"
        ],
        "summary": "List with basic information of Document Base Config resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Base Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-base-config?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Document Base Config"
        ],
        "summary": "Create a new Document Base Config resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-base-config/{id}": {
      "get": {
        "tags": [
          "Document Base Config"
        ],
        "summary": "Detailed information about a Document Base Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Document Base Config"
        ],
        "summary": "Delete a Document Base Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Document Base Config"
        ],
        "summary": "Partially update information about a Document Base Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Base Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-base-config-sales-channel": {
      "get": {
        "tags": [
          "Document Base Config Sales Channel"
        ],
        "summary": "List with basic information of Document Base Config Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Base Config Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-base-config-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Document Base Config Sales Channel"
        ],
        "summary": "Create a new Document Base Config Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-base-config-sales-channel/{id}": {
      "get": {
        "tags": [
          "Document Base Config Sales Channel"
        ],
        "summary": "Detailed information about a Document Base Config Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Document Base Config Sales Channel"
        ],
        "summary": "Delete a Document Base Config Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Document Base Config Sales Channel"
        ],
        "summary": "Partially update information about a Document Base Config Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Base Config Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-type": {
      "get": {
        "tags": [
          "Document Type"
        ],
        "summary": "List with basic information of Document Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-type?limit=25"
                                },
                                "last": {
                                  "example": "/document-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Document Type"
        ],
        "summary": "Create a new Document Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/document-type/{id}": {
      "get": {
        "tags": [
          "Document Type"
        ],
        "summary": "Detailed information about a Document Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Document Type"
        ],
        "summary": "Delete a Document Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Document Type"
        ],
        "summary": "Partially update information about a Document Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/event-action": {
      "get": {
        "tags": [
          "Event Action"
        ],
        "summary": "List with basic information of Event Action resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getEventActionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Event Action resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/EventAction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/event-action?limit=25"
                                },
                                "last": {
                                  "example": "/event-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/event-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/event-action?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventAction"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Event Action"
        ],
        "summary": "Create a new Event Action resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createEventAction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventAction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of EventAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/event-action/{id}": {
      "get": {
        "tags": [
          "Event Action"
        ],
        "summary": "Detailed information about a Event Action resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getEventAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the event_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of EventAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Event Action"
        ],
        "summary": "Delete a Event Action resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteEventAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the event_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Event Action"
        ],
        "summary": "Partially update information about a Event Action resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateEventAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the event_action",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Event Action resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventAction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of EventAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "List with basic information of Flow resources",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Flow"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/flow?limit=25"
                                },
                                "last": {
                                  "example": "/flow?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Flow"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Create a new Flow resources",
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlow",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Flow"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow/{id}": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Detailed information about a Flow resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Flow"
        ],
        "summary": "Delete a Flow resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Flow"
        ],
        "summary": "Partially update information about a Flow resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Flow"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow-sequence": {
      "get": {
        "tags": [
          "Flow Sequence"
        ],
        "summary": "List with basic information of Flow Sequence resources",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequenceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow Sequence resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/FlowSequence"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/flow-sequence?limit=25"
                                },
                                "last": {
                                  "example": "/flow-sequence?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow-sequence?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow-sequence?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FlowSequence"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Flow Sequence"
        ],
        "summary": "Create a new Flow Sequence resources",
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlowSequence",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowSequence"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSequence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow-sequence/{id}": {
      "get": {
        "tags": [
          "Flow Sequence"
        ],
        "summary": "Detailed information about a Flow Sequence resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Flow Sequence"
        ],
        "summary": "Delete a Flow Sequence resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Flow Sequence"
        ],
        "summary": "Partially update information about a Flow Sequence resource",
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow Sequence resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowSequence"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSequence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow-template": {
      "get": {
        "tags": [
          "Flow Template"
        ],
        "summary": "List with basic information of Flow Template resources",
        "description": "Available since: 6.4.18.0",
        "operationId": "getFlowTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/FlowTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/flow-template?limit=25"
                                },
                                "last": {
                                  "example": "/flow-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FlowTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Flow Template"
        ],
        "summary": "Create a new Flow Template resources",
        "description": "Available since: 6.4.18.0",
        "operationId": "createFlowTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/flow-template/{id}": {
      "get": {
        "tags": [
          "Flow Template"
        ],
        "summary": "Detailed information about a Flow Template resource",
        "description": "Available since: 6.4.18.0",
        "operationId": "getFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowTemplate"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Flow Template"
        ],
        "summary": "Delete a Flow Template resource",
        "description": "Available since: 6.4.18.0",
        "operationId": "deleteFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Flow Template"
        ],
        "summary": "Partially update information about a Flow Template resource",
        "description": "Available since: 6.4.18.0",
        "operationId": "updateFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-file": {
      "get": {
        "tags": [
          "Import Export File"
        ],
        "summary": "List with basic information of Import Export File resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFileList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export File resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportFile"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-file?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-file?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-file?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-file?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportFile"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Import Export File"
        ],
        "summary": "Create a new Import Export File resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportFile",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportFile"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-file/{id}": {
      "get": {
        "tags": [
          "Import Export File"
        ],
        "summary": "Detailed information about a Import Export File resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Import Export File"
        ],
        "summary": "Delete a Import Export File resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Import Export File"
        ],
        "summary": "Partially update information about a Import Export File resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export File resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportFile"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-log": {
      "get": {
        "tags": [
          "Import Export Log"
        ],
        "summary": "List with basic information of Import Export Log resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLogList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export Log resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportLog"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-log?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-log?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Import Export Log"
        ],
        "summary": "Create a new Import Export Log resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportLog",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportLog"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-log/{id}": {
      "get": {
        "tags": [
          "Import Export Log"
        ],
        "summary": "Detailed information about a Import Export Log resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Import Export Log"
        ],
        "summary": "Delete a Import Export Log resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Import Export Log"
        ],
        "summary": "Partially update information about a Import Export Log resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export Log resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportLog"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-profile": {
      "get": {
        "tags": [
          "Import Export Profile"
        ],
        "summary": "List with basic information of Import Export Profile resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfileList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export Profile resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportProfile"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-profile?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-profile?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-profile?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-profile?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportProfile"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Import Export Profile"
        ],
        "summary": "Create a new Import Export Profile resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportProfile",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/import-export-profile/{id}": {
      "get": {
        "tags": [
          "Import Export Profile"
        ],
        "summary": "Detailed information about a Import Export Profile resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Import Export Profile"
        ],
        "summary": "Delete a Import Export Profile resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Import Export Profile"
        ],
        "summary": "Partially update information about a Import Export Profile resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export Profile resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/integration": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "List with basic information of Integration resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegrationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Integration resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Integration"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/integration?limit=25"
                                },
                                "last": {
                                  "example": "/integration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/integration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/integration?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integration"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Create a new Integration resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createIntegration",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/integration/{id}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Detailed information about a Integration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Delete a Integration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Integration"
        ],
        "summary": "Partially update information about a Integration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Integration resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/landing-page": {
      "get": {
        "tags": [
          "Landing Page"
        ],
        "summary": "List with basic information of Landing Page resources",
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Landing Page resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/LandingPage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/landing-page?limit=25"
                                },
                                "last": {
                                  "example": "/landing-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/landing-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/landing-page?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LandingPage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Landing Page"
        ],
        "summary": "Create a new Landing Page resources",
        "description": "Available since: 6.4.0.0",
        "operationId": "createLandingPage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LandingPage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LandingPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/landing-page/{id}": {
      "get": {
        "tags": [
          "Landing Page"
        ],
        "summary": "Detailed information about a Landing Page resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Landing Page"
        ],
        "summary": "Delete a Landing Page resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Landing Page"
        ],
        "summary": "Partially update information about a Landing Page resource",
        "description": "Available since: 6.4.0.0",
        "operationId": "updateLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Landing Page resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LandingPage"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LandingPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/language": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "List with basic information of Language resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Language resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Language"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/language?limit=25"
                                },
                                "last": {
                                  "example": "/language?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/language?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/language?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Language"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Language"
        ],
        "summary": "Create a new Language resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLanguage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Language"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/language/{id}": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Detailed information about a Language resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Language"
        ],
        "summary": "Delete a Language resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Language"
        ],
        "summary": "Partially update information about a Language resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Language resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Language"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/locale": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "List with basic information of Locale resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocaleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Locale resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Locale"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/locale?limit=25"
                                },
                                "last": {
                                  "example": "/locale?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/locale?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/locale?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Locale"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Locale"
        ],
        "summary": "Create a new Locale resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLocale",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Locale"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/locale/{id}": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "Detailed information about a Locale resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Locale"
        ],
        "summary": "Delete a Locale resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Locale"
        ],
        "summary": "Partially update information about a Locale resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Locale resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Locale"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/log-entry": {
      "get": {
        "tags": [
          "Log Entry"
        ],
        "summary": "List with basic information of Log Entry resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Log Entry resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/LogEntry"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/log-entry?limit=25"
                                },
                                "last": {
                                  "example": "/log-entry?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/log-entry?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/log-entry?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LogEntry"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Log Entry"
        ],
        "summary": "Create a new Log Entry resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLogEntry",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/log-entry/{id}": {
      "get": {
        "tags": [
          "Log Entry"
        ],
        "summary": "Detailed information about a Log Entry resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Log Entry"
        ],
        "summary": "Delete a Log Entry resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Log Entry"
        ],
        "summary": "Partially update information about a Log Entry resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Log Entry resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-header-footer": {
      "get": {
        "tags": [
          "Mail Header Footer"
        ],
        "summary": "List with basic information of Mail Header Footer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooterList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Header Footer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailHeaderFooter"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-header-footer?limit=25"
                                },
                                "last": {
                                  "example": "/mail-header-footer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-header-footer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-header-footer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MailHeaderFooter"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Mail Header Footer"
        ],
        "summary": "Create a new Mail Header Footer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailHeaderFooter",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailHeaderFooter"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailHeaderFooter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-header-footer/{id}": {
      "get": {
        "tags": [
          "Mail Header Footer"
        ],
        "summary": "Detailed information about a Mail Header Footer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Mail Header Footer"
        ],
        "summary": "Delete a Mail Header Footer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Mail Header Footer"
        ],
        "summary": "Partially update information about a Mail Header Footer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Header Footer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailHeaderFooter"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailHeaderFooter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-template": {
      "get": {
        "tags": [
          "Mail Template"
        ],
        "summary": "List with basic information of Mail Template resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-template?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MailTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Mail Template"
        ],
        "summary": "Create a new Mail Template resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-template/{id}": {
      "get": {
        "tags": [
          "Mail Template"
        ],
        "summary": "Detailed information about a Mail Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Mail Template"
        ],
        "summary": "Delete a Mail Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Mail Template"
        ],
        "summary": "Partially update information about a Mail Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-template-type": {
      "get": {
        "tags": [
          "Mail Template Type"
        ],
        "summary": "List with basic information of Mail Template Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Template Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailTemplateType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-template-type?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MailTemplateType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Mail Template Type"
        ],
        "summary": "Create a new Mail Template Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplateType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplateType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplateType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/mail-template-type/{id}": {
      "get": {
        "tags": [
          "Mail Template Type"
        ],
        "summary": "Detailed information about a Mail Template Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Mail Template Type"
        ],
        "summary": "Delete a Mail Template Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Mail Template Type"
        ],
        "summary": "Partially update information about a Mail Template Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Template Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplateType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplateType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/main-category": {
      "get": {
        "tags": [
          "Main Category"
        ],
        "summary": "List with basic information of Main Category resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Main Category resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MainCategory"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/main-category?limit=25"
                                },
                                "last": {
                                  "example": "/main-category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/main-category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/main-category?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MainCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Main Category"
        ],
        "summary": "Create a new Main Category resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createMainCategory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MainCategory"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/main-category/{id}": {
      "get": {
        "tags": [
          "Main Category"
        ],
        "summary": "Detailed information about a Main Category resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Main Category"
        ],
        "summary": "Delete a Main Category resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Main Category"
        ],
        "summary": "Partially update information about a Main Category resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Main Category resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MainCategory"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "List with basic information of Media resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Media"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media?limit=25"
                                },
                                "last": {
                                  "example": "/media?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Media"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Create a new Media resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMedia",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Media"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media/{id}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Detailed information about a Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media"
        ],
        "summary": "Delete a Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media"
        ],
        "summary": "Partially update information about a Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Media"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-default-folder": {
      "get": {
        "tags": [
          "Media Default Folder"
        ],
        "summary": "List with basic information of Media Default Folder resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Default Folder resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaDefaultFolder"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-default-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-default-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-default-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-default-folder?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaDefaultFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media Default Folder"
        ],
        "summary": "Create a new Media Default Folder resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaDefaultFolder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaDefaultFolder"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaDefaultFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-default-folder/{id}": {
      "get": {
        "tags": [
          "Media Default Folder"
        ],
        "summary": "Detailed information about a Media Default Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Default Folder"
        ],
        "summary": "Delete a Media Default Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Default Folder"
        ],
        "summary": "Partially update information about a Media Default Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Default Folder resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaDefaultFolder"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaDefaultFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-folder": {
      "get": {
        "tags": [
          "Media Folder"
        ],
        "summary": "List with basic information of Media Folder resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Folder resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaFolder"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media Folder"
        ],
        "summary": "Create a new Media Folder resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolder"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-folder/{id}": {
      "get": {
        "tags": [
          "Media Folder"
        ],
        "summary": "Detailed information about a Media Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Folder"
        ],
        "summary": "Delete a Media Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Folder"
        ],
        "summary": "Partially update information about a Media Folder resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Folder resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolder"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-folder-configuration": {
      "get": {
        "tags": [
          "Media Folder Configuration"
        ],
        "summary": "List with basic information of Media Folder Configuration resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfigurationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Folder Configuration resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaFolderConfiguration"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-folder-configuration?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder-configuration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder-configuration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder-configuration?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaFolderConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media Folder Configuration"
        ],
        "summary": "Create a new Media Folder Configuration resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolderConfiguration",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-folder-configuration/{id}": {
      "get": {
        "tags": [
          "Media Folder Configuration"
        ],
        "summary": "Detailed information about a Media Folder Configuration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Folder Configuration"
        ],
        "summary": "Delete a Media Folder Configuration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Folder Configuration"
        ],
        "summary": "Partially update information about a Media Folder Configuration resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Folder Configuration resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-thumbnail": {
      "get": {
        "tags": [
          "Media Thumbnail"
        ],
        "summary": "List with basic information of Media Thumbnail resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Thumbnail resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnail"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaThumbnail"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media Thumbnail"
        ],
        "summary": "Create a new Media Thumbnail resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnail",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnail"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-thumbnail/{id}": {
      "get": {
        "tags": [
          "Media Thumbnail"
        ],
        "summary": "Detailed information about a Media Thumbnail resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Thumbnail"
        ],
        "summary": "Delete a Media Thumbnail resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Thumbnail"
        ],
        "summary": "Partially update information about a Media Thumbnail resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Thumbnail resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnail"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-thumbnail-size": {
      "get": {
        "tags": [
          "Media Thumbnail Size"
        ],
        "summary": "List with basic information of Media Thumbnail Size resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSizeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Thumbnail Size resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnailSize"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail-size?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail-size?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail-size?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail-size?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaThumbnailSize"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Media Thumbnail Size"
        ],
        "summary": "Create a new Media Thumbnail Size resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnailSize",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnailSize"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnailSize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/media-thumbnail-size/{id}": {
      "get": {
        "tags": [
          "Media Thumbnail Size"
        ],
        "summary": "Detailed information about a Media Thumbnail Size resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Thumbnail Size"
        ],
        "summary": "Delete a Media Thumbnail Size resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Thumbnail Size"
        ],
        "summary": "Partially update information about a Media Thumbnail Size resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Thumbnail Size resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnailSize"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnailSize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/message-queue-stats": {
      "get": {
        "tags": [
          "Message Queue Stats"
        ],
        "summary": "List with basic information of Message Queue Stats resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMessageQueueStatsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Message Queue Stats resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MessageQueueStats"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/message-queue-stats?limit=25"
                                },
                                "last": {
                                  "example": "/message-queue-stats?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/message-queue-stats?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/message-queue-stats?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageQueueStats"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Message Queue Stats"
        ],
        "summary": "Create a new Message Queue Stats resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMessageQueueStats",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MessageQueueStats"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageQueueStats"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MessageQueueStats",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/message-queue-stats/{id}": {
      "get": {
        "tags": [
          "Message Queue Stats"
        ],
        "summary": "Detailed information about a Message Queue Stats resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMessageQueueStats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the message_queue_stats",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MessageQueueStats",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Message Queue Stats"
        ],
        "summary": "Delete a Message Queue Stats resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMessageQueueStats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the message_queue_stats",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Message Queue Stats"
        ],
        "summary": "Partially update information about a Message Queue Stats resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMessageQueueStats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the message_queue_stats",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Message Queue Stats resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MessageQueueStats"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageQueueStats"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MessageQueueStats",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/newsletter-recipient": {
      "get": {
        "tags": [
          "Newsletter Recipient"
        ],
        "summary": "List with basic information of Newsletter Recipient resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipientList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Newsletter Recipient resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NewsletterRecipient"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/newsletter-recipient?limit=25"
                                },
                                "last": {
                                  "example": "/newsletter-recipient?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/newsletter-recipient?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/newsletter-recipient?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NewsletterRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Newsletter Recipient"
        ],
        "summary": "Create a new Newsletter Recipient resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNewsletterRecipient",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterRecipient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/newsletter-recipient/{id}": {
      "get": {
        "tags": [
          "Newsletter Recipient"
        ],
        "summary": "Detailed information about a Newsletter Recipient resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Newsletter Recipient"
        ],
        "summary": "Delete a Newsletter Recipient resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Newsletter Recipient"
        ],
        "summary": "Partially update information about a Newsletter Recipient resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Newsletter Recipient resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterRecipient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "List with basic information of Notification resources",
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotificationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Notification resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Notification"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/notification?limit=25"
                                },
                                "last": {
                                  "example": "/notification?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/notification?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/notification?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Create a new Notification resources",
        "description": "Available since: 6.4.7.0",
        "operationId": "createNotification",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Notification"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/notification/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Detailed information about a Notification resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Delete a Notification resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Notification"
        ],
        "summary": "Partially update information about a Notification resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "updateNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Notification resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Notification"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range": {
      "get": {
        "tags": [
          "Number Range"
        ],
        "summary": "List with basic information of Number Range resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRange"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range?limit=25"
                                },
                                "last": {
                                  "example": "/number-range?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRange"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Number Range"
        ],
        "summary": "Create a new Number Range resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRange",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRange"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range/{id}": {
      "get": {
        "tags": [
          "Number Range"
        ],
        "summary": "Detailed information about a Number Range resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Number Range"
        ],
        "summary": "Delete a Number Range resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Range"
        ],
        "summary": "Partially update information about a Number Range resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRange"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-sales-channel": {
      "get": {
        "tags": [
          "Number Range Sales Channel"
        ],
        "summary": "List with basic information of Number Range Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Number Range Sales Channel"
        ],
        "summary": "Create a new Number Range Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-sales-channel/{id}": {
      "get": {
        "tags": [
          "Number Range Sales Channel"
        ],
        "summary": "Detailed information about a Number Range Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Number Range Sales Channel"
        ],
        "summary": "Delete a Number Range Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Range Sales Channel"
        ],
        "summary": "Partially update information about a Number Range Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-state": {
      "get": {
        "tags": [
          "Number Range State"
        ],
        "summary": "List with basic information of Number Range State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-state?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeState"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Number Range State"
        ],
        "summary": "Create a new Number Range State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-state/{id}": {
      "get": {
        "tags": [
          "Number Range State"
        ],
        "summary": "Detailed information about a Number Range State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Number Range State"
        ],
        "summary": "Delete a Number Range State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Range State"
        ],
        "summary": "Partially update information about a Number Range State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-type": {
      "get": {
        "tags": [
          "Number Range Type"
        ],
        "summary": "List with basic information of Number Range Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-type?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Number Range Type"
        ],
        "summary": "Create a new Number Range Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/number-range-type/{id}": {
      "get": {
        "tags": [
          "Number Range Type"
        ],
        "summary": "Detailed information about a Number Range Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Number Range Type"
        ],
        "summary": "Delete a Number Range Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Range Type"
        ],
        "summary": "Partially update information about a Number Range Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "List with basic information of Order resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Order"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order?limit=25"
                                },
                                "last": {
                                  "example": "/order?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create a new Order resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Detailed information about a Order resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete a Order resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "summary": "Partially update information about a Order resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-address": {
      "get": {
        "tags": [
          "Order Address"
        ],
        "summary": "List with basic information of Order Address resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddressList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Address resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderAddress"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-address?limit=25"
                                },
                                "last": {
                                  "example": "/order-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-address?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderAddress"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Address"
        ],
        "summary": "Create a new Order Address resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderAddress",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-address/{id}": {
      "get": {
        "tags": [
          "Order Address"
        ],
        "summary": "Detailed information about a Order Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Address"
        ],
        "summary": "Delete a Order Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Address"
        ],
        "summary": "Partially update information about a Order Address resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Address resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-customer": {
      "get": {
        "tags": [
          "Order Customer"
        ],
        "summary": "List with basic information of Order Customer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderCustomer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-customer?limit=25"
                                },
                                "last": {
                                  "example": "/order-customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderCustomer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Customer"
        ],
        "summary": "Create a new Order Customer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-customer/{id}": {
      "get": {
        "tags": [
          "Order Customer"
        ],
        "summary": "Detailed information about a Order Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Customer"
        ],
        "summary": "Delete a Order Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Customer"
        ],
        "summary": "Partially update information about a Order Customer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-delivery": {
      "get": {
        "tags": [
          "Order Delivery"
        ],
        "summary": "List with basic information of Order Delivery resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Delivery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderDelivery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-delivery?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderDelivery"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Delivery"
        ],
        "summary": "Create a new Order Delivery resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDelivery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDelivery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDelivery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-delivery/{id}": {
      "get": {
        "tags": [
          "Order Delivery"
        ],
        "summary": "Detailed information about a Order Delivery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Delivery"
        ],
        "summary": "Delete a Order Delivery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Delivery"
        ],
        "summary": "Partially update information about a Order Delivery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Delivery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDelivery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDelivery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-delivery-position": {
      "get": {
        "tags": [
          "Order Delivery Position"
        ],
        "summary": "List with basic information of Order Delivery Position resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPositionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Delivery Position resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderDeliveryPosition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-delivery-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery-position?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderDeliveryPosition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Delivery Position"
        ],
        "summary": "Create a new Order Delivery Position resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDeliveryPosition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeliveryPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-delivery-position/{id}": {
      "get": {
        "tags": [
          "Order Delivery Position"
        ],
        "summary": "Detailed information about a Order Delivery Position resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Delivery Position"
        ],
        "summary": "Delete a Order Delivery Position resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Delivery Position"
        ],
        "summary": "Partially update information about a Order Delivery Position resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Delivery Position resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeliveryPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-line-item": {
      "get": {
        "tags": [
          "Order Line Item"
        ],
        "summary": "List with basic information of Order Line Item resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItemList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Line Item resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderLineItem"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-line-item?limit=25"
                                },
                                "last": {
                                  "example": "/order-line-item?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-line-item?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-line-item?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Line Item"
        ],
        "summary": "Create a new Order Line Item resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderLineItem",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItem"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-line-item/{id}": {
      "get": {
        "tags": [
          "Order Line Item"
        ],
        "summary": "Detailed information about a Order Line Item resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Line Item"
        ],
        "summary": "Delete a Order Line Item resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Line Item"
        ],
        "summary": "Partially update information about a Order Line Item resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Line Item resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItem"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-line-item-download": {
      "get": {
        "tags": [
          "Order Line Item Download"
        ],
        "summary": "List with basic information of Order Line Item Download resources",
        "description": "Available since: 6.4.19.0",
        "operationId": "getOrderLineItemDownloadList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Line Item Download resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderLineItemDownload"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-line-item-download?limit=25"
                                },
                                "last": {
                                  "example": "/order-line-item-download?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-line-item-download?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-line-item-download?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItemDownload"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Line Item Download"
        ],
        "summary": "Create a new Order Line Item Download resources",
        "description": "Available since: 6.4.19.0",
        "operationId": "createOrderLineItemDownload",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItemDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItemDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-line-item-download/{id}": {
      "get": {
        "tags": [
          "Order Line Item Download"
        ],
        "summary": "Detailed information about a Order Line Item Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "getOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Line Item Download"
        ],
        "summary": "Delete a Order Line Item Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "deleteOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Line Item Download"
        ],
        "summary": "Partially update information about a Order Line Item Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "updateOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Line Item Download resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItemDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItemDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction": {
      "get": {
        "tags": [
          "Order Transaction"
        ],
        "summary": "List with basic information of Order Transaction resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransactionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransaction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Transaction"
        ],
        "summary": "Create a new Order Transaction resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderTransaction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransaction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction/{id}": {
      "get": {
        "tags": [
          "Order Transaction"
        ],
        "summary": "Detailed information about a Order Transaction resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Transaction"
        ],
        "summary": "Delete a Order Transaction resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Transaction"
        ],
        "summary": "Partially update information about a Order Transaction resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransaction"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture": {
      "get": {
        "tags": [
          "Order Transaction Capture"
        ],
        "summary": "List with basic information of Order Transaction Capture resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCapture"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCapture"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Transaction Capture"
        ],
        "summary": "Create a new Order Transaction Capture resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCapture",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture/{id}": {
      "get": {
        "tags": [
          "Order Transaction Capture"
        ],
        "summary": "Detailed information about a Order Transaction Capture resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Transaction Capture"
        ],
        "summary": "Delete a Order Transaction Capture resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Transaction Capture"
        ],
        "summary": "Partially update information about a Order Transaction Capture resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture-refund": {
      "get": {
        "tags": [
          "Order Transaction Capture Refund"
        ],
        "summary": "List with basic information of Order Transaction Capture Refund resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture Refund resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Transaction Capture Refund"
        ],
        "summary": "Create a new Order Transaction Capture Refund resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture-refund/{id}": {
      "get": {
        "tags": [
          "Order Transaction Capture Refund"
        ],
        "summary": "Detailed information about a Order Transaction Capture Refund resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Transaction Capture Refund"
        ],
        "summary": "Delete a Order Transaction Capture Refund resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Transaction Capture Refund"
        ],
        "summary": "Partially update information about a Order Transaction Capture Refund resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture Refund resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture-refund-position": {
      "get": {
        "tags": [
          "Order Transaction Capture Refund Position"
        ],
        "summary": "List with basic information of Order Transaction Capture Refund Position resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPositionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture Refund Position resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Order Transaction Capture Refund Position"
        ],
        "summary": "Create a new Order Transaction Capture Refund Position resources",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/order-transaction-capture-refund-position/{id}": {
      "get": {
        "tags": [
          "Order Transaction Capture Refund Position"
        ],
        "summary": "Detailed information about a Order Transaction Capture Refund Position resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Transaction Capture Refund Position"
        ],
        "summary": "Delete a Order Transaction Capture Refund Position resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Order Transaction Capture Refund Position"
        ],
        "summary": "Partially update information about a Order Transaction Capture Refund Position resource",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture Refund Position resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/payment-method": {
      "get": {
        "tags": [
          "Payment Method"
        ],
        "summary": "List with basic information of Payment Method resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payment Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PaymentMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/payment-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentMethod"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Payment Method"
        ],
        "summary": "Create a new Payment Method resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPaymentMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/payment-method/{id}": {
      "get": {
        "tags": [
          "Payment Method"
        ],
        "summary": "Detailed information about a Payment Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Method"
        ],
        "summary": "Delete a Payment Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Payment Method"
        ],
        "summary": "Partially update information about a Payment Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Payment Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/plugin": {
      "get": {
        "tags": [
          "Plugin"
        ],
        "summary": "List with basic information of Plugin resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPluginList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Plugin resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Plugin"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/plugin?limit=25"
                                },
                                "last": {
                                  "example": "/plugin?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/plugin?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/plugin?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Plugin"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "Create a new Plugin resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPlugin",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Plugin"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plugin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/plugin/{id}": {
      "get": {
        "tags": [
          "Plugin"
        ],
        "summary": "Detailed information about a Plugin resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Plugin"
        ],
        "summary": "Delete a Plugin resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Plugin"
        ],
        "summary": "Partially update information about a Plugin resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Plugin resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Plugin"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plugin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List with basic information of Product resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Product"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product?limit=25"
                                },
                                "last": {
                                  "example": "/product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new Product resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProduct",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Detailed information about a Product resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a Product resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Partially update information about a Product resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-configurator-setting": {
      "get": {
        "tags": [
          "Product Configurator Setting"
        ],
        "summary": "List with basic information of Product Configurator Setting resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSettingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Configurator Setting resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductConfiguratorSetting"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-configurator-setting?limit=25"
                                },
                                "last": {
                                  "example": "/product-configurator-setting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-configurator-setting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-configurator-setting?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguratorSetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Configurator Setting"
        ],
        "summary": "Create a new Product Configurator Setting resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductConfiguratorSetting",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-configurator-setting/{id}": {
      "get": {
        "tags": [
          "Product Configurator Setting"
        ],
        "summary": "Detailed information about a Product Configurator Setting resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Configurator Setting"
        ],
        "summary": "Delete a Product Configurator Setting resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Configurator Setting"
        ],
        "summary": "Partially update information about a Product Configurator Setting resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Configurator Setting resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-cross-selling": {
      "get": {
        "tags": [
          "Product Cross Selling"
        ],
        "summary": "List with basic information of Product Cross Selling resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSellingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Cross Selling resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSelling"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSelling"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Cross Selling"
        ],
        "summary": "Create a new Product Cross Selling resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductCrossSelling",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSelling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-cross-selling/{id}": {
      "get": {
        "tags": [
          "Product Cross Selling"
        ],
        "summary": "Detailed information about a Product Cross Selling resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Cross Selling"
        ],
        "summary": "Delete a Product Cross Selling resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Cross Selling"
        ],
        "summary": "Partially update information about a Product Cross Selling resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Cross Selling resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSelling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-cross-selling-assigned-products": {
      "get": {
        "tags": [
          "Product Cross Selling Assigned Products"
        ],
        "summary": "List with basic information of Product Cross Selling Assigned Products resources",
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProductsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Cross Selling Assigned Products resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling-assigned-products?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Cross Selling Assigned Products"
        ],
        "summary": "Create a new Product Cross Selling Assigned Products resources",
        "description": "Available since: 6.2.0.0",
        "operationId": "createProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-cross-selling-assigned-products/{id}": {
      "get": {
        "tags": [
          "Product Cross Selling Assigned Products"
        ],
        "summary": "Detailed information about a Product Cross Selling Assigned Products resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Cross Selling Assigned Products"
        ],
        "summary": "Delete a Product Cross Selling Assigned Products resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Cross Selling Assigned Products"
        ],
        "summary": "Partially update information about a Product Cross Selling Assigned Products resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "updateProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Cross Selling Assigned Products resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-download": {
      "get": {
        "tags": [
          "Product Download"
        ],
        "summary": "List with basic information of Product Download resources",
        "description": "Available since: 6.4.19.0",
        "operationId": "getProductDownloadList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Download resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductDownload"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-download?limit=25"
                                },
                                "last": {
                                  "example": "/product-download?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-download?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-download?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductDownload"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Download"
        ],
        "summary": "Create a new Product Download resources",
        "description": "Available since: 6.4.19.0",
        "operationId": "createProductDownload",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDownload"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-download/{id}": {
      "get": {
        "tags": [
          "Product Download"
        ],
        "summary": "Detailed information about a Product Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "getProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDownload"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Download"
        ],
        "summary": "Delete a Product Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "deleteProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Download"
        ],
        "summary": "Partially update information about a Product Download resource",
        "description": "Available since: 6.4.19.0",
        "operationId": "updateProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Download resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDownload"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-export": {
      "get": {
        "tags": [
          "Product Export"
        ],
        "summary": "List with basic information of Product Export resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExportList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Export resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductExport"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-export?limit=25"
                                },
                                "last": {
                                  "example": "/product-export?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-export?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-export?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductExport"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Export"
        ],
        "summary": "Create a new Product Export resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductExport",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductExport"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-export/{id}": {
      "get": {
        "tags": [
          "Product Export"
        ],
        "summary": "Detailed information about a Product Export resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Export"
        ],
        "summary": "Delete a Product Export resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Export"
        ],
        "summary": "Partially update information about a Product Export resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Export resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductExport"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-feature-set": {
      "get": {
        "tags": [
          "Product Feature Set"
        ],
        "summary": "List with basic information of Product Feature Set resources",
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Feature Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductFeatureSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-feature-set?limit=25"
                                },
                                "last": {
                                  "example": "/product-feature-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-feature-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-feature-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductFeatureSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Feature Set"
        ],
        "summary": "Create a new Product Feature Set resources",
        "description": "Available since: 6.3.0.0",
        "operationId": "createProductFeatureSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductFeatureSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFeatureSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-feature-set/{id}": {
      "get": {
        "tags": [
          "Product Feature Set"
        ],
        "summary": "Detailed information about a Product Feature Set resource",
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Feature Set"
        ],
        "summary": "Delete a Product Feature Set resource",
        "description": "Available since: 6.3.0.0",
        "operationId": "deleteProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Feature Set"
        ],
        "summary": "Partially update information about a Product Feature Set resource",
        "description": "Available since: 6.3.0.0",
        "operationId": "updateProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Feature Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductFeatureSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFeatureSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-keyword-dictionary": {
      "get": {
        "tags": [
          "Product Keyword Dictionary"
        ],
        "summary": "List with basic information of Product Keyword Dictionary resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionaryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Keyword Dictionary resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductKeywordDictionary"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-keyword-dictionary?limit=25"
                                },
                                "last": {
                                  "example": "/product-keyword-dictionary?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-keyword-dictionary?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-keyword-dictionary?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductKeywordDictionary"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Keyword Dictionary"
        ],
        "summary": "Create a new Product Keyword Dictionary resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductKeywordDictionary",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-keyword-dictionary/{id}": {
      "get": {
        "tags": [
          "Product Keyword Dictionary"
        ],
        "summary": "Detailed information about a Product Keyword Dictionary resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Keyword Dictionary"
        ],
        "summary": "Delete a Product Keyword Dictionary resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Keyword Dictionary"
        ],
        "summary": "Partially update information about a Product Keyword Dictionary resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Keyword Dictionary resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-manufacturer": {
      "get": {
        "tags": [
          "Product Manufacturer"
        ],
        "summary": "List with basic information of Product Manufacturer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Manufacturer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductManufacturer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-manufacturer?limit=25"
                                },
                                "last": {
                                  "example": "/product-manufacturer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-manufacturer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-manufacturer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductManufacturer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Manufacturer"
        ],
        "summary": "Create a new Product Manufacturer resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductManufacturer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductManufacturer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-manufacturer/{id}": {
      "get": {
        "tags": [
          "Product Manufacturer"
        ],
        "summary": "Detailed information about a Product Manufacturer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Manufacturer"
        ],
        "summary": "Delete a Product Manufacturer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Manufacturer"
        ],
        "summary": "Partially update information about a Product Manufacturer resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Manufacturer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductManufacturer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-media": {
      "get": {
        "tags": [
          "Product Media"
        ],
        "summary": "List with basic information of Product Media resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMediaList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Media resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductMedia"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-media?limit=25"
                                },
                                "last": {
                                  "example": "/product-media?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-media?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-media?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductMedia"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Media"
        ],
        "summary": "Create a new Product Media resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductMedia",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductMedia"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMedia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-media/{id}": {
      "get": {
        "tags": [
          "Product Media"
        ],
        "summary": "Detailed information about a Product Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Media"
        ],
        "summary": "Delete a Product Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Media"
        ],
        "summary": "Partially update information about a Product Media resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Media resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductMedia"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMedia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-price": {
      "get": {
        "tags": [
          "Product Price"
        ],
        "summary": "List with basic information of Product Price resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-price?limit=25"
                                },
                                "last": {
                                  "example": "/product-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Price"
        ],
        "summary": "Create a new Product Price resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-price/{id}": {
      "get": {
        "tags": [
          "Product Price"
        ],
        "summary": "Detailed information about a Product Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Price"
        ],
        "summary": "Delete a Product Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Price"
        ],
        "summary": "Partially update information about a Product Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-review": {
      "get": {
        "tags": [
          "Product Review"
        ],
        "summary": "List with basic information of Product Review resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReviewList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Review resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductReview"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-review?limit=25"
                                },
                                "last": {
                                  "example": "/product-review?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-review?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-review?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductReview"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Review"
        ],
        "summary": "Create a new Product Review resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductReview",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReview"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-review/{id}": {
      "get": {
        "tags": [
          "Product Review"
        ],
        "summary": "Detailed information about a Product Review resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Review"
        ],
        "summary": "Delete a Product Review resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Review"
        ],
        "summary": "Partially update information about a Product Review resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Review resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReview"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-config": {
      "get": {
        "tags": [
          "Product Search Config"
        ],
        "summary": "List with basic information of Product Search Config resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-config?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Search Config"
        ],
        "summary": "Create a new Product Search Config resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-config/{id}": {
      "get": {
        "tags": [
          "Product Search Config"
        ],
        "summary": "Detailed information about a Product Search Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Search Config"
        ],
        "summary": "Delete a Product Search Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Search Config"
        ],
        "summary": "Partially update information about a Product Search Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-config-field": {
      "get": {
        "tags": [
          "Product Search Config Field"
        ],
        "summary": "List with basic information of Product Search Config Field resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigFieldList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Config Field resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfigField"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-config-field?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config-field?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfigField"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Search Config Field"
        ],
        "summary": "Create a new Product Search Config Field resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfigField",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-config-field/{id}": {
      "get": {
        "tags": [
          "Product Search Config Field"
        ],
        "summary": "Detailed information about a Product Search Config Field resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Search Config Field"
        ],
        "summary": "Delete a Product Search Config Field resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Search Config Field"
        ],
        "summary": "Partially update information about a Product Search Config Field resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Config Field resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-keyword": {
      "get": {
        "tags": [
          "Product Search Keyword"
        ],
        "summary": "List with basic information of Product Search Keyword resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeywordList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Keyword resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchKeyword"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-keyword?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-keyword?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-keyword?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-keyword?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchKeyword"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Search Keyword"
        ],
        "summary": "Create a new Product Search Keyword resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductSearchKeyword",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchKeyword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-search-keyword/{id}": {
      "get": {
        "tags": [
          "Product Search Keyword"
        ],
        "summary": "Detailed information about a Product Search Keyword resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Search Keyword"
        ],
        "summary": "Delete a Product Search Keyword resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Search Keyword"
        ],
        "summary": "Partially update information about a Product Search Keyword resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Keyword resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchKeyword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-sorting": {
      "get": {
        "tags": [
          "Product Sorting"
        ],
        "summary": "List with basic information of Product Sorting resources",
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSortingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Sorting resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSorting"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-sorting?limit=25"
                                },
                                "last": {
                                  "example": "/product-sorting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-sorting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-sorting?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSorting"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Sorting"
        ],
        "summary": "Create a new Product Sorting resources",
        "description": "Available since: 6.3.2.0",
        "operationId": "createProductSorting",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSorting"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSorting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-sorting/{id}": {
      "get": {
        "tags": [
          "Product Sorting"
        ],
        "summary": "Detailed information about a Product Sorting resource",
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Sorting"
        ],
        "summary": "Delete a Product Sorting resource",
        "description": "Available since: 6.3.2.0",
        "operationId": "deleteProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Sorting"
        ],
        "summary": "Partially update information about a Product Sorting resource",
        "description": "Available since: 6.3.2.0",
        "operationId": "updateProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Sorting resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSorting"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSorting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-stream": {
      "get": {
        "tags": [
          "Product Stream"
        ],
        "summary": "List with basic information of Product Stream resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Stream resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductStream"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-stream?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductStream"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Stream"
        ],
        "summary": "Create a new Product Stream resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStream",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStream"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStream"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-stream/{id}": {
      "get": {
        "tags": [
          "Product Stream"
        ],
        "summary": "Detailed information about a Product Stream resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Stream"
        ],
        "summary": "Delete a Product Stream resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Stream"
        ],
        "summary": "Partially update information about a Product Stream resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Stream resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStream"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStream"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-stream-filter": {
      "get": {
        "tags": [
          "Product Stream Filter"
        ],
        "summary": "List with basic information of Product Stream Filter resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilterList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Stream Filter resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductStreamFilter"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-stream-filter?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream-filter?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream-filter?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream-filter?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductStreamFilter"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Stream Filter"
        ],
        "summary": "Create a new Product Stream Filter resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStreamFilter",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStreamFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-stream-filter/{id}": {
      "get": {
        "tags": [
          "Product Stream Filter"
        ],
        "summary": "Detailed information about a Product Stream Filter resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Stream Filter"
        ],
        "summary": "Delete a Product Stream Filter resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Stream Filter"
        ],
        "summary": "Partially update information about a Product Stream Filter resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Stream Filter resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStreamFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-visibility": {
      "get": {
        "tags": [
          "Product Visibility"
        ],
        "summary": "List with basic information of Product Visibility resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibilityList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Visibility resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductVisibility"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-visibility?limit=25"
                                },
                                "last": {
                                  "example": "/product-visibility?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-visibility?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-visibility?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVisibility"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Product Visibility"
        ],
        "summary": "Create a new Product Visibility resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductVisibility",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductVisibility"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVisibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/product-visibility/{id}": {
      "get": {
        "tags": [
          "Product Visibility"
        ],
        "summary": "Detailed information about a Product Visibility resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Visibility"
        ],
        "summary": "Delete a Product Visibility resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Product Visibility"
        ],
        "summary": "Partially update information about a Product Visibility resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Visibility resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductVisibility"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVisibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "List with basic information of Promotion resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Promotion"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion?limit=25"
                                },
                                "last": {
                                  "example": "/promotion?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Promotion"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion"
        ],
        "summary": "Create a new Promotion resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotion",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Promotion"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion/{id}": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Detailed information about a Promotion resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion"
        ],
        "summary": "Delete a Promotion resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion"
        ],
        "summary": "Partially update information about a Promotion resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Promotion"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-discount": {
      "get": {
        "tags": [
          "Promotion Discount"
        ],
        "summary": "List with basic information of Promotion Discount resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Discount resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscount"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscount"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion Discount"
        ],
        "summary": "Create a new Promotion Discount resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscount",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscount"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-discount/{id}": {
      "get": {
        "tags": [
          "Promotion Discount"
        ],
        "summary": "Detailed information about a Promotion Discount resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion Discount"
        ],
        "summary": "Delete a Promotion Discount resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion Discount"
        ],
        "summary": "Partially update information about a Promotion Discount resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Discount resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscount"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-discount-prices": {
      "get": {
        "tags": [
          "Promotion Discount Prices"
        ],
        "summary": "List with basic information of Promotion Discount Prices resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPricesList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Discount Prices resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscountPrices"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount-prices?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount-prices?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount-prices?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount-prices?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscountPrices"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion Discount Prices"
        ],
        "summary": "Create a new Promotion Discount Prices resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscountPrices",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-discount-prices/{id}": {
      "get": {
        "tags": [
          "Promotion Discount Prices"
        ],
        "summary": "Detailed information about a Promotion Discount Prices resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion Discount Prices"
        ],
        "summary": "Delete a Promotion Discount Prices resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion Discount Prices"
        ],
        "summary": "Partially update information about a Promotion Discount Prices resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Discount Prices resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-individual-code": {
      "get": {
        "tags": [
          "Promotion Individual Code"
        ],
        "summary": "List with basic information of Promotion Individual Code resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCodeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Individual Code resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionIndividualCode"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-individual-code?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-individual-code?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-individual-code?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-individual-code?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionIndividualCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion Individual Code"
        ],
        "summary": "Create a new Promotion Individual Code resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionIndividualCode",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-individual-code/{id}": {
      "get": {
        "tags": [
          "Promotion Individual Code"
        ],
        "summary": "Detailed information about a Promotion Individual Code resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion Individual Code"
        ],
        "summary": "Delete a Promotion Individual Code resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion Individual Code"
        ],
        "summary": "Partially update information about a Promotion Individual Code resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Individual Code resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-sales-channel": {
      "get": {
        "tags": [
          "Promotion Sales Channel"
        ],
        "summary": "List with basic information of Promotion Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion Sales Channel"
        ],
        "summary": "Create a new Promotion Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-sales-channel/{id}": {
      "get": {
        "tags": [
          "Promotion Sales Channel"
        ],
        "summary": "Detailed information about a Promotion Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion Sales Channel"
        ],
        "summary": "Delete a Promotion Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion Sales Channel"
        ],
        "summary": "Partially update information about a Promotion Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-setgroup": {
      "get": {
        "tags": [
          "Promotion Setgroup"
        ],
        "summary": "List with basic information of Promotion Setgroup resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Setgroup resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionSetgroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-setgroup?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-setgroup?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-setgroup?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-setgroup?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionSetgroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion Setgroup"
        ],
        "summary": "Create a new Promotion Setgroup resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSetgroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSetgroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSetgroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/promotion-setgroup/{id}": {
      "get": {
        "tags": [
          "Promotion Setgroup"
        ],
        "summary": "Detailed information about a Promotion Setgroup resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion Setgroup"
        ],
        "summary": "Delete a Promotion Setgroup resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Promotion Setgroup"
        ],
        "summary": "Partially update information about a Promotion Setgroup resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Setgroup resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSetgroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSetgroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/property-group": {
      "get": {
        "tags": [
          "Property Group"
        ],
        "summary": "List with basic information of Property Group resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Property Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/property-group?limit=25"
                                },
                                "last": {
                                  "example": "/property-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PropertyGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Property Group"
        ],
        "summary": "Create a new Property Group resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/property-group/{id}": {
      "get": {
        "tags": [
          "Property Group"
        ],
        "summary": "Detailed information about a Property Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Property Group"
        ],
        "summary": "Delete a Property Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Property Group"
        ],
        "summary": "Partially update information about a Property Group resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Property Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/property-group-option": {
      "get": {
        "tags": [
          "Property Group Option"
        ],
        "summary": "List with basic information of Property Group Option resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOptionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Property Group Option resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroupOption"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/property-group-option?limit=25"
                                },
                                "last": {
                                  "example": "/property-group-option?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group-option?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group-option?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PropertyGroupOption"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Property Group Option"
        ],
        "summary": "Create a new Property Group Option resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroupOption",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroupOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/property-group-option/{id}": {
      "get": {
        "tags": [
          "Property Group Option"
        ],
        "summary": "Detailed information about a Property Group Option resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Property Group Option"
        ],
        "summary": "Delete a Property Group Option resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Property Group Option"
        ],
        "summary": "Partially update information about a Property Group Option resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Property Group Option resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroupOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/rule": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "List with basic information of Rule resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Rule resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Rule"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/rule?limit=25"
                                },
                                "last": {
                                  "example": "/rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/rule?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Rule"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Rule"
        ],
        "summary": "Create a new Rule resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createRule",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Rule"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/rule/{id}": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "Detailed information about a Rule resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Rule"
        ],
        "summary": "Delete a Rule resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Rule"
        ],
        "summary": "Partially update information about a Rule resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Rule resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Rule"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/rule-condition": {
      "get": {
        "tags": [
          "Rule Condition"
        ],
        "summary": "List with basic information of Rule Condition resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleConditionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Rule Condition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/RuleCondition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/rule-condition?limit=25"
                                },
                                "last": {
                                  "example": "/rule-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/rule-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/rule-condition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RuleCondition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Rule Condition"
        ],
        "summary": "Create a new Rule Condition resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createRuleCondition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/RuleCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/rule-condition/{id}": {
      "get": {
        "tags": [
          "Rule Condition"
        ],
        "summary": "Detailed information about a Rule Condition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Rule Condition"
        ],
        "summary": "Delete a Rule Condition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Rule Condition"
        ],
        "summary": "Partially update information about a Rule Condition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Rule Condition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/RuleCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel": {
      "get": {
        "tags": [
          "Sales Channel"
        ],
        "summary": "List with basic information of Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Sales Channel"
        ],
        "summary": "Create a new Sales Channel resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel/{id}": {
      "get": {
        "tags": [
          "Sales Channel"
        ],
        "summary": "Detailed information about a Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Channel"
        ],
        "summary": "Delete a Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Sales Channel"
        ],
        "summary": "Partially update information about a Sales Channel resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-analytics": {
      "get": {
        "tags": [
          "Sales Channel Analytics"
        ],
        "summary": "List with basic information of Sales Channel Analytics resources",
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalyticsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Analytics resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelAnalytics"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-analytics?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-analytics?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-analytics?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-analytics?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelAnalytics"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Sales Channel Analytics"
        ],
        "summary": "Create a new Sales Channel Analytics resources",
        "description": "Available since: 6.2.0.0",
        "operationId": "createSalesChannelAnalytics",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelAnalytics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-analytics/{id}": {
      "get": {
        "tags": [
          "Sales Channel Analytics"
        ],
        "summary": "Detailed information about a Sales Channel Analytics resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Channel Analytics"
        ],
        "summary": "Delete a Sales Channel Analytics resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Sales Channel Analytics"
        ],
        "summary": "Partially update information about a Sales Channel Analytics resource",
        "description": "Available since: 6.2.0.0",
        "operationId": "updateSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Analytics resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelAnalytics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-domain": {
      "get": {
        "tags": [
          "Sales Channel Domain"
        ],
        "summary": "List with basic information of Sales Channel Domain resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomainList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Domain resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelDomain"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-domain?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-domain?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-domain?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-domain?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelDomain"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Sales Channel Domain"
        ],
        "summary": "Create a new Sales Channel Domain resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelDomain",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelDomain"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-domain/{id}": {
      "get": {
        "tags": [
          "Sales Channel Domain"
        ],
        "summary": "Detailed information about a Sales Channel Domain resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Channel Domain"
        ],
        "summary": "Delete a Sales Channel Domain resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Sales Channel Domain"
        ],
        "summary": "Partially update information about a Sales Channel Domain resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Domain resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelDomain"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-type": {
      "get": {
        "tags": [
          "Sales Channel Type"
        ],
        "summary": "List with basic information of Sales Channel Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-type?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Sales Channel Type"
        ],
        "summary": "Create a new Sales Channel Type resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/sales-channel-type/{id}": {
      "get": {
        "tags": [
          "Sales Channel Type"
        ],
        "summary": "Detailed information about a Sales Channel Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Channel Type"
        ],
        "summary": "Delete a Sales Channel Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Sales Channel Type"
        ],
        "summary": "Partially update information about a Sales Channel Type resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/salutation": {
      "get": {
        "tags": [
          "Salutation"
        ],
        "summary": "List with basic information of Salutation resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Salutation resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Salutation"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/salutation?limit=25"
                                },
                                "last": {
                                  "example": "/salutation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/salutation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/salutation?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Salutation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Salutation"
        ],
        "summary": "Create a new Salutation resources",
        "description": "Fetches salutations with a criteria obj.",
        "operationId": "createSalutation",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Salutation"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Salutation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/salutation/{id}": {
      "get": {
        "tags": [
          "Salutation"
        ],
        "summary": "Detailed information about a Salutation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Salutation"
        ],
        "summary": "Delete a Salutation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Salutation"
        ],
        "summary": "Partially update information about a Salutation resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Salutation resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Salutation"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Salutation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/scheduled-task": {
      "get": {
        "tags": [
          "Scheduled Task"
        ],
        "summary": "List with basic information of Scheduled Task resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTaskList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Scheduled Task resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ScheduledTask"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/scheduled-task?limit=25"
                                },
                                "last": {
                                  "example": "/scheduled-task?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/scheduled-task?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/scheduled-task?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScheduledTask"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Scheduled Task"
        ],
        "summary": "Create a new Scheduled Task resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createScheduledTask",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ScheduledTask"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/scheduled-task/{id}": {
      "get": {
        "tags": [
          "Scheduled Task"
        ],
        "summary": "Detailed information about a Scheduled Task resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Scheduled Task"
        ],
        "summary": "Delete a Scheduled Task resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Scheduled Task"
        ],
        "summary": "Partially update information about a Scheduled Task resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Scheduled Task resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ScheduledTask"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/script": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "List with basic information of Script resources",
        "description": "Available since: 6.4.7.0",
        "operationId": "getScriptList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Script resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Script"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/script?limit=25"
                                },
                                "last": {
                                  "example": "/script?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/script?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/script?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Script"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Script"
        ],
        "summary": "Create a new Script resources",
        "description": "Available since: 6.4.7.0",
        "operationId": "createScript",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Script"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/script/{id}": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "Detailed information about a Script resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "getScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Script"
        ],
        "summary": "Delete a Script resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Script"
        ],
        "summary": "Partially update information about a Script resource",
        "description": "Available since: 6.4.7.0",
        "operationId": "updateScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Script resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Script"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/seo-url": {
      "get": {
        "tags": [
          "Seo Url"
        ],
        "summary": "List with basic information of Seo Url resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Seo Url resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SeoUrl"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/seo-url?limit=25"
                                },
                                "last": {
                                  "example": "/seo-url?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SeoUrl"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Seo Url"
        ],
        "summary": "Create a new Seo Url resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrl",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrl"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/seo-url/{id}": {
      "get": {
        "tags": [
          "Seo Url"
        ],
        "summary": "Detailed information about a Seo Url resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Seo Url"
        ],
        "summary": "Delete a Seo Url resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Seo Url"
        ],
        "summary": "Partially update information about a Seo Url resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Seo Url resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrl"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/seo-url-template": {
      "get": {
        "tags": [
          "Seo Url Template"
        ],
        "summary": "List with basic information of Seo Url Template resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Seo Url Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SeoUrlTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/seo-url-template?limit=25"
                                },
                                "last": {
                                  "example": "/seo-url-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SeoUrlTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Seo Url Template"
        ],
        "summary": "Create a new Seo Url Template resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrlTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrlTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrlTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/seo-url-template/{id}": {
      "get": {
        "tags": [
          "Seo Url Template"
        ],
        "summary": "Detailed information about a Seo Url Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Seo Url Template"
        ],
        "summary": "Delete a Seo Url Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Seo Url Template"
        ],
        "summary": "Partially update information about a Seo Url Template resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Seo Url Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrlTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrlTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/shipping-method": {
      "get": {
        "tags": [
          "Shipping Method"
        ],
        "summary": "List with basic information of Shipping Method resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipping Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/shipping-method?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethod"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Shipping Method"
        ],
        "summary": "Create a new Shipping Method resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/shipping-method/{id}": {
      "get": {
        "tags": [
          "Shipping Method"
        ],
        "summary": "Detailed information about a Shipping Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Shipping Method"
        ],
        "summary": "Delete a Shipping Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Shipping Method"
        ],
        "summary": "Partially update information about a Shipping Method resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Shipping Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethod"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/shipping-method-price": {
      "get": {
        "tags": [
          "Shipping Method Price"
        ],
        "summary": "List with basic information of Shipping Method Price resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipping Method Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethodPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/shipping-method-price?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethodPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Shipping Method Price"
        ],
        "summary": "Create a new Shipping Method Price resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethodPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/shipping-method-price/{id}": {
      "get": {
        "tags": [
          "Shipping Method Price"
        ],
        "summary": "Detailed information about a Shipping Method Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Shipping Method Price"
        ],
        "summary": "Delete a Shipping Method Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Shipping Method Price"
        ],
        "summary": "Partially update information about a Shipping Method Price resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Shipping Method Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/snippet": {
      "get": {
        "tags": [
          "Snippet"
        ],
        "summary": "List with basic information of Snippet resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Snippet resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Snippet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/snippet?limit=25"
                                },
                                "last": {
                                  "example": "/snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Snippet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Snippet"
        ],
        "summary": "Create a new Snippet resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Snippet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/snippet/{id}": {
      "get": {
        "tags": [
          "Snippet"
        ],
        "summary": "Detailed information about a Snippet resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Snippet"
        ],
        "summary": "Delete a Snippet resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Snippet"
        ],
        "summary": "Partially update information about a Snippet resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Snippet resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Snippet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/snippet-set": {
      "get": {
        "tags": [
          "Snippet Set"
        ],
        "summary": "List with basic information of Snippet Set resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Snippet Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SnippetSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/snippet-set?limit=25"
                                },
                                "last": {
                                  "example": "/snippet-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SnippetSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Snippet Set"
        ],
        "summary": "Create a new Snippet Set resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippetSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SnippetSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnippetSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/snippet-set/{id}": {
      "get": {
        "tags": [
          "Snippet Set"
        ],
        "summary": "Detailed information about a Snippet Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Snippet Set"
        ],
        "summary": "Delete a Snippet Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Snippet Set"
        ],
        "summary": "Partially update information about a Snippet Set resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Snippet Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SnippetSet"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnippetSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine": {
      "get": {
        "tags": [
          "State Machine"
        ],
        "summary": "List with basic information of State Machine resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachine"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachine"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "State Machine"
        ],
        "summary": "Create a new State Machine resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachine",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachine"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine/{id}": {
      "get": {
        "tags": [
          "State Machine"
        ],
        "summary": "Detailed information about a State Machine resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "State Machine"
        ],
        "summary": "Delete a State Machine resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "State Machine"
        ],
        "summary": "Partially update information about a State Machine resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachine"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-history": {
      "get": {
        "tags": [
          "State Machine History"
        ],
        "summary": "List with basic information of State Machine History resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine History resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineHistory"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-history?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-history?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-history?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-history?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "State Machine History"
        ],
        "summary": "Create a new State Machine History resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineHistory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-history/{id}": {
      "get": {
        "tags": [
          "State Machine History"
        ],
        "summary": "Detailed information about a State Machine History resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "State Machine History"
        ],
        "summary": "Delete a State Machine History resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "State Machine History"
        ],
        "summary": "Partially update information about a State Machine History resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine History resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-state": {
      "get": {
        "tags": [
          "State Machine State"
        ],
        "summary": "List with basic information of State Machine State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-state?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineState"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "State Machine State"
        ],
        "summary": "Create a new State Machine State resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-state/{id}": {
      "get": {
        "tags": [
          "State Machine State"
        ],
        "summary": "Detailed information about a State Machine State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "State Machine State"
        ],
        "summary": "Delete a State Machine State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "State Machine State"
        ],
        "summary": "Partially update information about a State Machine State resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineState"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-transition": {
      "get": {
        "tags": [
          "State Machine Transition"
        ],
        "summary": "List with basic information of State Machine Transition resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransitionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine Transition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineTransition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-transition?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-transition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-transition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-transition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineTransition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "State Machine Transition"
        ],
        "summary": "Create a new State Machine Transition resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineTransition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/state-machine-transition/{id}": {
      "get": {
        "tags": [
          "State Machine Transition"
        ],
        "summary": "Detailed information about a State Machine Transition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "State Machine Transition"
        ],
        "summary": "Delete a State Machine Transition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "State Machine Transition"
        ],
        "summary": "Partially update information about a State Machine Transition resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine Transition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/system-config": {
      "get": {
        "tags": [
          "System Config"
        ],
        "summary": "List with basic information of System Config resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of System Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SystemConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/system-config?limit=25"
                                },
                                "last": {
                                  "example": "/system-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/system-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/system-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SystemConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "System Config"
        ],
        "summary": "Create a new System Config resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSystemConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SystemConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/system-config/{id}": {
      "get": {
        "tags": [
          "System Config"
        ],
        "summary": "Detailed information about a System Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "System Config"
        ],
        "summary": "Delete a System Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "System Config"
        ],
        "summary": "Partially update information about a System Config resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a System Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SystemConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "List with basic information of Tag resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTagList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tag resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Tag"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tag?limit=25"
                                },
                                "last": {
                                  "example": "/tag?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tag?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tag?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create a new Tag resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTag",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tag"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Detailed information about a Tag resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a Tag resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "summary": "Partially update information about a Tag resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tag resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tag"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "List with basic information of Tax resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTaxList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Tax"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tax?limit=25"
                                },
                                "last": {
                                  "example": "/tax?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tax"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Create a new Tax resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTax",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tax"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax/{id}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Detailed information about a Tax resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Delete a Tax resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Tax"
        ],
        "summary": "Partially update information about a Tax resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tax"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax-rule": {
      "get": {
        "tags": [
          "Tax Rule"
        ],
        "summary": "List with basic information of Tax Rule resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Rule resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TaxRule"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tax-rule?limit=25"
                                },
                                "last": {
                                  "example": "/tax-rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaxRule"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rule"
        ],
        "summary": "Create a new Tax Rule resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRule",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRule"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax-rule/{id}": {
      "get": {
        "tags": [
          "Tax Rule"
        ],
        "summary": "Detailed information about a Tax Rule resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Tax Rule"
        ],
        "summary": "Delete a Tax Rule resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Tax Rule"
        ],
        "summary": "Partially update information about a Tax Rule resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax Rule resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRule"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax-rule-type": {
      "get": {
        "tags": [
          "Tax Rule Type"
        ],
        "summary": "List with basic information of Tax Rule Type resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Rule Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TaxRuleType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tax-rule-type?limit=25"
                                },
                                "last": {
                                  "example": "/tax-rule-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaxRuleType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rule Type"
        ],
        "summary": "Create a new Tax Rule Type resources",
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRuleType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRuleType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRuleType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax-rule-type/{id}": {
      "get": {
        "tags": [
          "Tax Rule Type"
        ],
        "summary": "Detailed information about a Tax Rule Type resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Tax Rule Type"
        ],
        "summary": "Delete a Tax Rule Type resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Tax Rule Type"
        ],
        "summary": "Partially update information about a Tax Rule Type resource",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax Rule Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRuleType"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRuleType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/theme": {
      "get": {
        "tags": [
          "Theme"
        ],
        "summary": "List with basic information of Theme resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getThemeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Theme resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Theme"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/theme?limit=25"
                                },
                                "last": {
                                  "example": "/theme?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/theme?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/theme?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Theme"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Theme"
        ],
        "summary": "Create a new Theme resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTheme",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Theme"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/theme/{id}": {
      "get": {
        "tags": [
          "Theme"
        ],
        "summary": "Detailed information about a Theme resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Theme"
        ],
        "summary": "Delete a Theme resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Theme"
        ],
        "summary": "Partially update information about a Theme resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Theme resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Theme"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/unit": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "List with basic information of Unit resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnitList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Unit resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Unit"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/unit?limit=25"
                                },
                                "last": {
                                  "example": "/unit?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/unit?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/unit?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Unit"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Unit"
        ],
        "summary": "Create a new Unit resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUnit",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Unit"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/unit/{id}": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "Detailed information about a Unit resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Unit"
        ],
        "summary": "Delete a Unit resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Unit"
        ],
        "summary": "Partially update information about a Unit resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Unit resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Unit"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List with basic information of User resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/User"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user?limit=25"
                                },
                                "last": {
                                  "example": "/user?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/User"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Detailed information about a User resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a User resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Partially update information about a User resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/User"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-access-key": {
      "get": {
        "tags": [
          "User Access Key"
        ],
        "summary": "List with basic information of User Access Key resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKeyList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Access Key resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserAccessKey"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user-access-key?limit=25"
                                },
                                "last": {
                                  "example": "/user-access-key?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-access-key?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-access-key?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserAccessKey"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "User Access Key"
        ],
        "summary": "Create a new User Access Key resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserAccessKey",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserAccessKey"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-access-key/{id}": {
      "get": {
        "tags": [
          "User Access Key"
        ],
        "summary": "Detailed information about a User Access Key resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "User Access Key"
        ],
        "summary": "Delete a User Access Key resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "User Access Key"
        ],
        "summary": "Partially update information about a User Access Key resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Access Key resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserAccessKey"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-config": {
      "get": {
        "tags": [
          "User Config"
        ],
        "summary": "List with basic information of User Config resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user-config?limit=25"
                                },
                                "last": {
                                  "example": "/user-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "User Config"
        ],
        "summary": "Create a new User Config resources",
        "description": "Available since: 6.3.5.0",
        "operationId": "createUserConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-config/{id}": {
      "get": {
        "tags": [
          "User Config"
        ],
        "summary": "Detailed information about a User Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "User Config"
        ],
        "summary": "Delete a User Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "User Config"
        ],
        "summary": "Partially update information about a User Config resource",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-recovery": {
      "get": {
        "tags": [
          "User Recovery"
        ],
        "summary": "List with basic information of User Recovery resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecoveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Recovery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserRecovery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/user-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-recovery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserRecovery"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "User Recovery"
        ],
        "summary": "Create a new User Recovery resources",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserRecovery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserRecovery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRecovery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user-recovery/{id}": {
      "get": {
        "tags": [
          "User Recovery"
        ],
        "summary": "Detailed information about a User Recovery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "User Recovery"
        ],
        "summary": "Delete a User Recovery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "User Recovery"
        ],
        "summary": "Partially update information about a User Recovery resource",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Recovery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserRecovery"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRecovery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/webhook": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "List with basic information of Webhook resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhookList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhook resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Webhook"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/webhook?limit=25"
                                },
                                "last": {
                                  "example": "/webhook?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Create a new Webhook resources",
        "description": "Available since: 6.3.1.0",
        "operationId": "createWebhook",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/webhook/{id}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Detailed information about a Webhook resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete a Webhook resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Webhook"
        ],
        "summary": "Partially update information about a Webhook resource",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Webhook resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/webhook-event-log": {
      "get": {
        "tags": [
          "Webhook Event Log"
        ],
        "summary": "List with basic information of Webhook Event Log resources",
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLogList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhook Event Log resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/WebhookEventLog"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/webhook-event-log?limit=25"
                                },
                                "last": {
                                  "example": "/webhook-event-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook-event-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook-event-log?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebhookEventLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Webhook Event Log"
        ],
        "summary": "Create a new Webhook Event Log resources",
        "description": "Available since: 6.4.1.0",
        "operationId": "createWebhookEventLog",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "detail"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/WebhookEventLog"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEventLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/webhook-event-log/{id}": {
      "get": {
        "tags": [
          "Webhook Event Log"
        ],
        "summary": "Detailed information about a Webhook Event Log resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook Event Log"
        ],
        "summary": "Delete a Webhook Event Log resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Webhook Event Log"
        ],
        "summary": "Partially update information about a Webhook Event Log resource",
        "description": "Available since: 6.4.1.0",
        "operationId": "updateWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Webhook Event Log resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/WebhookEventLog"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEventLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": [
          "Authorization & Authentication"
        ],
        "summary": "Fetch an access token",
        "description": "Fetch a access token that can be used to perform authenticated requests",
        "operationId": "token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "For more information take a look at the [Authentication documentation](https://shopware.stoplight.io/docs/admin-api/docs/concepts/authentication-authorisation.md).",
                "required": [
                  "grant_type"
                ],
                "properties": {
                  "grant_type": {
                    "description": "The grant type that should be used. See [OAuth 2.0 grant](https://oauth2.thephpleague.com/authorization-server/which-grant/) for more information.",
                    "type": "string",
                    "enum": [
                      "password",
                      "refresh_token",
                      "client_credentials"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authorized successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token_type": {
                      "description": "Type of the token.",
                      "type": "string"
                    },
                    "expires_in": {
                      "description": "Token lifetime in seconds.",
                      "type": "integer"
                    },
                    "access_token": {
                      "description": "The access token that can be used for subsequent requests",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_info/events.json": {
      "get": {
        "tags": [
          "System Info & Healthcheck"
        ],
        "summary": "Get Business events",
        "description": "Get a list of about the business events.",
        "operationId": "business-events",
        "responses": {
          "200": {
            "description": "Returns a list of about the business events.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/businessEventsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/_action/database/sync-migration": {
      "post": {
        "tags": [
          "Database Migrations"
        ],
        "deprecated": true,
        "summary": "Sync migrations to the database",
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Reads all migrations of the provided bundle name and inserts them to the `migration` database table.",
        "operationId": "syncMigrations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string",
                    "default": "core"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        }
      }
    },
    "/_action/database/migrate": {
      "post": {
        "tags": [
          "Database Migrations"
        ],
        "deprecated": true,
        "summary": "Execute migrations",
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Executes all migrations for the provided bundle name.",
        "operationId": "migrate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string",
                    "default": "core"
                  },
                  "limit": {
                    "description": "Limit the amout of migrations to be executed. By default, there is no limit.",
                    "type": "integer"
                  },
                  "until": {
                    "description": "A timestamp that controls until which `creation_date` migrations are executed.\n    By default, all migrations are executed.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        }
      }
    },
    "/_action/database/migrate-destructive": {
      "post": {
        "tags": [
          "Database Migrations"
        ],
        "deprecated": true,
        "summary": "Execute destructive migrations",
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Executes all destructive migrations for the provided bundle name.",
        "operationId": "migrateDestructive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string",
                    "default": "core"
                  },
                  "mode": {
                    "description": " The mode defines what type of migrations are executed.\n    * Possible values:\n    * `all`: Execute all migrations\n    * `blue-green`: Blue-green safe\n        * update from 6.a.* to 6.(a+1).0 -> migrations for major 6.a are NOT executed\n        * rollback from 6.(a+1).0 to 6.a.* is still possible\n        * update from 6.(a+1).0 to 6.(a+1).1 or higher - migrations for major 6.a are executed\n        * rollback possible from 6.(a+1).1 to 6.(a+1).0 possible\n        * but rollback to 6.a.* not possible anymore!\n    * `safe`: Executing the migrations of the penultimate major. This should always be safe",
                    "type": "string",
                    "default": "safe",
                    "enum": [
                      "all",
                      "blue-green",
                      "safe"
                    ]
                  },
                  "limit": {
                    "description": "Limit the amout of migrations to be executed. By default, there is no limit.",
                    "type": "integer"
                  },
                  "until": {
                    "description": "A timestamp that controls until which `creation_date` migrations are executed.\n        By default, all migrations are executed.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        }
      }
    },
    "/_action/scheduled-task/run": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Run scheduled tasks.",
        "description": "Starts the scheduled task worker to handle the next scheduled tasks.",
        "operationId": "runScheduledTasks",
        "responses": {
          "200": {
            "description": "Returns a success message indicating a successful run.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "description": "Success message",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/scheduled-task/min-run-interval": {
      "get": {
        "tags": [
          "System Operations"
        ],
        "summary": "Get the minimum schedules task interval",
        "description": "Fetches the smallest interval that a scheduled task uses.",
        "operationId": "getMinRunInterval",
        "responses": {
          "200": {
            "description": "Returns the minimum interval.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minRunInterval": {
                      "description": "Minimal interval in seconds.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/indexing": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Run indexer",
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "indexing",
        "responses": {
          "200": {
            "description": "Returns an empty response indicating that the indexing process started."
          }
        }
      }
    },
    "/_action/indexing/{indexer}": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Iterate an indexer",
        "description": "Starts a defined indexer with an offset.\n\nfor the next request. `finish: true` in the response indicates that the indexer is finished",
        "operationId": "iterate",
        "parameters": [
          {
            "name": "indexer",
            "in": "path",
            "description": "Name of the indexer to iterate.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "offset": {
                    "description": "The offset for the iteration.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the iteration.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "finish": {
                      "description": "Indicates if the indexing process finished.",
                      "type": "boolean"
                    },
                    "offset": {
                      "description": "Offset to be used for the next iteration.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/order_transaction/{orderTransactionId}/state/{transition}": {
      "post": {
        "tags": [
          "Order Management"
        ],
        "summary": "Transition an order transaction to a new state",
        "description": "Changes the order transaction state and informs the customer via email if configured.",
        "operationId": "orderTransactionStateTransition",
        "parameters": [
          {
            "name": "orderTransactionId",
            "in": "path",
            "description": "Identifier of the order transaction.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order transaction database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the transition that was made. `#/components/schemas/StateMachineTransition`"
          }
        }
      }
    },
    "/_info/openapi3.json": {
      "get": {
        "tags": [
          "System Info & Healthcheck"
        ],
        "summary": "Get OpenAPI Specification",
        "description": "Get information about the API in OpenAPI format.",
        "operationId": "api-info",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the api",
            "schema": {
              "type": "string",
              "enum": [
                "jsonapi",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns information about the API."
          }
        }
      }
    },
    "/_action/index": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Run indexer",
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "index",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "skip": {
                    "description": "Array of indexers/updaters to be skipped.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the indexing progress startet."
          }
        }
      }
    },
    "/_action/cleanup": {
      "delete": {
        "tags": [
          "System Operations"
        ],
        "summary": "Clear old cache folders",
        "description": "Removes cache folders that are not needed anymore.",
        "operationId": "clearOldCacheFolders",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cleanup finished."
          }
        }
      }
    },
    "/_action/cache_info": {
      "get": {
        "tags": [
          "System Operations"
        ],
        "summary": "Get cache information",
        "description": "Get information about the cache configuration",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "Information about the cache state.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "environment": {
                      "description": "The active environment.",
                      "type": "string"
                    },
                    "httpCache": {
                      "description": "State of the HTTP cache.",
                      "type": "boolean"
                    },
                    "cacheAdapter": {
                      "description": "The active cache adapter.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/cache": {
      "delete": {
        "tags": [
          "System Operations"
        ],
        "summary": "Clear caches",
        "description": "The cache is immediately cleared synchronously for all used adapters.",
        "operationId": "clearCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared."
          }
        }
      }
    },
    "/_action/number-range/reserve/{type}/{saleschannel}": {
      "get": {
        "tags": [
          "Document Management"
        ],
        "summary": "Reserve or preview a document number",
        "description": "This endpoint provides functionality to reserve or preview a document number which can be used to create a new document using the `/_action/order/{orderId}/document/{documentTypeName}` endpoint.\n\nThe number generated by the endpoint will be reserved and the number pointer will be incremented with every call. For preview purposes, you can add the `?preview=1` parameter to the request. In that case, the number will not be incremented.",
        "operationId": "numberRangeReserve",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "`technicalName` of the document type (e.g. `document_invoice`). Available types can be fetched with the `/api/document-type endpoint`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saleschannel",
            "in": "path",
            "description": "Sales channel for the number range. Number ranges can be defined per sales channel, so you can pass a sales channel ID here.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preview",
            "in": "query",
            "description": "If this parameter has a true value, the number will not actually be incremented, but only previewed.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The generated number",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "number": {
                      "description": "The generated (or previewed) document number.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Number range not found"
          }
        }
      }
    },
    "/_action/index-products": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Send product indexing message",
        "description": "Dispachtes an product indexing message to the message bus, with the provided ids",
        "operationId": "productIndexing",
        "responses": {
          "204": {
            "description": "Returns an empty response indicating that the message dispatched."
          }
        }
      }
    },
    "/_action/order/document/download": {
      "post": {
        "tags": [
          "Document Management"
        ],
        "summary": "Download a documents",
        "description": "Download a multiple documents in one pdf file.",
        "operationId": "downloadDocuments",
        "requestBody": {
          "description": "documentIds",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The documents.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/_action/order/{orderId}/document/{documentTypeName}": {
      "post": {
        "tags": [
          "Document Management"
        ],
        "summary": "Create a document for an order",
        "description": "Creates a document for an order. A document can for example be an invoice or a delivery note.",
        "operationId": "createOrderDocument",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Identifier of the order the document should be generated for",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "documentTypeName",
            "in": "path",
            "description": "`technicalName` of the document type. Available types can be fetched with the `/api/document-type` endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "Filetype of the document beeing created",
            "schema": {
              "type": "string",
              "default": "pdf"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "config": {
                    "description": "Additional configuration. At least a unique `documentNumber` should be provided",
                    "type": "object",
                    "properties": {
                      "documentNumber": {
                        "description": "A unique incremental number for the document. The `api.action.number-range.reserve` route can be used to fetch a free number. The type parameter for that route should match the document type, for example `document_invoice`, check the `number_range_type` entity for more types.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "referenced_document_id": {
                    "description": "Identifier of the referenced document."
                  },
                  "static": {
                    "description": "Static has to be set to `true` if a custom document is uploaded. This prevents the generation of a document and links to the uploaded media file"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document created successfully. The `api/_action/document/{documentId}/{deepLinkCode}` route can be used to download the document.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documentId": {
                      "description": "Identifier of the document.",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "documentDeepLink": {
                      "description": "A unique hash code which is required to open the document.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/_action/order/document/{documentTypeName}/create": {
      "post": {
        "tags": [
          "Document Management"
        ],
        "summary": "Create documents for orders",
        "description": "Creates documents for orders. Documents can for example be an invoice or a delivery note.",
        "operationId": "createDocuments",
        "parameters": [
          {
            "name": "documentTypeName",
            "in": "path",
            "description": "The type of document to create",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "test",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "orderId",
                    "type"
                  ],
                  "properties": {
                    "orderId": {
                      "description": "Identifier of the order.",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "type": {
                      "description": "Type of the document to be generated.",
                      "type": "string"
                    },
                    "fileType": {
                      "description": "Type of document file to be generated.",
                      "type": "string",
                      "default": "pdf"
                    },
                    "static": {
                      "description": "Indicate if the document should be static or not.",
                      "type": "boolean",
                      "default": false
                    },
                    "referencedDocumentId": {
                      "description": "Identifier of the reverenced document.",
                      "type": "string",
                      "default": "null",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "config": {
                      "description": "Document specific configuration, like documentNumber, documentDate, documentComment.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documents created successfully. The `api/_action/order/document/create` route can be used to download the document."
          }
        }
      }
    },
    "/_action/order/{orderId}/state/{transition}": {
      "post": {
        "tags": [
          "Order Management"
        ],
        "summary": "Transition an order to a new state",
        "description": "Changes the order state and informs the customer via email if configured.",
        "operationId": "orderStateTransition",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Identifier of the order.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        }
      }
    },
    "/_action/order_delivery/{orderDeliveryId}/state/{transition}": {
      "post": {
        "tags": [
          "Order Management"
        ],
        "summary": "Transition an order delivery to a new state",
        "description": "Changes the order delivery state and informs the customer via email if configured.",
        "operationId": "orderDeliveryStateTransition",
        "parameters": [
          {
            "name": "orderDeliveryId",
            "in": "path",
            "description": "Identifier of the order delivery.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition which is not possible, you will get an error that lists possible transition for the actual state.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be send to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order delivery database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        }
      }
    },
    "/_action/cache_warmup": {
      "delete": {
        "tags": [
          "System Operations"
        ],
        "summary": "Clear and warm up caches",
        "description": "After the cache has been cleared, new cache entries are generated asynchronously.",
        "operationId": "clearCacheAndScheduleWarmUp",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared and generation of new cache has started."
          }
        }
      }
    },
    "/_action/message-queue/consume": {
      "post": {
        "tags": [
          "System Operations"
        ],
        "summary": "Consume messages from the message queue.",
        "description": "This route can be used to consume messenges from the message queue. It is intended to be used if\nno cronjob is configured to consume messages regulary.",
        "operationId": "consumeMessages",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "receiver"
                ],
                "properties": {
                  "receiver": {
                    "description": "The name of the transport in the messenger that should be processed.\nSee the [Symfony Messenger documentation](https://symfony.com/doc/current/messenger.html) for more information",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about handled messages",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "handledMessages": {
                      "description": "The number of messages processed.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/order_transaction_capture_refund/{refundId}": {
      "post": {
        "tags": [
          "Order Management"
        ],
        "summary": "Refund an order transaction capture",
        "description": "Refunds an order transaction capture.",
        "operationId": "orderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "refundId",
            "in": "path",
            "description": "Identifier of the order transaction capture refund.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Refund was successful"
          },
          "400": {
            "description": "Something went wrong, while processing the refund"
          },
          "404": {
            "description": "Refund with id not found"
          }
        }
      }
    },
    "/_action/mail-template/send": {
      "post": {
        "tags": [
          "Mail Operations"
        ],
        "summary": "Send a mail",
        "description": "Generates a mail from a mail template and sends it to the customer.\n\nTake a look at the `salesChannel` entity for possible values. For example `{{ salesChannel.name }}` can be used.",
        "operationId": "send",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipients",
                  "salesChannelId",
                  "contentHtml",
                  "contentPlain",
                  "subject",
                  "senderName"
                ],
                "properties": {
                  "recipients": {
                    "description": "A list of recipients with name and mail address.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "salesChannelId": {
                    "description": "Identifier of the sales channel from which the mail should be send.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Subject of the mail.",
                    "type": "string"
                  },
                  "senderName": {
                    "description": "Name of the sender.",
                    "type": "string"
                  },
                  "senderEmail": {
                    "description": "Mail address of the sender. If not set, `core.basicInformation.email` or `core.mailerSettings.senderAddress` will be used from the shop configuration.",
                    "type": "string"
                  },
                  "mediaIds": {
                    "description": "List of media identifiers which should be attached to the mail.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  },
                  "binAttachments": {
                    "description": "A list of binary attachments which should be added to the mail.",
                    "required": [
                      "content",
                      "fileName",
                      "mimeType"
                    ],
                    "type": "array",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "Binary content of the attachment.",
                          "type": "string"
                        },
                        "fileName": {
                          "description": "File name of the attachment.",
                          "type": "string"
                        },
                        "mimeType": {
                          "description": "Mime type of the attachment.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "recipientsBcc": {
                    "description": "A list of recipients with name and mail address to be set in BCC.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "recipientsCc": {
                    "description": "A list of recipients with name and mail address to be set in CC.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "replyTo": {
                    "description": "A list of mail addresses with name and mail address to be set in reply to.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "returnPath": {
                    "description": "A list of mail addresses with name and mail address to be set in return path.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The mail was sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "size": {
                      "description": "Length of the email message",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/mail-template/validate": {
      "post": {
        "tags": [
          "Mail Operations"
        ],
        "summary": "Validate a mail content",
        "description": "Validates if content for a mail can be rendered without sending an email.",
        "operationId": "validate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "contentHtml",
                  "contentPlain"
                ],
                "properties": {
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating the mail content was rendered successfully."
          }
        }
      }
    },
    "/_action/mail-template/build": {
      "post": {
        "tags": [
          "Mail Operations"
        ],
        "summary": "Preview a mail template",
        "description": "Generates a preview of a mail template.",
        "operationId": "build",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "mailTemplateType",
                  "mailTemplate"
                ],
                "properties": {
                  "mailTemplateType": {
                    "description": "Only the property `templateData` is used. It provides additional variables to the templating engine.",
                    "properties": {
                      "templateData": {
                        "description": "An associative array that is handed over to the templating engine and can be used as variables in the mail content.",
                        "type": "object",
                        "example": {
                          "order": {
                            "orderNumber": 5000,
                            "customerName": "Example Customer"
                          },
                          "messageOfTheDay": "An apple a day keeps the doctor away!"
                        },
                        "additionalProperties": true
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplate": {
                    "description": "The content of the mail as plain text.",
                    "properties": {
                      "contentHtml": {
                        "description": "The content of mail mail template in html format.",
                        "type": "string",
                        "example": "Hello {{ order.customerName }}, this is example mail content, the current date is {{ 'now'|date('d/m/Y') }}"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The rendered preview of the mail template.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/_action/sync": {
      "post": {
        "tags": [
          "Bulk Operations"
        ],
        "summary": "Bulk edit entities",
        "description": "Starts a sync process for the list of provided actions. This can be inserts, upserts, updates and deletes on different entities. to an asynchronous process in the background. You can control the behaviour with the `single-operation` and `indexing-behavior` header.",
        "operationId": "sync",
        "parameters": [
          {
            "name": "fail-on-error",
            "in": "header",
            "description": "To continue upcoming actions on errors, set the `fail-on-error` header to `false`.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "single-operation",
            "in": "header",
            "description": "Controls weather the data is written at once or in seperate transactions.\n    - `true`: Data will be written in a single transaction",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "indexing-behavior",
            "in": "header",
            "description": "Controls the indexing behavior.\n    - `disable-indexing`: Data indexing is completely disabled",
            "schema": {
              "type": "string",
              "enum": [
                "use-queue-indexing",
                "disable-indexing"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "required": [
                    "action",
                    "entity",
                    "payload"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action indicates what should happen with the provided payload.\n    * `upsert`: The Sync API does not differ between create and update operations,\n    but always performs an upsert operation. During an upsert, the system checks whether the entity already exists in the\n    system and updates it if an identifier has been passed, otherwise a new entity is created with this identifier.\n    * `delete`: Deletes entites with the provided identifiers",
                      "type": "string",
                      "enum": [
                        "upsert",
                        "delete"
                      ]
                    },
                    "entity": {
                      "description": "The entity that should be processed with the payload.",
                      "type": "string",
                      "example": "product"
                    },
                    "payload": {
                      "description": "Contains a list of changesets for an entity. If the action type is `delete`,\n    a list of identifiers can be provided.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a sync result containing information about the updated entities",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Object with information about the updated entites",
                      "type": "object"
                    },
                    "success": {
                      "description": "Indicator if the sync was successful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/container_cache": {
      "delete": {
        "tags": [
          "System Operations"
        ],
        "summary": "Clear container caches",
        "description": "The container cache is immediately cleared synchronously.",
        "operationId": "clearContainerCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the container cache is cleared."
          }
        }
      }
    },
    "/_info/flow-actions.json": {
      "get": {
        "tags": [
          "System Info & Healthcheck"
        ],
        "summary": "Get actions for flow builder",
        "description": "Get a list of action for flow builder.",
        "operationId": "flow-actions",
        "responses": {
          "200": {
            "description": "Returns a list of action for flow builder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flowBulderActionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/_info/config": {
      "get": {
        "tags": [
          "System Info & Healthcheck"
        ],
        "summary": "Get API information",
        "description": "Get information about the API",
        "operationId": "config",
        "responses": {
          "200": {
            "description": "Returns information about the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/infoConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/_info/version": {
      "get": {
        "tags": [
          "System Info & Healthcheck"
        ],
        "summary": "Get the Shopware version",
        "description": "Get the version of the Shopware instance",
        "operationId": "infoShopwareVersion",
        "responses": {
          "200": {
            "description": "Returns the version of the Shopware instance.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "version": {
                      "description": "The Shopware version.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/media/{mediaId}/upload": {
      "post": {
        "tags": [
          "Asset Management"
        ],
        "summary": "Upload a file to a media entity",
        "description": "Adds a new file to a media entity. If the entity has an existing file, it will be replaced.\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "upload",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "Identifier of the media entity.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the uploaded file. If not provided the media identifier will be used as name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Extension of the uploaded file. For example `png`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "description": "The url of the media file that will be downloaded.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Media file uploaded successful",
            "headers": {
              "Location": {
                "description": "Contains the url to the uploaded media for a redirect.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/_action/document/{documentId}/{deepLinkCode}": {
      "get": {
        "tags": [
          "Document Management"
        ],
        "summary": "Download a document",
        "description": "Download a document by its identifier and deep link code.",
        "operationId": "downloadDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Identifier of the document to be downloaded.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "deepLinkCode",
            "in": "path",
            "description": "A unique hash code which was generated when the document was created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "This parameter controls the `Content-Disposition` header. If set to `true` the header will be set to `attachment` else `inline`.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/_action/document/{documentId}/upload": {
      "post": {
        "tags": [
          "Document Management"
        ],
        "summary": "Upload a file for a document",
        "description": "Uploads a file for a document. This prevents the document from being dynamically generated and delivers the uploaded file instead, when the document is downloaded.\n\nNote:\n* The document is required to be `static`\n* A document can only have one media file\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "uploadToDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Identifier of the document the new file should be added to.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the uploaded file.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Extension of the uploaded file. For example `pdf`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "description": "The url of the document that will be downloaded.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documentId": {
                      "description": "Identifier of the document.",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "documentDeepLink": {
                      "description": "A unique hash code which is required to open the document.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "success": {
        "required": [
          "data"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [
              {
                "$ref": "#/components/schemas/links"
              },
              {
                "$ref": "#/components/schemas/pagination"
              }
            ]
          },
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "failure": {
        "required": [
          "errors"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "info": {
        "required": [
          "meta"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/jsonapi"
          }
        },
        "type": "object"
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "uniqueItems": true
          }
        ]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/relationships"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "$ref": "#/components/schemas/link"
              }
            ]
          },
          "related": {
            "$ref": "#/components/schemas/link"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        }
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        ]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "additionalProperties": true
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "anyOf": [
          {
            "required": [
              "data"
            ]
          },
          {
            "required": [
              "meta"
            ]
          },
          {
            "required": [
              "links"
            ]
          },
          {
            "type": "object",
            "properties": {
              "links": {
                "$ref": "#/components/schemas/relationshipLinks"
              },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/relationshipToOne"
                  },
                  {
                    "$ref": "#/components/schemas/relationshipToMany"
                  }
                ]
              }
            }
          }
        ],
        "additionalProperties": false
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          {
            "$ref": "#/components/schemas/linkage"
          }
        ]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/linkage"
        },
        "uniqueItems": true
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "last": {
            "description": "The last page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "prev": {
            "description": "The previous page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "description": "The next page of data",
            "type": "string",
            "format": "uri-reference"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "properties": {
          "version": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "error": {
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "status": {
            "type": "string",
            "description": "The HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "type": "string",
            "description": "An application-specific error code, expressed as a string value."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AclRoleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "privileges",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "privileges": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                }
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "users": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/ee3b85920ad74af3b45508f49de7e965/users"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user"
                            },
                            "id": {
                              "type": "string",
                              "example": "f2c2ca549ce745ae8f8001905e66e2d0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/ee3b85920ad74af3b45508f49de7e965/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "721f7b70b1134c89a43950f706bcb46f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "integrations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/ee3b85920ad74af3b45508f49de7e965/integrations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integration"
                            },
                            "id": {
                              "type": "string",
                              "example": "bb8e6f556351415d87a84572d3a25e04"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "privileges",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ACL role."
          },
          "name": {
            "type": "string",
            "description": "Name of the ACL role defined."
          },
          "description": {
            "type": "string",
            "description": "A short description of the ACL role."
          },
          "privileges": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "description": "Privileges like read, write, delete, etc."
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time and date when the ACL role was deleted."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "users": {
            "$ref": "#/components/schemas/User"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "integrations": {
            "$ref": "#/components/schemas/Integration"
          }
        },
        "type": "object"
      },
      "AclUserRole": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "userId",
          "aclRoleId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ACL user role."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "aclRoleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ACL role."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "aclRole": {
            "$ref": "#/components/schemas/AclRole"
          }
        },
        "type": "object"
      },
      "AppJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "path",
              "active",
              "configurable",
              "version",
              "allowDisable",
              "integrationId",
              "aclRoleId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "copyright": {
                "type": "string"
              },
              "license": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "configurable": {
                "type": "boolean"
              },
              "privacy": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "modules": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "mainModule": {
                "type": "object"
              },
              "cookies": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "allowDisable": {
                "type": "boolean"
              },
              "baseAppUrl": {
                "type": "string"
              },
              "allowedHosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "templateLoadPriority": {
                "type": "integer",
                "format": "int64"
              },
              "label": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "privacyPolicyExtensions": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "integrationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "aclRoleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "integration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/integration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b1a05a7777cc44f7b9e4b30b3c3a0fba"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRole": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/aclRole"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "acl_role"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "682f37dbf12242838e0485277ccf8d6c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/customFieldSets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set"
                            },
                            "id": {
                              "type": "string",
                              "example": "d866c95e42534091af058e68d330ec73"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "actionButtons": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/actionButtons"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_action_button"
                            },
                            "id": {
                              "type": "string",
                              "example": "14fc63b6e1df49c2aa20795ac90a427a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/templates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "5d3501ca86b44af692ebc283d8004247"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "webhooks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/webhooks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "webhook"
                            },
                            "id": {
                              "type": "string",
                              "example": "2552429cf4464032bbd89b198280ad0d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "d528847b2e574c4aa9fe2b5370b176cd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/cmsBlocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "7aef24754bfd454c9e3f03b7ca93cccd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/b73a1f3596fb48b99c8817bf3ff4ba36/flowActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_flow_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "50150d5506754b6884de4aacc7d77838"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "name",
          "path",
          "active",
          "configurable",
          "version",
          "allowDisable",
          "integrationId",
          "aclRoleId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of App."
          },
          "name": {
            "type": "string",
            "description": "Name of the app."
          },
          "path": {
            "type": "string",
            "description": "A relative URL to the app."
          },
          "author": {
            "type": "string",
            "description": "Creator of the App."
          },
          "copyright": {
            "type": "string",
            "description": "Legal rights on the created app."
          },
          "license": {
            "type": "string",
            "description": "Software license's like MIT, etc."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the app is enabled for selection."
          },
          "configurable": {
            "type": "boolean",
            "description": "When boolean value is `true`, the app is configurable for further customizations."
          },
          "privacy": {
            "type": "string",
            "description": "Privacy-related configuration properties like user data protection, consent mechanisms, or data privacy compliance for an app."
          },
          "version": {
            "type": "string",
            "description": "Version of the plugin."
          },
          "icon": {
            "description": "Icon for the app.",
            "type": "string",
            "readOnly": true
          },
          "modules": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Configuration properties or settings related to modules of an app."
          },
          "mainModule": {
            "type": "object",
            "description": "Configuration properties or settings related to main modules of an app."
          },
          "cookies": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Configuration properties or settings related to cookies of an app."
          },
          "allowDisable": {
            "type": "boolean",
            "description": "When boolean value is `true`, then the users have the option to deactivate specific aspects of the app."
          },
          "baseAppUrl": {
            "type": "string",
            "description": "Root URL for an app."
          },
          "allowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Indicates the allowed or permitted hosts that the application can communicate with or accept requests from."
          },
          "templateLoadPriority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one of the templates from the list."
          },
          "label": {
            "type": "string",
            "description": "Label given to an app."
          },
          "description": {
            "type": "string",
            "description": "A short description of app."
          },
          "privacyPolicyExtensions": {
            "type": "string",
            "description": "Parameter used to specify extensions or customizations related to the app's privacy policy."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "integrationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of integration."
          },
          "aclRoleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ACL Role."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "integration": {
            "$ref": "#/components/schemas/Integration"
          },
          "aclRole": {
            "$ref": "#/components/schemas/AclRole"
          },
          "customFieldSets": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "actionButtons": {
            "$ref": "#/components/schemas/AppActionButton"
          },
          "templates": {
            "$ref": "#/components/schemas/AppTemplate"
          },
          "webhooks": {
            "$ref": "#/components/schemas/Webhook"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          },
          "cmsBlocks": {
            "$ref": "#/components/schemas/AppCmsBlock"
          },
          "flowActions": {
            "$ref": "#/components/schemas/AppFlowAction"
          }
        },
        "type": "object"
      },
      "AppActionButtonJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "entity",
              "view",
              "url",
              "action",
              "openNewTab",
              "appId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entity": {
                "type": "string"
              },
              "view": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "openNewTab": {
                "type": "boolean"
              },
              "label": {
                "type": "string"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-action-button/848edbe346f74c9e87bc7e9deebaca38/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7fd7e3d2529646a3b4af627ca4f7e6e2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "entity",
          "view",
          "url",
          "action",
          "openNewTab",
          "appId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's action button."
          },
          "entity": {
            "type": "string",
            "description": "Indicates in which particular entity."
          },
          "view": {
            "type": "string",
            "description": "Indicates whether it is detail page view or listing page view."
          },
          "url": {
            "type": "string",
            "description": "An url associated with the AppActionButton."
          },
          "action": {
            "type": "string",
            "description": "Indicates the action or functionality that the button performs when clicked or interacted with."
          },
          "openNewTab": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "description": "Label given to AppActionButton."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "AppAdministrationSnippetJsonApi": {
        "description": "Added since version: 6.4.15.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "value",
              "appId",
              "localeId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "value": {
                "type": "string"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "localeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "required": [
          "value",
          "appId",
          "localeId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's administration snippet."
          },
          "value": {
            "type": "string",
            "description": "Value of App Administration Snippet."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "localeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity that specifies the language and country. "
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppCmsBlockJsonApi": {
        "description": "Added since version: 6.4.2.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "block",
              "template",
              "styles",
              "appId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "block": {
                "type": "object"
              },
              "template": {
                "type": "string"
              },
              "styles": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-cms-block/8b20acc48ef545de92cc7ae87079c604/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8648b0f31dbe455897881bb87fa89be6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "required": [
          "name",
          "block",
          "template",
          "styles",
          "appId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's CMS block."
          },
          "name": {
            "type": "string",
            "description": "Name of app's CMS block."
          },
          "block": {
            "type": "object",
            "description": "CMS block."
          },
          "template": {
            "type": "string",
            "description": "Template that defines app CMS block."
          },
          "styles": {
            "type": "string",
            "description": "Parameter that relates to the styles or formatting within CMS block."
          },
          "label": {
            "type": "string",
            "description": "Label given to AppCmsBlock."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "AppFlowActionJsonApi": {
        "description": "Added since version: 6.4.10.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "appId",
              "name",
              "url",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "badge": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "config": {
                "type": "object"
              },
              "headers": {
                "type": "object"
              },
              "requirements": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iconRaw": {
                "type": "string"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "swIcon": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "delayable": {
                "type": "boolean"
              },
              "label": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "headline": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-action/43c474b9e5f7400c91b77a1195b37bcf/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2d1528fca4d343e7a5e29c793a06f67b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-action/43c474b9e5f7400c91b77a1195b37bcf/flowSequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "2188a24f8c9c49f0a98df4f6838be6f7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "required": [
          "appId",
          "name",
          "url",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's flow action."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "name": {
            "type": "string",
            "description": "Name of app flow action."
          },
          "badge": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "description": "Parameters that hold data required for the specific action to be executed within flow."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "headers": {
            "type": "object",
            "description": "Indicates the header value within the context of app flow action."
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iconRaw": {
            "type": "string"
          },
          "icon": {
            "description": "Icon to identify app flow action.",
            "type": "string",
            "readOnly": true
          },
          "swIcon": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "description": "An URL to app flow action."
          },
          "delayable": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "description": "Label given to AppFlowAction."
          },
          "description": {
            "type": "string",
            "description": "A short description of AppFlowAction."
          },
          "headline": {
            "type": "string",
            "description": "A headline or title associated with the action."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "flowSequences": {
            "$ref": "#/components/schemas/FlowSequence"
          }
        },
        "type": "object"
      },
      "AppPaymentMethodJsonApi": {
        "description": "Added since version: 6.4.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "appName",
              "identifier",
              "paymentMethodId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "appName": {
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "payUrl": {
                "type": "string"
              },
              "finalizeUrl": {
                "type": "string"
              },
              "validateUrl": {
                "type": "string"
              },
              "captureUrl": {
                "type": "string"
              },
              "refundUrl": {
                "type": "string"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "originalMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/6bbcc567025548c2b62ff8fc06972e4e/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e820cd47eca1482c94e9521a769d6afb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "originalMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/6bbcc567025548c2b62ff8fc06972e4e/originalMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "14f58739d36e4cb2a0e47fb781a3cab6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/6bbcc567025548c2b62ff8fc06972e4e/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "07b9912c07514dba8203a3f0a7791f52"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "required": [
          "appName",
          "identifier",
          "paymentMethodId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's payment method."
          },
          "appName": {
            "type": "string",
            "description": "Name of the app."
          },
          "identifier": {
            "type": "string",
            "description": "It is a unique identity of an AppPaymentMethod."
          },
          "payUrl": {
            "type": "string",
            "description": "A URL sending the pay request."
          },
          "finalizeUrl": {
            "type": "string",
            "description": "A URL that redirects the user back to the shop."
          },
          "validateUrl": {
            "type": "string",
            "description": "A validate URL confirms the authenticity of a payment reference when accessed."
          },
          "captureUrl": {
            "type": "string",
            "description": "A capture URL allows the payments to be processed and completed once validated."
          },
          "refundUrl": {
            "type": "string",
            "description": "A refund URL is used to initiate the refund process for a purchase."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "originalMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of original media."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "originalMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "recurringUrl": {
            "description": "A URL to payment to handle recurring orders like subscriptions."
          }
        },
        "type": "object"
      },
      "AppScriptConditionJsonApi": {
        "description": "Added since version: 6.4.10.3",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "identifier",
              "active",
              "appId",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "identifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "group": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-script-condition/63d39c9dddd646d1bf52bff8d533b5d9/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "050c4531949348aa8422a011f67b8629"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "ruleConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-script-condition/63d39c9dddd646d1bf52bff8d533b5d9/ruleConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "95e9bd67f2cd42438c31ceb94b1f5091"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "required": [
          "identifier",
          "active",
          "appId",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's script condition."
          },
          "identifier": {
            "type": "string",
            "description": "It is a unique identity of an AppScriptCondition."
          },
          "name": {
            "type": "string",
            "description": "Unique name of app's script condition."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, defined app script conditions are available for selection."
          },
          "group": {
            "type": "string",
            "description": "Categorizes script conditions within a specific group."
          },
          "script": {
            "type": "string",
            "description": "Internal field."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "ruleConditions": {
            "$ref": "#/components/schemas/RuleCondition"
          }
        },
        "type": "object"
      },
      "AppTemplateJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "template",
              "path",
              "active",
              "appId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "template": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-template/530888470a194fc8bacb5f1c59f739ad/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9b17a850e6c142c6bd7a93a9e0f9c477"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "template",
          "path",
          "active",
          "appId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of App template."
          },
          "template": {
            "type": "string",
            "description": "Template for an app."
          },
          "path": {
            "type": "string",
            "description": "A relative URL to the app template."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, defined app templates are available for selection."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "CategoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "displayNestedProducts": {
                "type": "boolean"
              },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "breadcrumb": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                },
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": {
                "type": "string",
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "type": {
                "type": "string"
              },
              "productAssignmentType": {
                "type": "string"
              },
              "visible": {
                "type": "boolean"
              },
              "active": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "slotConfig": {
                "type": "object"
              },
              "linkType": {
                "type": "string"
              },
              "internalLink": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalLink": {
                "type": "string"
              },
              "linkNewTab": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "26082dded9d34aed93911b9a33366f56"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "eefad40b596147a1961e7bea8cf65c2e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "16f24e22b04744e8918de6457219aeed"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "8e92fd2a5d6843c583c17e0bdda330b9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "nestedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/nestedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "79d7e459982b4dce8407ed221993a08f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "0fcc05ab74e74ed59882d0949659446c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "58058e2d72c140949a675ff89d8ce541"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9d4204d79b2a42098374f75882eecd0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "navigationSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/navigationSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "d433a9a8974640a3986a6d2f1da16ffc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "footerSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/footerSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4bc4408b68394aefaa5e93c91ea1fd34"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "serviceSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/serviceSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4a6c82f63c214bfb91e62876c1d4f738"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "5b5ff6defb0145a598fb8e23c0482700"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3e80f0874e824b78a1173419b2184235/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "d4ea323780674e23b779b78309ae8945"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category's version."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent category."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent category's version."
          },
          "afterCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category under which the new category is to be created."
          },
          "afterCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category's version under which the new category is to be created."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media added to identify category."
          },
          "displayNestedProducts": {
            "type": "boolean",
            "description": "Shows nested categories on a product category page."
          },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "breadcrumb": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "readOnly": true,
            "description": "Breadcrumbs offer the users on the website the option to quickly find their way back to the homepage or another level of the website using internal links."
          },
          "level": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "An integer value that denotes the level of nesting of a particular category located in an hierarchical category tree. "
          },
          "path": {
            "type": "string",
            "readOnly": true,
            "description": "A relative URL to the category."
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Number of categories below the main category."
          },
          "type": {
            "type": "string",
            "description": "Type of categories like `page`, `folder`, `link`."
          },
          "productAssignmentType": {
            "type": "string",
            "description": "Type of product assignment: Dynamic product group as or `product_stream` or Manual assignment as `product`."
          },
          "visible": {
            "type": "boolean",
            "description": "Displays categories on category page when true."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the category is listed for selection."
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "slotConfig": {
            "type": "object",
            "description": "Specifies detailed information about how the CMS slots are configured for category."
          },
          "linkType": {
            "type": "string",
            "description": "linkType : `external`, `category`, `product`, `landing_page`."
          },
          "internalLink": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "When a particular category is clicked, it gets redirected to internal link."
          },
          "externalLink": {
            "type": "string",
            "description": "When a particular category is clicked, it gets redirected to external link."
          },
          "linkNewTab": {
            "type": "boolean",
            "description": "Category opens in a new tab of the browser."
          },
          "description": {
            "type": "string",
            "description": "Information about the category."
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the page for search results listings."
          },
          "keywords": {
            "type": "string",
            "description": "Keywords that help to search the category."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page's version."
          },
          "productStreamId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "parent": {
            "$ref": "#/components/schemas/Category"
          },
          "children": {
            "$ref": "#/components/schemas/Category"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "nestedProducts": {
            "$ref": "#/components/schemas/Product"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "navigationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "footerSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "serviceSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "customEntityTypeId": {
            "description": "Unique identity of custom entity type."
          }
        },
        "type": "object"
      },
      "CategoryTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "categoryId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category tag."
          },
          "categoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category."
          },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category's version."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "CmsBlockJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "position",
              "type",
              "sectionId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "sectionPosition": {
                "type": "string"
              },
              "marginTop": {
                "type": "string"
              },
              "marginBottom": {
                "type": "string"
              },
              "marginLeft": {
                "type": "string"
              },
              "marginRight": {
                "type": "string"
              },
              "backgroundColor": {
                "type": "string"
              },
              "backgroundMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "backgroundMediaMode": {
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "visibility": {
                "properties": {
                  "mobile": {
                    "type": "boolean"
                  },
                  "desktop": {
                    "type": "boolean"
                  },
                  "tablet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "sectionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsSectionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "section": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/b76486e8b72c4d91b97f270b54f22883/section"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_section"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cc426e5768434af6a5d8a5e5141dea2a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "backgroundMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/b76486e8b72c4d91b97f270b54f22883/backgroundMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2686732960994b2a89eb227a2c559de2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "slots": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/b76486e8b72c4d91b97f270b54f22883/slots"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_slot"
                            },
                            "id": {
                              "type": "string",
                              "example": "edb308ad20fe4bdc8db846d53082cc3f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "position",
          "type",
          "sectionId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS block."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Order of the block indicated by number like 0, 1, 2,..."
          },
          "type": {
            "type": "string",
            "description": "Type of block can be 'image`, `text`, 'product-listing`, `image-two-column`, etc."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then CmsBlock cannot be configured."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the CMS Block."
          },
          "sectionPosition": {
            "type": "string",
            "description": "Position of the section. It can either be `main` or `sidebar`."
          },
          "marginTop": {
            "type": "string",
            "description": "Defines the margin area on the top of an element."
          },
          "marginBottom": {
            "type": "string",
            "description": "Defines for the margin area on the bottom of an element."
          },
          "marginLeft": {
            "type": "string",
            "description": "Defines for the margin area on the left of an element."
          },
          "marginRight": {
            "type": "string",
            "description": "Defines the margin area on the right of an element."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Defines the background color of an element."
          },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of background media."
          },
          "backgroundMediaMode": {
            "type": "string",
            "description": "Background media mode accept values `cover`, `auto`, `contain`."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "visibility": {
            "properties": {
              "mobile": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in mobile mode."
              },
              "desktop": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in desktop mode."
              },
              "tablet": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in tablet mode."
              }
            },
            "type": "object"
          },
          "sectionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of section."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS Block version."
          },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS Section version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "section": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "slots": {
            "$ref": "#/components/schemas/CmsSlot"
          }
        },
        "type": "object"
      },
      "CmsPageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "type",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "entity": {
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "config": {
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "previewMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "locked": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "sections": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/sections"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_section"
                            },
                            "id": {
                              "type": "string",
                              "example": "f4705fa5e17d463aa8245b6874dc61eb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/previewMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8bb4ed7db2764d9a9a2512dd6aa6f077"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "59361368089247a1a484c0f0056bfbc9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "450951e16d2d4ef1ace79ab7b968323c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "homeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/homeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "7c91c30bcfc64d2a99be4a05bc0a705e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/523200b26e3d4a1f95d4fd4265e353eb/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "8c6cf187c2db4ea282bb5f4df59a8b50"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "type",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page version."
          },
          "name": {
            "type": "string",
            "description": "Name of the CMS page."
          },
          "type": {
            "type": "string",
            "description": "CMS page types can be `landingpage`, `page`, `product_list`, `product_detail`."
          },
          "entity": {
            "type": "string",
            "description": "This field will be implemented in the future."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "config": {
            "properties": {
              "backgroundColor": {
                "type": "string",
                "description": "Background color of the CMS page."
              }
            },
            "type": "object"
          },
          "previewMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media to be previewed."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then CmsPage cannot be configured."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "sections": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "previewMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "homeSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "CmsSectionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "position",
              "type",
              "pageId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "sizingMode": {
                "type": "string"
              },
              "mobileBehavior": {
                "type": "string"
              },
              "backgroundColor": {
                "type": "string"
              },
              "backgroundMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "backgroundMediaMode": {
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "pageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "visibility": {
                "properties": {
                  "mobile": {
                    "type": "boolean"
                  },
                  "desktop": {
                    "type": "boolean"
                  },
                  "tablet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "page": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/394d88ed13594dad9002a7c78b996ef2/page"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "39fdf1ab40c94a29ac8378398c76b3c7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "backgroundMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/394d88ed13594dad9002a7c78b996ef2/backgroundMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d7b3addb96394a6fb6af3abb54983b02"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "blocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/394d88ed13594dad9002a7c78b996ef2/blocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "730332d1036740c1884937dfdd924ca7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "position",
          "type",
          "pageId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS section."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Position of occurrence of each section denoted by numerical values 0, 1, 2..."
          },
          "type": {
            "type": "string",
            "description": "Types of sections can be `sidebar` or `fullwidth`."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then CmsSection cannot be configured."
          },
          "name": {
            "type": "string",
            "description": "Name of the CMS section defined."
          },
          "sizingMode": {
            "type": "string",
            "description": "Sizing mode can be `boxed` or `full_width`."
          },
          "mobileBehavior": {
            "type": "string",
            "description": "Hides the sidebar on mobile viewports. It can hold values such as 'mobile', 'wrap', any other string or be unset."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color of CMS page."
          },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS section's background media."
          },
          "backgroundMediaMode": {
            "type": "string",
            "description": "Background media mode can be `cover`, `auto` or `contain`."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "pageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of page where CMS section is defined."
          },
          "visibility": {
            "properties": {
              "mobile": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in mobile mode."
              },
              "desktop": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in desktop mode."
              },
              "tablet": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in tablet mode."
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS section's version."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "page": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "blocks": {
            "$ref": "#/components/schemas/CmsBlock"
          }
        },
        "type": "object"
      },
      "CmsSlotJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "type",
              "slot",
              "blockId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": {
                "type": "string"
              },
              "slot": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "config": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "data": {
                "type": "object",
                "readOnly": true
              },
              "blockId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsBlockVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "block": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-slot/94de6f43d95548c892b1e64d5aebc91f/block"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_block"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "71879414571347f4951a41967af1b91e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "type",
          "slot",
          "blockId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS slot."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "type": {
            "type": "string",
            "description": "It indicates the types of content that can be defined within the slot which includes `image`, `text`, `form`, `product-listing`, `category-navigation`, `product-box`, `buy-box`, `sidebar-filter`, etc."
          },
          "slot": {
            "type": "string",
            "description": "Key-value pair to configure which element to be shown in which slot."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then CMS slot config element cannot be configured."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about how the component is to be rendered."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "data": {
            "type": "object",
            "readOnly": true,
            "description": "Each cms slot (element) has a config that has values defined in the admin. When cms loads, each Resolver class adds the resolved config data to this value."
          },
          "blockId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS block where slot is defined."
          },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS block version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "block": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "VersionId": {
            "description": "Unique identity of CMS slot's version."
          },
          "fieldConfig": {
            "description": "Con info of cms slot"
          }
        },
        "type": "object"
      },
      "CountryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name",
              "addressFormat"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "shippingAvailable": {
                "type": "boolean"
              },
              "iso3": {
                "type": "string"
              },
              "displayStateInRegistration": {
                "type": "boolean"
              },
              "forceStateInRegistration": {
                "type": "boolean"
              },
              "companyTaxFree": {
                "type": "boolean",
                "deprecated": true
              },
              "checkVatIdPattern": {
                "type": "boolean"
              },
              "vatIdRequired": {
                "type": "boolean"
              },
              "taxFree": {
                "type": "boolean",
                "deprecated": true
              },
              "vatIdPattern": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerTax": {
                "required": [
                  "enabled",
                  "currencyId",
                  "amount"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "companyTax": {
                "required": [
                  "enabled",
                  "currencyId",
                  "amount"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "postalCodeRequired": {
                "type": "boolean"
              },
              "checkPostalCodePattern": {
                "type": "boolean"
              },
              "checkAdvancedPostalCodePattern": {
                "type": "boolean"
              },
              "advancedPostalCodePattern": {
                "type": "string"
              },
              "addressFormat": {
                "type": "object"
              },
              "defaultPostalCodePattern": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "377097ce23ea4a68b22001efd693dda5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "a6cb34bf42bd4432bf25204627abd652"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "a3dedec9a74441a19b97da8a392806ad"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "adfd95d3c20241de9e77ebe4215b9af7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "d62328cb1a1c49c1b709f9978eb286d3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/taxRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tax_rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "6b53bb0d640b42e9a8f3c53c7b560092"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currencyCountryRoundings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/bd036dc08dbe4ef1b815d6772d1e52bc/currencyCountryRoundings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "currency_country_rounding"
                            },
                            "id": {
                              "type": "string",
                              "example": "fcfe72aa9633455e82a30aecd15073a7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name",
          "addressFormat"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country."
          },
          "name": {
            "type": "string",
            "description": "Name of the country."
          },
          "iso": {
            "type": "string",
            "description": "Internationally recognized two-letter country codes. For example, DE, IN, NO, etc."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Numerical value that indicates the order in which the defined countries must be displayed in the frontend."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the country is available for selection in the storefront."
          },
          "shippingAvailable": {
            "type": "boolean",
            "description": "The shipping availability for a country is enabled when boolean value is `true`."
          },
          "iso3": {
            "type": "string",
            "description": "Internationally recognized three-letter country codes. For example, DEU, IND, NOR, etc."
          },
          "displayStateInRegistration": {
            "type": "boolean",
            "description": "The country's state is displayed in the address when boolean value is `true`."
          },
          "forceStateInRegistration": {
            "type": "boolean",
            "description": "State details in the address are force included when boolean value is `true`."
          },
          "companyTaxFree": {
            "type": "boolean",
            "deprecated": true
          },
          "checkVatIdPattern": {
            "type": "boolean",
            "description": "Verify if VAT ID is valid or not."
          },
          "vatIdRequired": {
            "type": "boolean",
            "description": "Set to true, if VAT ID is to be made mandatory."
          },
          "taxFree": {
            "type": "boolean",
            "deprecated": true
          },
          "vatIdPattern": {
            "type": "string",
            "description": "Unique VAT ID with country code and numbers, for example - GB999 9999"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "customerTax": {
            "required": [
              "enabled",
              "currencyId",
              "amount"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "The boolean value is `true` if the tax for the customer apply."
              },
              "currencyId": {
                "type": "string",
                "description": "Unique identity of currency."
              },
              "amount": {
                "type": "number",
                "format": "float",
                "description": "Sum of money to be paid by the customer."
              }
            },
            "type": "object"
          },
          "companyTax": {
            "required": [
              "enabled",
              "currencyId",
              "amount"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "The boolean value is `true`, if the tax for the company apply."
              },
              "currencyId": {
                "type": "string",
                "description": "Unique identity of currency."
              },
              "amount": {
                "type": "number",
                "format": "float",
                "description": "Sum of money to be paid by the company."
              }
            },
            "type": "object"
          },
          "postalCodeRequired": {
            "type": "boolean",
            "description": "The postal code is made mandatory specification in the address, when boolean value is `true`."
          },
          "checkPostalCodePattern": {
            "type": "boolean",
            "description": "Verify for valid postal code pattern."
          },
          "checkAdvancedPostalCodePattern": {
            "type": "boolean",
            "description": "Verify for advanced postal code pattern."
          },
          "advancedPostalCodePattern": {
            "type": "string",
            "description": "Wildcard formatted zip codes to allow easy searching in the frontend based on initial constants, for example - 24****, 1856**."
          },
          "addressFormat": {
            "type": "object",
            "description": "The address format with recipient's name, building number, street name, city, state and ZIP code on different lines as required."
          },
          "defaultPostalCodePattern": {
            "type": "string",
            "description": "Default pattern of postal or zip code."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "states": {
            "$ref": "#/components/schemas/CountryState"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "taxRules": {
            "$ref": "#/components/schemas/TaxRule"
          },
          "currencyCountryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          }
        },
        "type": "object"
      },
      "CountryStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "countryId",
              "shortCode",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shortCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/ddcd66c40c9d400bb1c2a13a7678988f/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "405ca069c311454d899ae02b8a4575a6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/ddcd66c40c9d400bb1c2a13a7678988f/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "2cff7aa44b604caab94a48f75c49a541"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/ddcd66c40c9d400bb1c2a13a7678988f/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "dfda5a38f37a405aa95e3d785a2801ab"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "shortCode",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country's state."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country."
          },
          "shortCode": {
            "type": "string",
            "description": "An abbreviation for the country's state."
          },
          "name": {
            "type": "string",
            "description": "Name of the country's state."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Numerical value that indicates the order in which the defined states must be displayed in the frontend."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the country's state is available for selection in the storefront."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          }
        },
        "type": "object"
      },
      "CurrencyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "factor": {
                "type": "number",
                "format": "float"
              },
              "symbol": {
                "type": "string"
              },
              "isoCode": {
                "type": "string"
              },
              "shortName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "taxFreeFrom": {
                "type": "number",
                "format": "float"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "2ff1a0290f6a4860ae6568706501a768"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "585b4008d64f4580a7dedc170f310edd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "078f38d416a54a839346a1adc970b543"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "e0eb3f7eaaf8410db0c3a75643183b6b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/promotionDiscountPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount_prices"
                            },
                            "id": {
                              "type": "string",
                              "example": "34d1c91e01294c3b8fdd0d5012b423ed"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "a0f6a2ec046f4725abf4170b7a09d1c6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryRoundings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/1d69a9f4ce3b4cce994cde155941094c/countryRoundings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "currency_country_rounding"
                            },
                            "id": {
                              "type": "string",
                              "example": "e1719ef1b201453ca094963766d9c011"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "factor": {
            "type": "number",
            "format": "float",
            "description": "Currency exchange rate."
          },
          "symbol": {
            "type": "string",
            "description": "A currency symbol is a graphical representation used as shorthand for a currency's name, for example US Dollar - $"
          },
          "isoCode": {
            "type": "string",
            "description": "Standard international three digit code to represent currency. For example, USD."
          },
          "shortName": {
            "type": "string",
            "description": "Acronym for international currencies. For example, USD."
          },
          "name": {
            "type": "string",
            "description": "Full name of the currency. For example, US-Dollar."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs for multiple currencies defined."
          },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices. "
              }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the round off amount to the nearest decimal points applied on the cart’s total amount. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval defines the cart’s total amount round off interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on cart’s total net prices. "
              }
            },
            "type": "object"
          },
          "taxFreeFrom": {
            "type": "number",
            "format": "float",
            "description": "The value from which the tax must be exempted."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "countryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          }
        },
        "type": "object"
      },
      "CurrencyCountryRoundingJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "currencyId",
              "countryId",
              "itemRounding",
              "totalRounding",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency-country-rounding/914979a7e7d6459cbd209f489143cdea/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6a7a9afc88de4349a4801a6949a4f1a7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency-country-rounding/914979a7e7d6459cbd209f489143cdea/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8789d0365955494cb3a20562ad2d987a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "currencyId",
          "countryId",
          "itemRounding",
          "totalRounding",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country's currency rounding."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the currency."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country."
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices."
              }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices. "
              }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          }
        },
        "type": "object"
      },
      "CustomEntityJsonApi": {
        "description": "Added since version: 6.4.9.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "fields",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "fields": {
                "type": "object"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "required": [
          "name",
          "fields",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom entity."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the entity."
          },
          "fields": {
            "type": "object",
            "description": "Fields in custom entity."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "flags": {
            "description": "Indicators used to specify certain settings or characteristics associated with the custom entity."
          },
          "pluginId": {
            "description": "Unique identity of plugin."
          },
          "customFieldsAware": {
            "description": "Parameter that indicates the areas in which the custom field is supported."
          },
          "labelProperty": {
            "description": "Specifies which property or attribute of the custom entity is used."
          }
        },
        "type": "object"
      },
      "CustomFieldJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "type",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "customFieldSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "allowCustomerWrite": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field/9c07c04958014d679c62d101e9a447f4/customFieldSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "39062735d6944117b57e8fa8c11c451c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfigFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field/9c07c04958014d679c62d101e9a447f4/productSearchConfigFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_config_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "5b863d75020a4650a0db28e4f8467a3d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "type",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field."
          },
          "name": {
            "type": "string",
            "description": "Unique name of a custom field."
          },
          "type": {
            "type": "string",
            "description": "Custom field type can be selection, media , etc"
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the custom field is enabled for use."
          },
          "customFieldSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customFieldSet."
          },
          "allowCustomerWrite": {
            "type": "boolean",
            "description": "When boolean value is `true`, then customers have permission to write data in the custom field."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "productSearchConfigFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          },
          "allowCartExpose": {
            "description": "When boolean value is `true`, then the custom field's data can be exposed within the shopping cart or order process."
          }
        },
        "type": "object"
      },
      "CustomFieldSetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "global": {
                "type": "boolean"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/1545763bc9074daf98f3d458f69c3710/customFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "9c48a12383d44ebc9c88c9ac95743572"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "relations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/1545763bc9074daf98f3d458f69c3710/relations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set_relation"
                            },
                            "id": {
                              "type": "string",
                              "example": "7c9ebdf1130c482a9c7885ac6c077132"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/1545763bc9074daf98f3d458f69c3710/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "6de7edcb1838444bab44720759f4d0e6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/1545763bc9074daf98f3d458f69c3710/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "dcb76b1f896246d0bce5b512c98e95f8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field set."
          },
          "name": {
            "type": "string",
            "description": "Unique name of a custom field set."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the custom field set is enabled for use."
          },
          "global": {
            "type": "boolean",
            "description": "When set to `true`, the custom field set can be used across all sales channels."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined custom field set to be displayed."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of an app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomField"
          },
          "relations": {
            "$ref": "#/components/schemas/CustomFieldSetRelation"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "CustomFieldSetRelationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "customFieldSetId",
              "entityName",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFieldSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set-relation/62eba832d05a4342b845244237b5294c/customFieldSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "934367bf436c4372904fe1bfc2b1db13"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customFieldSetId",
          "entityName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field set relation."
          },
          "customFieldSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field set."
          },
          "entityName": {
            "type": "string",
            "description": "Name of the entity."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          }
        },
        "type": "object"
      },
      "CustomerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "groupId",
              "defaultPaymentMethodId",
              "salesChannelId",
              "languageId",
              "defaultBillingAddressId",
              "defaultShippingAddressId",
              "customerNumber",
              "firstName",
              "lastName",
              "email",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "groupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultPaymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "lastPaymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultBillingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultShippingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "customerNumber": {
                "type": "string"
              },
              "salutationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "vatIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "affiliateCode": {
                "type": "string"
              },
              "campaignCode": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "doubleOptInRegistration": {
                "type": "boolean"
              },
              "doubleOptInEmailSentDate": {
                "type": "string",
                "format": "date-time"
              },
              "doubleOptInConfirmDate": {
                "type": "string",
                "format": "date-time"
              },
              "hash": {
                "type": "string"
              },
              "guest": {
                "type": "boolean"
              },
              "firstLogin": {
                "type": "string",
                "format": "date-time"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time"
              },
              "newsletter": {
                "type": "boolean"
              },
              "birthday": {
                "type": "string"
              },
              "lastOrderDate": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "orderCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "orderTotalAmount": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "customFields": {
                "type": "object"
              },
              "remoteAddress": {
                "type": "string"
              },
              "tagIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "requestedGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "boundSalesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdById": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "updatedById": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "group": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/group"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "25de2ed50b764b7aabef22f447007b78"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/defaultPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cf09566102da4fb78447be255502c958"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "97f3a726497345c19c2f5373161b64c3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d6a6b86e163e453f81a4001d6ccf5f64"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lastPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/lastPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "89813f57b5a74d49855681f774ddb0d6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultBillingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/defaultBillingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "a1d0b556cce745baa329123c6f8d3d28"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultShippingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/defaultShippingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "89abc75a333641cbbd8003f7bfd22c46"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "salutation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3504e34693204c86b063461e0405f34c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "addresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/addresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "f86bc6875dcf4cc19d37124e0220912f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/orderCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "0a47292414ae40169158fe030030565a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "42934365997b4aaca17324e3b06e0dab"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/promotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "e0ad2009e864434f97e2988891c9bc85"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "69b1465ad3ac4417a0f8b8c2f93413ee"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "recoveryCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/recoveryCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_recovery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e1c1256c699545d4a2fb85aad36dd7b2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "requestedGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/requestedGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "0126462ff06f4c70ba58af3c5bb75d26"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "boundSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/boundSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "843fd18356c94d0393e929f5195e439c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist"
                            },
                            "id": {
                              "type": "string",
                              "example": "068b822844e74586b723ba439293fd06"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/createdBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b086a36510124d76ac6f8adb058fff6e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/4a2c433cc4804357887c39da2b9d1ad5/updatedBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b8bea23dee6a4dbdb9eeb5c1375152f4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "groupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer group."
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default payment method."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "lastPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of previous payment method."
          },
          "defaultBillingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default billing address."
          },
          "defaultShippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default shipping address."
          },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Internal field."
          },
          "customerNumber": {
            "type": "string",
            "description": "Unique  number assigned to identity a customer."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "company": {
            "type": "string",
            "description": "Company name of the customer."
          },
          "email": {
            "type": "string",
            "description": "Email ID of the customer."
          },
          "title": {
            "type": "string",
            "description": "Titles or honorifics like Mr, Mrs, etc."
          },
          "vatIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identity of VAT."
          },
          "affiliateCode": {
            "type": "string",
            "description": "An affiliate code is an identification option with which website operators can mark outgoing links."
          },
          "campaignCode": {
            "type": "string",
            "description": "A campaign code is the globally unique identifier for a campaign."
          },
          "active": {
            "type": "boolean",
            "description": "To keep the status of the customer active, the boolean value is set to `true`."
          },
          "doubleOptInRegistration": {
            "type": "boolean",
            "description": "Set to `true` to allow user subscriptions to an email marketing list."
          },
          "doubleOptInEmailSentDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the double opt-in email was sent."
          },
          "doubleOptInConfirmDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the double opt-in email was confirmed."
          },
          "hash": {
            "type": "string",
            "description": "Password hash for customer recovery."
          },
          "guest": {
            "type": "boolean",
            "description": "Boolean value is `true` if it is to be a guest account."
          },
          "firstLogin": {
            "type": "string",
            "format": "date-time",
            "description": "To capture date and time of customer's first login."
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "description": "To capture date and time of customer's last login."
          },
          "newsletter": {
            "type": "boolean"
          },
          "birthday": {
            "type": "string",
            "description": "To capture customer's birthday details."
          },
          "lastOrderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Captures last order date."
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Captures the number of orders placed."
          },
          "orderTotalAmount": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Sum of total amount to be paid."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "remoteAddress": {
            "type": "string",
            "description": "Anonymous IP address of the customer for last session."
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of tag."
          },
          "requestedGroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of requested group."
          },
          "boundSalesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of bonus sales channel."
          },
          "createdById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "updatedById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "lastPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "addresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderCustomers": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "promotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "recoveryCustomer": {
            "$ref": "#/components/schemas/CustomerRecovery"
          },
          "requestedGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "boundSalesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlist"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/User"
          },
          "reviewCount": {
            "description": "Number of reviews the customer has given."
          },
          "accountType": {
            "description": "Account type can be personal or business."
          }
        },
        "type": "object"
      },
      "CustomerAddressJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "customerId",
              "countryId",
              "firstName",
              "lastName",
              "city",
              "street",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "department": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "additionalAddressLine1": {
                "type": "string"
              },
              "additionalAddressLine2": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/9401e60857a1420c9207187adf8485bd/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "de7b94497b874aed91590cdf2212330c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/9401e60857a1420c9207187adf8485bd/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b1314c9a350342eea4678129eb276b27"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/9401e60857a1420c9207187adf8485bd/countryState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3374dac093e544fa8b15d265b04340ca"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/9401e60857a1420c9207187adf8485bd/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "salutation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1a320ffcd65f40189645a025828bd958"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "city",
          "street",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer's address."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "countryStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country's state."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "zipcode": {
            "type": "string",
            "description": "Postal or zip code of customer's address."
          },
          "city": {
            "type": "string",
            "description": "Name of customer's city."
          },
          "company": {
            "type": "string",
            "description": "Name of customer's company."
          },
          "street": {
            "type": "string",
            "description": "Name of customer's street."
          },
          "department": {
            "type": "string",
            "description": "Name of customer's department."
          },
          "title": {
            "type": "string",
            "description": "Titles given to customer like Dr. , Prof., etc"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "Additional customer's address information."
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "Additional customer's address information."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "CustomerGroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "displayGross": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "registrationActive": {
                "type": "boolean"
              },
              "registrationTitle": {
                "type": "string"
              },
              "registrationIntroduction": {
                "type": "string"
              },
              "registrationOnlyCompanyRegistration": {
                "type": "boolean"
              },
              "registrationSeoMetaDescription": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/4247d56055ec448b8586a33b65a3595e/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "93f7c774284d4e5387eb5ec7c8f2d3eb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/4247d56055ec448b8586a33b65a3595e/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "5f98abe0bd73490fbc8b764eff1fc7e7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "registrationSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/4247d56055ec448b8586a33b65a3595e/registrationSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "c492e5f1b16a40cd8044ba7a8bfde97b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer's group."
          },
          "name": {
            "type": "string",
            "description": "Name of the customer group."
          },
          "displayGross": {
            "type": "boolean",
            "description": "If boolean value is `true` gross value is displayed else, net value will be displayed to the customer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "registrationActive": {
            "type": "boolean",
            "description": "To enable the registration of partner customer group."
          },
          "registrationTitle": {
            "type": "string",
            "description": "Title defined for the customer group during registration."
          },
          "registrationIntroduction": {
            "type": "string",
            "description": "A brief description about the registration."
          },
          "registrationOnlyCompanyRegistration": {
            "type": "boolean",
            "description": "Register as a company rather than as a private customer group."
          },
          "registrationSeoMetaDescription": {
            "type": "string",
            "description": "A short description of the registration page for search results listings."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "registrationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "CustomerGroupRegistrationSalesChannels": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "customerGroupId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer group registration sales channel."
          },
          "customerGroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer group."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "CustomerRecoveryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "hash",
              "customerId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hash": {
                "type": "string"
              },
              "customerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-recovery/4df0ada3110c4b269071efe748dae3f4/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "156b4a87fb0d409998b40a43756aa7b5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "hash",
          "customerId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer recovery account."
          },
          "hash": {
            "type": "string",
            "description": "Password hash for customer's account recovery."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "type": "object"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer tag."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "CustomerWishlistJsonApi": {
        "description": "Added since version: 6.3.4.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "customerId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/3407329fddc9434397d6d1208e66cd02/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist_product"
                            },
                            "id": {
                              "type": "string",
                              "example": "2d940d171dc14158bf4459cc788684bb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/3407329fddc9434397d6d1208e66cd02/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "44fd9eb00c9049d9bf407cba008b0f7d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/3407329fddc9434397d6d1208e66cd02/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "916f1cceb0644b59884e72b09ca5d061"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "required": [
          "customerId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer's wishlist."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "products": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "CustomerWishlistProductJsonApi": {
        "description": "Added since version: 6.3.4.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "wishlistId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "wishlistId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "wishlist": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist-product/a47282339a2d4c42bf1e1ebaac04dbc6/wishlist"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_wishlist"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1950d07437b04b079b0744b8e9bfe878"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist-product/a47282339a2d4c42bf1e1ebaac04dbc6/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "40de71cdbdf340ee812f723cf87292b0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "required": [
          "productId",
          "wishlistId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product in customer wishlist."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "wishlistId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the wishlist."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "wishlist": {
            "$ref": "#/components/schemas/CustomerWishlist"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "DeadMessageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "originalMessageClass",
              "handlerClass",
              "encrypted",
              "errorCount",
              "nextExecutionTime",
              "exception",
              "exceptionMessage",
              "exceptionFile",
              "exceptionLine",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "originalMessageClass": {
                "type": "string",
                "readOnly": true
              },
              "handlerClass": {
                "type": "string",
                "readOnly": true
              },
              "encrypted": {
                "type": "boolean",
                "readOnly": true
              },
              "errorCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "nextExecutionTime": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "exception": {
                "type": "string",
                "readOnly": true
              },
              "exceptionMessage": {
                "type": "string",
                "readOnly": true
              },
              "exceptionFile": {
                "type": "string",
                "readOnly": true
              },
              "exceptionLine": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "scheduledTaskId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "scheduledTask": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/dead-message/e9fc7c992e6f4b3b9b073cb73844a2e4/scheduledTask"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "scheduled_task"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ca0bcfe556824811bcdd34a3e7cf9f69"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "DeadMessage": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "originalMessageClass",
          "handlerClass",
          "encrypted",
          "errorCount",
          "nextExecutionTime",
          "exception",
          "exceptionMessage",
          "exceptionFile",
          "exceptionLine",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "originalMessageClass": {
            "type": "string",
            "readOnly": true
          },
          "handlerClass": {
            "type": "string",
            "readOnly": true
          },
          "encrypted": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "nextExecutionTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "exception": {
            "type": "string",
            "readOnly": true
          },
          "exceptionMessage": {
            "type": "string",
            "readOnly": true
          },
          "exceptionFile": {
            "type": "string",
            "readOnly": true
          },
          "exceptionLine": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "scheduledTaskId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "scheduledTask": {
            "$ref": "#/components/schemas/ScheduledTask"
          }
        },
        "type": "object"
      },
      "DeliveryTimeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "min",
              "max",
              "unit",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "min": {
                "type": "integer",
                "format": "int64"
              },
              "max": {
                "type": "integer",
                "format": "int64"
              },
              "unit": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/delivery-time/26adb33219264dbdb128b6da17ce9d1a/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "ad868908d49f47aab1b17818312ecca9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/delivery-time/26adb33219264dbdb128b6da17ce9d1a/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "8e2b10a4d60c4f7089bf6eb237c43f93"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "min",
          "max",
          "unit",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of delivery time."
          },
          "name": {
            "type": "string",
            "description": "Name given to delivery time."
          },
          "min": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum delivery time taken."
          },
          "max": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum delivery time taken."
          },
          "unit": {
            "type": "string",
            "description": "Unit in which the delivery time is defined. For example, days or hours."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "DocumentJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "documentTypeId",
              "fileType",
              "orderId",
              "config",
              "deepLinkCode",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fileType": {
                "type": "string"
              },
              "referencedDocumentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentMediaFileId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "config": {
                "type": "object"
              },
              "sent": {
                "type": "boolean"
              },
              "static": {
                "type": "boolean"
              },
              "deepLinkCode": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/00c1679797d0467f9e4478870cdf6ce7/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e0e32367fd3746c296a54c8baa22c896"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/00c1679797d0467f9e4478870cdf6ce7/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "15793dd8600f48a6a0fbaabde5e10c65"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "referencedDocument": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/00c1679797d0467f9e4478870cdf6ce7/referencedDocument"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "0b3134d8267d4cfc950a3bf7801dc537"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dependentDocuments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/00c1679797d0467f9e4478870cdf6ce7/dependentDocuments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document"
                            },
                            "id": {
                              "type": "string",
                              "example": "4c35a956d3ec43a1985743ce65b48109"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentMediaFile": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/00c1679797d0467f9e4478870cdf6ce7/documentMediaFile"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f1bdf6c8eaec42789a8ea8aea5fb7050"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document type."
          },
          "fileType": {
            "type": "string",
            "description": "Type of file like PDF."
          },
          "referencedDocumentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of reference document."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the order."
          },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document media file."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the order's version."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about how a document component is to be rendered."
          },
          "sent": {
            "type": "boolean",
            "description": "When `true`, the document is already sent to the customer."
          },
          "static": {
            "type": "boolean",
            "description": "When `true`, the document is uploaded else it is generated by the system."
          },
          "deepLinkCode": {
            "type": "string",
            "description": "It is a generated special code linked to email. It is used to access details of guest customer actions."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "referencedDocument": {
            "$ref": "#/components/schemas/Document"
          },
          "dependentDocuments": {
            "$ref": "#/components/schemas/Document"
          },
          "documentMediaFile": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "DocumentBaseConfigJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "documentTypeId",
              "name",
              "global",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "logoId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "filenamePrefix": {
                "type": "string"
              },
              "filenameSuffix": {
                "type": "string"
              },
              "global": {
                "type": "boolean"
              },
              "documentNumber": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "customFields": {
                "type": "object"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/f770ace5fad64a4389ea20294202a552/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ecea8058f37241a6956a286e950f8694"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "logo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/f770ace5fad64a4389ea20294202a552/logo"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d9475dc803df420892d636f98783e728"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/f770ace5fad64a4389ea20294202a552/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4cbf82fb605541f1bf55bad9b97d2d5f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "name",
          "global",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document base config."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document type."
          },
          "logoId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the company logo."
          },
          "name": {
            "type": "string",
            "description": "Name of the document."
          },
          "filenamePrefix": {
            "type": "string",
            "description": "A prefix name added to the file name separated by an underscore."
          },
          "filenameSuffix": {
            "type": "string",
            "description": "A suffix name added to the file name separated by an underscore."
          },
          "global": {
            "type": "boolean",
            "description": "When set to `true`, the document can be used across all sales channels."
          },
          "documentNumber": {
            "type": "string",
            "description": "Unique number associated with every document."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "logo": {
            "$ref": "#/components/schemas/Media",
            "description": "Logo in the document at the top-right corner."
          },
          "salesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          }
        },
        "type": "object"
      },
      "DocumentBaseConfigSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "documentBaseConfigId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentBaseConfigId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/c9a6b1c0af8e43e8b54ceea201eeac5c/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "31a155bef1774808819467c183ac04ea"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/c9a6b1c0af8e43e8b54ceea201eeac5c/documentBaseConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_base_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9321ed32ed2b4f98bc9c56f6c6b996d1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/c9a6b1c0af8e43e8b54ceea201eeac5c/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "55e13bf412f74916ae4a7c351c0929ac"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentBaseConfigId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document's base config sales channel."
          },
          "documentBaseConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document's base config."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "documentBaseConfig": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "DocumentTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "technicalName",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "technicalName": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "customFields": {
                "type": "object"
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/08c80331c2514e7d9599eb755b69d320/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document"
                            },
                            "id": {
                              "type": "string",
                              "example": "4a5bbfde93d447c2890dfe9af62e54b6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/08c80331c2514e7d9599eb755b69d320/documentBaseConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "ab2ad3fe8c1f441a9c8bda8a6786de25"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/08c80331c2514e7d9599eb755b69d320/documentBaseConfigSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "21e3db5be3414a9fa94825c8156eadeb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document type."
          },
          "name": {
            "type": "string",
            "description": "Name of the document type."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of document type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          }
        },
        "type": "object"
      },
      "EventActionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "eventName",
              "actionName",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "eventName": {
                "type": "string"
              },
              "actionName": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/event-action/a86482a94ded4993a32be3a84e880743/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "99f9c8728ef64fb8be991fc2289af82e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/event-action/a86482a94ded4993a32be3a84e880743/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "eb0bf45d702d4577a0ebbd02bd82208b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "EventAction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "eventName",
          "actionName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "eventName": {
            "type": "string"
          },
          "actionName": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "active": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rules": {
            "$ref": "#/components/schemas/Rule"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "EventActionRule": {
        "description": "Added since version: 6.3.3.0",
        "required": [
          "eventActionId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "eventActionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "eventAction": {
            "$ref": "#/components/schemas/EventAction"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "EventActionSalesChannel": {
        "description": "Added since version: 6.3.3.0",
        "required": [
          "eventActionId",
          "salesChannelId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "eventActionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "eventAction": {
            "$ref": "#/components/schemas/EventAction"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "FlowJsonApi": {
        "description": "Added since version: 6.4.6.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "eventName",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              },
              "priority": {
                "type": "integer",
                "format": "int64"
              },
              "invalid": {
                "type": "boolean",
                "readOnly": true
              },
              "active": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "sequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow/c15c06c038b742e7bb8b384344b9dafe/sequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "956d726740ac46b2a640a9f209042b34"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "required": [
          "name",
          "eventName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow."
          },
          "name": {
            "type": "string",
            "description": "Name of the flow."
          },
          "eventName": {
            "type": "string",
            "description": "Name of the event."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one of the flows from the list."
          },
          "invalid": {
            "type": "boolean",
            "readOnly": true,
            "description": "When the boolean value is `true`, the flow is no more available for usage."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the flow is available for selection."
          },
          "description": {
            "type": "string",
            "description": "A short description of the defined flow."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sequences": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "appFlowEventId": {
            "description": "Unique identity of app flow event."
          }
        },
        "type": "object"
      },
      "FlowSequenceJsonApi": {
        "description": "Added since version: 6.4.6.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "flowId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "flowId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "actionName": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "displayGroup": {
                "type": "integer",
                "format": "int64"
              },
              "trueCase": {
                "type": "boolean"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "appFlowActionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "flow": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/6ce0525687864dd59fe2c242b2175821/flow"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "flow"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f6ede6d488344f1f97c993141c31386b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/6ce0525687864dd59fe2c242b2175821/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b56a751227ae4960abdd9861a5ee97eb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/6ce0525687864dd59fe2c242b2175821/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "flow_sequence"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f33ff53373f54c1f905b949fa55679a8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/6ce0525687864dd59fe2c242b2175821/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "c0cf64577f5e4c75b9cad4ebcf34b469"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appFlowAction": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/6ce0525687864dd59fe2c242b2175821/appFlowAction"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_flow_action"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ec115b4675674c4699710d7bb0cdc179"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "required": [
          "flowId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow sequence."
          },
          "flowId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "actionName": {
            "type": "string",
            "description": "Unique name of the action in the flow sequence."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined flow sequence is to be displayed."
          },
          "displayGroup": {
            "type": "integer",
            "format": "int64",
            "description": "The group to which the flow sequence is visible."
          },
          "trueCase": {
            "type": "boolean"
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "appFlowActionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "flow": {
            "$ref": "#/components/schemas/Flow"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "parent": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "children": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "appFlowAction": {
            "$ref": "#/components/schemas/AppFlowAction"
          },
          "appFlowEventId": {
            "description": "Unique identity of app flow event."
          }
        },
        "type": "object"
      },
      "FlowTemplateJsonApi": {
        "description": "Added since version: 6.4.18.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "FlowTemplate": {
        "description": "Added since version: 6.4.18.0",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow template."
          },
          "name": {
            "type": "string",
            "description": "Name of the flow template."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportFileJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "originalName",
              "path",
              "expireDate",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "originalName": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "expireDate": {
                "type": "string",
                "format": "date-time"
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "accessToken": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "log": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-file/d9725f88a0a04da483ebaf4192ed8802/log"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cbba7bceee6449f9bc1f6e839de839fa"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "originalName",
          "path",
          "expireDate",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export file."
          },
          "originalName": {
            "type": "string",
            "description": "Original name of the import-export file."
          },
          "path": {
            "type": "string",
            "description": "A relative URL to the import-export file."
          },
          "expireDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of import-export file expiry."
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Size of the import-export file."
          },
          "accessToken": {
            "type": "string",
            "description": "Secret key to access import-export file."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "log": {
            "$ref": "#/components/schemas/ImportExportLog"
          }
        },
        "type": "object"
      },
      "ImportExportLogJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "activity",
              "state",
              "records",
              "config",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "activity": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "records": {
                "type": "integer",
                "format": "int64"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "profileId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fileId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "invalidRecordsLogId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "username": {
                "type": "string"
              },
              "profileName": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "result": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/93158d6fc4ff4e5fb91f4ea28f39017a/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e331841d1f974990a7f0e8af62fa806d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "profile": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/93158d6fc4ff4e5fb91f4ea28f39017a/profile"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_profile"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "343782237d584c25a4496b08c4e8f1cb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "file": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/93158d6fc4ff4e5fb91f4ea28f39017a/file"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_file"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6659d46bd2a6496b86304353667ee501"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "invalidRecordsLog": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/93158d6fc4ff4e5fb91f4ea28f39017a/invalidRecordsLog"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e7fa956920704c88853194f71c3fbf00"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "failedImportLog": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/93158d6fc4ff4e5fb91f4ea28f39017a/failedImportLog"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "63b6c37217474b68864eb6aeaba449bf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "activity",
          "state",
          "records",
          "config",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export log."
          },
          "activity": {
            "type": "string",
            "description": "Information about a specific activity or operation associated with an import-export event."
          },
          "state": {
            "type": "string",
            "description": "Parameter that indicates the status of an import-export process whether it is in progress, completed, or has encountered an error, for example."
          },
          "records": {
            "type": "integer",
            "format": "int64",
            "description": "Indicates the number of records involved in an import-export process."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the user."
          },
          "profileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the profile."
          },
          "fileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the file."
          },
          "invalidRecordsLogId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the invalid record logs."
          },
          "username": {
            "type": "string",
            "description": "Username of the user who initiated the import-export operation."
          },
          "profileName": {
            "type": "string",
            "description": "Name of the profile used for the import-export process."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "result": {
            "type": "object",
            "description": "The result or outcome of an import-export operation."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "profile": {
            "$ref": "#/components/schemas/ImportExportProfile"
          },
          "file": {
            "$ref": "#/components/schemas/ImportExportFile"
          },
          "invalidRecordsLog": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "failedImportLog": {
            "$ref": "#/components/schemas/ImportExportLog"
          }
        },
        "type": "object"
      },
      "ImportExportProfileJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "label",
              "sourceEntity",
              "fileType",
              "delimiter",
              "enclosure",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "systemDefault": {
                "type": "boolean"
              },
              "sourceEntity": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "delimiter": {
                "type": "string"
              },
              "enclosure": {
                "type": "string"
              },
              "mapping": {
                "type": "object"
              },
              "updateBy": {
                "type": "object"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "importExportLogs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-profile/53aa7aad52a24b7c907671d763519e27/importExportLogs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "import_export_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "55ee7cc740fc41d3beee69e98b3a7448"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "label",
          "sourceEntity",
          "fileType",
          "delimiter",
          "enclosure",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export profile."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the import-export file."
          },
          "label": {
            "type": "string",
            "description": "Label given to ImportExportProfile."
          },
          "type": {
            "type": "string",
            "description": "Import-export type can be orders, customers, categories."
          },
          "systemDefault": {
            "type": "boolean",
            "description": "When boolean value is true `true`, then its a system default profile."
          },
          "sourceEntity": {
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "description": "Type of file like PDF."
          },
          "delimiter": {
            "type": "string",
            "description": "Characters used as the delimiter for the specific profile, aiding in proper data parsing during import-export operations."
          },
          "enclosure": {
            "type": "string",
            "description": "Specifies the enclosure character used to wrap or enclose data fields, especially when those fields contain special characters or delimiters."
          },
          "mapping": {
            "type": "object",
            "description": "Defines the connection to the different database columns."
          },
          "updateBy": {
            "type": "object"
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "importExportLogs": {
            "$ref": "#/components/schemas/ImportExportLog"
          }
        },
        "type": "object"
      },
      "IntegrationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "label",
              "accessKey",
              "secretAccessKey",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "label": {
                "type": "string"
              },
              "accessKey": {
                "type": "string"
              },
              "secretAccessKey": {
                "type": "string"
              },
              "writeAccess": {
                "type": "boolean",
                "deprecated": true
              },
              "lastUsageAt": {
                "type": "string",
                "format": "date-time"
              },
              "admin": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "createdNotifications": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/18c3546325ff4b9bb5881639bc8bb048/createdNotifications"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "notification"
                            },
                            "id": {
                              "type": "string",
                              "example": "e89d660f5b3a4eaebd7a65a58a14afa1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/18c3546325ff4b9bb5881639bc8bb048/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "41a543f03b984b389e41b6d9ca8d3393"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRoles": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/18c3546325ff4b9bb5881639bc8bb048/aclRoles"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "acl_role"
                            },
                            "id": {
                              "type": "string",
                              "example": "fe192d895d0142a5ab892c9d0c7fbec9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "label",
          "accessKey",
          "secretAccessKey",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Integration."
          },
          "label": {
            "type": "string",
            "description": "Label given to Integration."
          },
          "accessKey": {
            "type": "string",
            "description": "Access key to store api."
          },
          "secretAccessKey": {
            "type": "string",
            "description": "Secret key required for secure communication."
          },
          "writeAccess": {
            "type": "boolean",
            "deprecated": true,
            "description": "This field is deprecated."
          },
          "lastUsageAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when teh integration was last used."
          },
          "admin": {
            "type": "boolean",
            "description": "When boolean value is `true`, it indicates this is a administrative integration that requires elevated permissions."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the integration was deleted."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "createdNotifications": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/integration/18c3546325ff4b9bb5881639bc8bb048/createdNotifications"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "notification"
                        },
                        "id": {
                          "type": "string",
                          "example": "e89d660f5b3a4eaebd7a65a58a14afa1"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "aclRoles": {
            "$ref": "#/components/schemas/AclRole"
          },
          "integrationId": {
            "description": "Unique identity of integration"
          },
          "aclRoleId": {
            "description": "Unique identity of ACL role."
          }
        },
        "type": "object"
      },
      "IntegrationRole": {
        "description": "Added since version: 6.3.3.0",
        "required": [
          "integrationId",
          "aclRoleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Integration role."
          },
          "integrationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "aclRoleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "integration": {
            "$ref": "#/components/schemas/Integration"
          },
          "role": {
            "$ref": "#/components/schemas/AclRole"
          }
        },
        "type": "object"
      },
      "LandingPageJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name",
              "url"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "active": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "slotConfig": {
                "type": "object"
              },
              "metaTitle": {
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/dd2cc5bfe2fc4399b8d73e80f1a5f107/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "6b8c33a7468647b78e750043695dfe5c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/dd2cc5bfe2fc4399b8d73e80f1a5f107/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1f5f22aef7ff4d3f97c4c13f9006de31"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/dd2cc5bfe2fc4399b8d73e80f1a5f107/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "f83d4ce793df433988032792c73d0a74"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/dd2cc5bfe2fc4399b8d73e80f1a5f107/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "d5fdd2604c1b430d95a02004571bf91e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "createdAt",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of landing page."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of landing page version."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, respective landing pages are enlisted for use."
          },
          "name": {
            "type": "string",
            "description": "Name of landing page."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "slotConfig": {
            "type": "object",
            "description": "Specifies detailed information about how the CMS slots are configured for landing page."
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the page for search results listings."
          },
          "keywords": {
            "type": "string",
            "description": "The keywords that help to search the landing page."
          },
          "url": {
            "type": "string",
            "description": "URL of the landing page."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the CMS Page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the CMS Page's version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          }
        },
        "type": "object"
      },
      "LandingPageSalesChannel": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "landingPageId",
          "salesChannelId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing page sales channel."
          },
          "landingPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing page."
          },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing pages's version."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "LandingPageTag": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "landingPageId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing page tag."
          },
          "landingPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing page."
          },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the landing pages's version."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "LanguageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "localeId",
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "localeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "translationCodeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "61ae64758a934a99a0b0a635cb5bd347"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "locale"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c9ef6717443c48aab747dc4657d87378"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/translationCode"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "locale"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fc979f69e39a4242be98bfa973c02647"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "language"
                            },
                            "id": {
                              "type": "string",
                              "example": "59346afd60094be6ab126564aa7dfc05"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "7006ed6ad2ad4864838fce8a990ec453"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4259c9ded51f4024ae5c56ee120388a4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "b59b92065243467b8af39615982efbc8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "550b5f2f61954d1f9cc152b480522319"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "450f97e52f0c44e3909b4421ced27939"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "8e410f460bc54c929cfec9a5dfb6e459"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchKeywords": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/productSearchKeywords"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_keyword"
                            },
                            "id": {
                              "type": "string",
                              "example": "ab5dd238b1ef4c45b4c6bd27129c670e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productKeywordDictionaries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/productKeywordDictionaries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_keyword_dictionary"
                            },
                            "id": {
                              "type": "string",
                              "example": "fdea03eac4884cb2b0fdf019991449c9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "b7b12067e31343baae7e18e3072a3b1f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/037ee43fd80f47e4a5e875b1438dfcbd/productSearchConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_search_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "80f2313e56b74b21a8717b2693ef66bd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "localeId",
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent language."
          },
          "localeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of locale."
          },
          "translationCodeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of translation code."
          },
          "name": {
            "type": "string",
            "description": "Name of the language."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": {
            "$ref": "#/components/schemas/Language"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "translationCode": {
            "$ref": "#/components/schemas/Locale"
          },
          "children": {
            "$ref": "#/components/schemas/Language"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "productSearchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "productKeywordDictionaries": {
            "$ref": "#/components/schemas/ProductKeywordDictionary"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "productSearchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          }
        },
        "type": "object"
      },
      "LocaleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "code",
              "createdAt",
              "name",
              "territory"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "territory": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "languages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/locale/1de6fe05fad54e4f91f3f1b62ccc07f2/languages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "language"
                            },
                            "id": {
                              "type": "string",
                              "example": "56df1a36df194048b41cd82c94172441"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/locale/1de6fe05fad54e4f91f3f1b62ccc07f2/users"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user"
                            },
                            "id": {
                              "type": "string",
                              "example": "47571a0c4553459bba69806d718252f7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "code",
          "createdAt",
          "name",
          "territory"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of locale."
          },
          "code": {
            "type": "string",
            "description": "Code given to the locale. For example: en-CA."
          },
          "name": {
            "type": "string",
            "description": "Name of the locale. For example: English."
          },
          "territory": {
            "type": "string",
            "description": "Name of the location. For example: Canada."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "languages": {
            "$ref": "#/components/schemas/Language"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "LogEntryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "message": {
                "type": "string"
              },
              "level": {
                "type": "integer",
                "format": "int64"
              },
              "channel": {
                "type": "string"
              },
              "context": {
                "type": "object"
              },
              "extra": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of log entry."
          },
          "message": {
            "type": "string",
            "description": "Indicates text or content of a log entry."
          },
          "level": {
            "type": "integer",
            "format": "int64",
            "description": "It indicates the level or severity of the log entry. For example: BUG, ERROR, etc."
          },
          "channel": {
            "type": "string"
          },
          "context": {
            "type": "object",
            "description": "Information associated with a log entry."
          },
          "extra": {
            "type": "object",
            "description": "Additional information associated with a log entry."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailHeaderFooterJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "systemDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "headerHtml": {
                "type": "string"
              },
              "headerPlain": {
                "type": "string"
              },
              "footerHtml": {
                "type": "string"
              },
              "footerPlain": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-header-footer/e1b9d8fe19db4348b6909845e0be5aa6/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "a2d4139470504aeebd97cadffa8662f6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail's header and footer component."
          },
          "systemDefault": {
            "type": "boolean",
            "description": "Unused field. To be removed in future."
          },
          "name": {
            "type": "string",
            "description": "Name of the MailHeaderFooter."
          },
          "description": {
            "type": "string",
            "description": "Description of the MailHeaderFooter."
          },
          "headerHtml": {
            "type": "string",
            "description": "HTML header content."
          },
          "headerPlain": {
            "type": "string",
            "description": "Textual header content."
          },
          "footerHtml": {
            "type": "string",
            "description": "HTML footer content."
          },
          "footerPlain": {
            "type": "string",
            "description": "Textual footer content."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "MailTemplateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "mailTemplateTypeId",
              "createdAt",
              "subject",
              "contentHtml",
              "contentPlain"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mailTemplateTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "systemDefault": {
                "type": "boolean"
              },
              "senderName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "contentHtml": {
                "type": "string"
              },
              "contentPlain": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "mailTemplateType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template/df229a839ba64a22b43dfdd60035f90a/mailTemplateType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "mail_template_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6dc8054465464fd39273095be5afed12"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template/df229a839ba64a22b43dfdd60035f90a/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "b94bd85b487a44c398cca75aebffa37e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mailTemplateTypeId",
          "createdAt",
          "subject",
          "contentHtml",
          "contentPlain"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template."
          },
          "mailTemplateTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template type."
          },
          "systemDefault": {
            "type": "boolean",
            "description": "Unused field. To be removed in future."
          },
          "senderName": {
            "type": "string",
            "description": "Name of the sender in the mail."
          },
          "description": {
            "type": "string",
            "description": "A short description of defined mail template."
          },
          "subject": {
            "type": "string",
            "description": "A headline of the email."
          },
          "contentHtml": {
            "type": "string",
            "description": "HTML content in the mail."
          },
          "contentPlain": {
            "type": "string",
            "description": "Textual content in the mail."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "media": {
            "$ref": "#/components/schemas/MailTemplateMedia"
          }
        },
        "type": "object"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mailTemplateId",
          "languageId",
          "mediaId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template's media."
          },
          "mailTemplateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the mail template."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of multiple media templates defined is specified using numerical values like 1,2,3, etc."
          },
          "mailTemplate": {
            "$ref": "#/components/schemas/MailTemplate"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "MailTemplateTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "technicalName",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "technicalName": {
                "type": "string"
              },
              "availableEntities": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "templateData": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "mailTemplates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template-type/e253f87d8df3481998c974559a968d8e/mailTemplates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "e9f5d2bee75d449390b8e20256a73b8c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template type."
          },
          "name": {
            "type": "string",
            "description": "Name of the mail template."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of mail template."
          },
          "availableEntities": {
            "type": "object",
            "description": "Defines  which entities are compatible with a given mail template type, ensuring that the right templates can be used for the appropriate purposes within the system"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "templateData": {
            "type": "object",
            "description": "Template data used to generate emails associated with that template type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "mailTemplates": {
            "$ref": "#/components/schemas/MailTemplate"
          }
        },
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/e3bafaa0998d4c1aa183f3326057c2a9/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c690d2c579714b7facc34ad1d8a1a6a9"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "category": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/e3bafaa0998d4c1aa183f3326057c2a9/category"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "329eac80e7e649ec9e7ed0e197cefbc0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/e3bafaa0998d4c1aa183f3326057c2a9/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f47408992e1f45638847ee8208fcf1f9"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "productId",
          "categoryId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of main category."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "categoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category."
          },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category's version."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "MediaJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaFolderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mimeType": {
                "type": "string",
                "readOnly": true
              },
              "fileExtension": {
                "type": "string",
                "readOnly": true
              },
              "uploadedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "fileName": {
                "type": "string",
                "readOnly": true
              },
              "fileSize": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "metaData": {
                "type": "object",
                "readOnly": true
              },
              "mediaType": {
                "type": "object",
                "readOnly": true
              },
              "alt": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "hasFile": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "private": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "extensions": {
                "properties": {
                  "themes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/themes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "theme"
                            },
                            "id": {
                              "type": "string",
                              "example": "49f40f6f910d477481a9d157ab4cd2be"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "themeMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/themeMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "theme"
                            },
                            "id": {
                              "type": "string",
                              "example": "0123cd2542694d49be40279314aaa298"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "9b2c6064716d4907ad6e6e88465cb381"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "thumbnails": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/thumbnails"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_thumbnail"
                            },
                            "id": {
                              "type": "string",
                              "example": "5c8d23073b4541be8c0b34f949f2df49"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ffedeefad3864a92bf144f6175dc3fa2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "049e682e6ac34450b4bf18c005ab2de8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productManufacturers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/productManufacturers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_manufacturer"
                            },
                            "id": {
                              "type": "string",
                              "example": "0b55b16c2682417ea13e0c1c01244991"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/productMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "3f0af9ac17c94dd5af51df74043b38a7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productDownloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/productDownloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "cbdcc6a253a148f187106989ec278e4d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItemDownloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/orderLineItemDownloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "29ce31c31fbc4a8f8762309437f6fe1f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "avatarUser": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/avatarUser"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "44d3ed32465d4fce8ee78010f8e6e073"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaFolder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/mediaFolder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fccef33f87dd42f88b1489580c1018ed"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "propertyGroupOptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/propertyGroupOptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "8979e9155a3d4fb7a51d30c5785143ba"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplateMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/mailTemplateMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "2cfff40f5c2646f1bf69ff2fe52204eb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/documentBaseConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "408e3575d72a49628c10ad2044f16cb9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "682b01431a3042b19d7ffc74856c21de"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "ec50dabfd46c4fe3b95a592d051f2fd1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/productConfiguratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "1da653d202b048af9e7211a57f44e389"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "d9ba88ab82ae4c959a78ef080bea5a72"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/cmsBlocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "9a66ab74b4094e4ab490c916e23a286d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsSections": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/cmsSections"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_section"
                            },
                            "id": {
                              "type": "string",
                              "example": "bd283da55192485f824ae80cfcb2b5b2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/cmsPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "af1884e0fcae4cb39cd181327251fb6f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document"
                            },
                            "id": {
                              "type": "string",
                              "example": "31cc1ce88e054b789624d010f973fa59"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appPaymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/appPaymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "53363e4f747140e9bbe4e5f6cf2feedf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the user"
          },
          "mediaFolderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media folder."
          },
          "mimeType": {
            "type": "string",
            "readOnly": true,
            "description": "A string sent along with a file indicating the type of the file. For example: image/jpeg."
          },
          "fileExtension": {
            "type": "string",
            "readOnly": true,
            "description": "Type of file indication. For example: jpeg, png."
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time at which media was added."
          },
          "fileName": {
            "type": "string",
            "readOnly": true,
            "description": "Name of the media file uploaded."
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Size of the file media file uploaded."
          },
          "metaData": {
            "type": "object",
            "readOnly": true,
            "description": "Details of the media file uploaded."
          },
          "mediaType": {
            "type": "object",
            "readOnly": true,
            "description": "Type or format of media content, such as images, videos, or audio files."
          },
          "alt": {
            "type": "string",
            "description": "Alternate text for media."
          },
          "title": {
            "type": "string",
            "description": "Title name give to the media."
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "private": {
            "type": "boolean",
            "description": "When `true`, the media display is kept private."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "extensions": {
            "properties": {
              "themes": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/themes"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "theme"
                        },
                        "id": {
                          "type": "string",
                          "example": "49f40f6f910d477481a9d157ab4cd2be"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "themeMedia": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/68c089bef23b48f999d52f9aaa13ebb4/themeMedia"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "theme"
                        },
                        "id": {
                          "type": "string",
                          "example": "0123cd2542694d49be40279314aaa298"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "To store additional data to a media from extensions."
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "thumbnails": {
            "$ref": "#/components/schemas/MediaThumbnail"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "productManufacturers": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "productMedia": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "productDownloads": {
            "$ref": "#/components/schemas/ProductDownload"
          },
          "orderLineItemDownloads": {
            "$ref": "#/components/schemas/OrderLineItemDownload"
          },
          "avatarUser": {
            "$ref": "#/components/schemas/User"
          },
          "mediaFolder": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "propertyGroupOptions": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "mailTemplateMedia": {
            "$ref": "#/components/schemas/MailTemplateMedia"
          },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "cmsBlocks": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "cmsSections": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "cmsPages": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "appPaymentMethods": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          }
        },
        "type": "object"
      },
      "MediaDefaultFolderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "associationFields",
              "entity",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "associationFields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "entity": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "folder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-default-folder/2e865b99e6a84d9c9193f281a91e98c1/folder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1678b50d171b468da71c062c77e439c8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "associationFields",
          "entity",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media default folder."
          },
          "associationFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entity": {
            "type": "string",
            "description": "Indicates in which particular entity."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "folder": {
            "$ref": "#/components/schemas/MediaFolder"
          }
        },
        "type": "object"
      },
      "MediaFolderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "configurationId",
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "useParentConfiguration": {
                "type": "boolean"
              },
              "configurationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultFolderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": {
                "type": "string",
                "readOnly": true
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/23d5c8e8e87149c6aa06ec307450609a/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "158c9e5e3ddb48f7a180bffc3efcb3a0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/23d5c8e8e87149c6aa06ec307450609a/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder"
                            },
                            "id": {
                              "type": "string",
                              "example": "4aaaba2cde9843f2902b062f9c0076f4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/23d5c8e8e87149c6aa06ec307450609a/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media"
                            },
                            "id": {
                              "type": "string",
                              "example": "7c351a247afa4407a76420f4ec1ea2fc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultFolder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/23d5c8e8e87149c6aa06ec307450609a/defaultFolder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_default_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8ef693507c2e48039c8c2a955479f034"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/23d5c8e8e87149c6aa06ec307450609a/configuration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder_configuration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ab98946c80d94cd2bba2bee990b4c4c6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "configurationId",
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media folder."
          },
          "useParentConfiguration": {
            "type": "boolean",
            "description": "When boolean value is `true`, the folder inherits the configuration settings of its parent folder. "
          },
          "configurationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of configuration."
          },
          "defaultFolderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default folder."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent."
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Number of media within the media folder."
          },
          "path": {
            "type": "string",
            "readOnly": true,
            "description": "A relative URL to the media folder."
          },
          "name": {
            "type": "string",
            "description": "Name of media folder."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "children": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "defaultFolder": {
            "$ref": "#/components/schemas/MediaDefaultFolder"
          },
          "configuration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          }
        },
        "type": "object"
      },
      "MediaFolderConfigurationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createThumbnails": {
                "type": "boolean"
              },
              "keepAspectRatio": {
                "type": "boolean"
              },
              "thumbnailQuality": {
                "type": "integer",
                "format": "int64"
              },
              "private": {
                "type": "boolean"
              },
              "noAssociation": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "mediaFolders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder-configuration/9c7408b60cfb4f179cbed292a5073064/mediaFolders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder"
                            },
                            "id": {
                              "type": "string",
                              "example": "18a5a6265bd648d092a69eb603c67058"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaThumbnailSizes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder-configuration/9c7408b60cfb4f179cbed292a5073064/mediaThumbnailSizes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_thumbnail_size"
                            },
                            "id": {
                              "type": "string",
                              "example": "f93bfb4a5f144b9cbbb8812b56420adb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media folder configuration."
          },
          "createThumbnails": {
            "type": "boolean",
            "description": "When boolean value is `true`, it enables thumbnail creation automatically."
          },
          "keepAspectRatio": {
            "type": "boolean",
            "description": "When boolean value is `true`, the system maintains the aspect ratio of media files when generating."
          },
          "thumbnailQuality": {
            "type": "integer",
            "format": "int64",
            "description": "Parameter that controls the balance between image quality and size when creating thumbnail images."
          },
          "private": {
            "type": "boolean",
            "description": "When boolean value is `true`, the folder contents are restricted from public access."
          },
          "noAssociation": {
            "type": "boolean"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mediaFolders": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "mediaThumbnailSizes": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          }
        },
        "type": "object"
      },
      "MediaFolderConfigurationMediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mediaFolderConfigurationId",
          "mediaThumbnailSizeId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaFolderConfigurationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaThumbnailSizeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaFolderConfiguration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          },
          "mediaThumbnailSize": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          }
        },
        "type": "object"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mediaId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media tag."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "MediaThumbnailJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "mediaId",
              "width",
              "height",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "width": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "height": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-thumbnail/c7bc2fcfa4c44e228f20885144e6ee84/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b3c36c70704c4e88b6f6eb801b862b96"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mediaId",
          "width",
          "height",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media thumbnail."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "width": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Width of the thumbnail."
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Height of the thumbnail."
          },
          "url": {
            "description": "Public url of media thumbnail.",
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "MediaThumbnailSizeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "width",
              "height",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "width": {
                "type": "integer",
                "format": "int64"
              },
              "height": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "mediaFolderConfigurations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-thumbnail-size/b4ef31337a2041e0bf639350ede63b31/mediaFolderConfigurations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder_configuration"
                            },
                            "id": {
                              "type": "string",
                              "example": "d94b22637bf2481a905eebff0bc588a3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "width",
          "height",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media thumbnail size defined."
          },
          "width": {
            "type": "integer",
            "format": "int64",
            "description": "Width of the thumbnail."
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the thumbnail."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mediaFolderConfigurations": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          }
        },
        "type": "object"
      },
      "MessageQueueStatsJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "size",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string",
                "readOnly": true
              },
              "size": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "MessageQueueStats": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "size",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "email",
              "status",
              "hash",
              "languageId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "email": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "confirmedAt": {
                "type": "string",
                "format": "date-time"
              },
              "salutationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/b065ceba53ee48888e06f55476fda03c/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "83ae671c8d224fcda1f44635792e5724"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/b065ceba53ee48888e06f55476fda03c/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "salutation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8c3dcdd253844a6c83ceb8ad18c8d952"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/b065ceba53ee48888e06f55476fda03c/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9c2aae3774c7457a8bfa09ecd666c281"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/b065ceba53ee48888e06f55476fda03c/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e076e0b779de4e87841bbd35a2ede323"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "email",
          "status",
          "hash",
          "languageId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of newsletter recipient."
          },
          "email": {
            "type": "string",
            "description": "Email of the recipient."
          },
          "title": {
            "type": "string",
            "description": "Title of the recipient's newsletter."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the recipient."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the recipient."
          },
          "zipCode": {
            "type": "string",
            "description": "Zipcode of the recipient's address."
          },
          "city": {
            "type": "string",
            "description": "City of the recipient."
          },
          "street": {
            "type": "string",
            "description": "Street of the recipient."
          },
          "status": {
            "type": "string",
            "description": "When status is set, the NewsletterRecipient is made visible."
          },
          "hash": {
            "type": "string",
            "description": "Password hash for account recovery."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the Newsletter was received."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "NewsletterRecipientTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "newsletterRecipientId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "newsletterRecipientId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the newsletter recipient."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "newsletterRecipient": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "NotificationJsonApi": {
        "description": "Added since version: 6.4.7.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "status",
              "message",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "status": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "adminOnly": {
                "type": "boolean"
              },
              "requiredPrivileges": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                }
              },
              "createdByIntegrationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdByUserId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "createdByIntegration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/notification/aa0c53d11f6d40ecb0f1f62e3c919b5f/createdByIntegration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e65b9e378d174f438341ddc7d1d006fd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdByUser": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/notification/aa0c53d11f6d40ecb0f1f62e3c919b5f/createdByUser"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "83e12d338d0b417ca11af301c07a3be7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "required": [
          "status",
          "message",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of notification."
          },
          "status": {
            "type": "string",
            "description": "When status is set, the Notification is made visible."
          },
          "message": {
            "type": "string",
            "description": "Indicates text or content of a notification message. "
          },
          "adminOnly": {
            "type": "boolean",
            "description": "Parameter within a notification configuration that determines whether a notification is intended for administrators only."
          },
          "requiredPrivileges": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "description": "Parameter within a notification configuration that specifies the required user privileges or permissions to access or view a particular notification."
          },
          "createdByIntegrationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of createdByIntegration."
          },
          "createdByUserId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of createdByUser."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdByIntegration": {
            "$ref": "#/components/schemas/Integration"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "NumberRangeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "typeId",
              "global",
              "pattern",
              "start",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "typeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "global": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "start": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/82c9a14e43084c64b0b616d7c830df13/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1a4a91d35f904298b11a193bc51202f2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/82c9a14e43084c64b0b616d7c830df13/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "1cf647ed226f4a288766a0175fc7addf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/82c9a14e43084c64b0b616d7c830df13/state"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1d7f48c735924b24974c4349f3b69cab"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "typeId",
          "global",
          "pattern",
          "start",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range."
          },
          "typeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of type."
          },
          "global": {
            "type": "boolean",
            "description": "When set to `true`, the defined number range is used across all sales channels."
          },
          "name": {
            "type": "string",
            "description": "Name of the number range."
          },
          "description": {
            "type": "string",
            "description": "A short description of number range."
          },
          "pattern": {
            "type": "string",
            "description": "Custom formatting in order to include for example, the date in the number range."
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "description": "If the start number were 12345, the following patterns would give the following numbers: Order{n}-{date}: Order12345-2019-05-23, Order{n}-{date_d.m.Y}: Order12345-23.05.2019"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "type": {
            "$ref": "#/components/schemas/NumberRangeType"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "state": {
            "$ref": "#/components/schemas/NumberRangeState"
          }
        },
        "type": "object"
      },
      "NumberRangeSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "numberRangeId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "numberRangeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "numberRangeTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/5c9ea89949c5495aa2c71834625ee981/numberRange"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "a5c5f4f24c2c47c69424df481e528cf5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/5c9ea89949c5495aa2c71834625ee981/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6ec3a6e53475495398a8f34109084086"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/5c9ea89949c5495aa2c71834625ee981/numberRangeType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "97141be4649947f28d976da803499e02"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "numberRangeId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Sales channels's number rage."
          },
          "numberRangeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number rage."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Sales channels."
          },
          "numberRangeTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number rage type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "numberRange": {
            "$ref": "#/components/schemas/NumberRange"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "numberRangeType": {
            "$ref": "#/components/schemas/NumberRangeType"
          }
        },
        "type": "object"
      },
      "NumberRangeStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "numberRangeId",
              "lastValue",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "numberRangeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "lastValue": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-state/5d802b31e1294c4c9c4a7d893b94d7b9/numberRange"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "97364a132bb94f64894dc93d544d5a2c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "numberRangeId",
          "lastValue",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range's state."
          },
          "numberRangeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range."
          },
          "lastValue": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "numberRange": {
            "$ref": "#/components/schemas/NumberRange"
          }
        },
        "type": "object"
      },
      "NumberRangeTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "global",
              "createdAt",
              "typeName"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "technicalName": {
                "type": "string"
              },
              "typeName": {
                "type": "string"
              },
              "global": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "numberRanges": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-type/e2e1edf43ae14a8dbe0ac29a40bc4ac5/numberRanges"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range"
                            },
                            "id": {
                              "type": "string",
                              "example": "212ceaca96674aa2b0e4c172dd6ebf43"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-type/e2e1edf43ae14a8dbe0ac29a40bc4ac5/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4cca9b61e4e24572b0645a6cb1d0726f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "global",
          "createdAt",
          "typeName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range's type."
          },
          "technicalName": {
            "type": "string",
            "description": "Name of the number range type."
          },
          "typeName": {
            "type": "string",
            "description": "Name of the type."
          },
          "global": {
            "type": "boolean",
            "description": "When set to `true`, the defined number range type is used across all sales channels."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "numberRanges": {
            "$ref": "#/components/schemas/NumberRange"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          }
        },
        "type": "object"
      },
      "OrderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "billingAddressId",
              "currencyId",
              "languageId",
              "salesChannelId",
              "orderDateTime",
              "currencyFactor",
              "stateId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "orderNumber": {
                "type": "string"
              },
              "billingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "billingAddressVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderDateTime": {
                "type": "string",
                "format": "date-time"
              },
              "orderDate": {
                "type": "string",
                "readOnly": true
              },
              "price": {
                "required": [
                  "netPrice",
                  "totalPrice",
                  "positionPrice",
                  "rawTotal",
                  "taxStatus"
                ],
                "properties": {
                  "netPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "positionPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "rawTotal": {
                    "type": "number",
                    "format": "float"
                  },
                  "taxStatus": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "amountTotal": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "amountNet": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "positionPrice": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "taxStatus": {
                "type": "string",
                "readOnly": true
              },
              "shippingCosts": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "shippingTotal": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "currencyFactor": {
                "type": "number",
                "format": "float"
              },
              "deepLinkCode": {
                "type": "string"
              },
              "affiliateCode": {
                "type": "string"
              },
              "campaignCode": {
                "type": "string"
              },
              "customerComment": {
                "type": "string"
              },
              "stateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "customFields": {
                "type": "object"
              },
              "createdById": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "updatedById": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "dd060c86a19844b1aec27c8b6fb09bf5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/orderCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b8bc69f4e0a8425ca7866692feb5e700"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "100c20589d364233afbb9cd3213e93c7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2304f732ef354deda03ad0fedac0f6aa"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e14ce08557b549889450bf9b1dc2500e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "addresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/addresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "65f222ddc35c414091806efa80e6e237"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "billingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/billingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3716f3d1252f4bc8805f60edeb4d74f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/deliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "8002a848eca9409cb425521d1dbfed95"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/lineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "0cca0fa6e91b4603981983d8127e4b99"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/transactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "7c61c11f334d44dbb2dbc96fd5c49945"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document"
                            },
                            "id": {
                              "type": "string",
                              "example": "4eaa9e81b732427dbdaae8da548a8365"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "0faa08ddd97f41f495dae00d40a7cb0d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/createdBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "0a7b89ed31c841cabfffd5581f5bcb3c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/bd5fccaea10744b786d8888cd5d4e375/updatedBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3f9493ce226f46c4884d721d775627c1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order version."
          },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Internal field."
          },
          "orderNumber": {
            "type": "string",
            "description": "Unique number associated with every order."
          },
          "billingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the billing address."
          },
          "billingAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the billing address version."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the currency."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "orderDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the order was placed."
          },
          "orderDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date when the order was placed."
          },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": {
                "type": "number",
                "format": "float",
                "description": "Net price of the product."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Gross price of the product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "positionPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
              },
              "rawTotal": {
                "type": "number",
                "format": "float",
                "description": "The total value before rounding off."
              },
              "taxStatus": {
                "type": "string",
                "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
              }
            },
            "type": "object"
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Gross price of the order."
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Net price of the order."
          },
          "positionPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
          },
          "taxStatus": {
            "type": "string",
            "readOnly": true,
            "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
          },
          "shippingCosts": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shippingTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Total shipping cost of the ordered product."
          },
          "currencyFactor": {
            "type": "number",
            "format": "float",
            "description": "Rate at which currency is exchanged."
          },
          "deepLinkCode": {
            "type": "string",
            "description": "It is a generated special code linked to email. It is used to access orders placed by guest customers."
          },
          "affiliateCode": {
            "type": "string",
            "description": "An affiliate code is an identification option with which website operators can mark outgoing links."
          },
          "campaignCode": {
            "type": "string",
            "description": "A campaign code is the globally unique identifier for a campaign."
          },
          "customerComment": {
            "type": "string",
            "description": "Comments given by comments."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "ruleIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identity of rule."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of createdBy."
          },
          "updatedById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of updatedBy."
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices."
              }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices."
              }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orderCustomer": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "addresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "deliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "lineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "transactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/User"
          },
          "source": {
            "description": "Source of orders either via normal order placement or subscriptions."
          }
        },
        "type": "object"
      },
      "OrderAddressJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "countryId",
              "orderId",
              "salutationId",
              "firstName",
              "lastName",
              "street",
              "city",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "department": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "vatId": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "additionalAddressLine1": {
                "type": "string"
              },
              "additionalAddressLine2": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/3ee15e4bfd4d438496e083e7893cac29/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "4900e78e01e64009a04b9892bdba3833"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/3ee15e4bfd4d438496e083e7893cac29/countryState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e1610cb85f374ccfbaccdd665d645b92"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/3ee15e4bfd4d438496e083e7893cac29/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "54de13fd9856482f8e597e8cd3f4c1e6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/3ee15e4bfd4d438496e083e7893cac29/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "543f58ea5585436098c652c876a1f4f0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/3ee15e4bfd4d438496e083e7893cac29/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "salutation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "021487c3825244af9206b97ce8828b4a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "orderId",
          "salutationId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's address."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderAddresses version."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "countryStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "zipcode": {
            "type": "string",
            "description": "Zip code of the country."
          },
          "city": {
            "type": "string",
            "description": "Name of the city."
          },
          "company": {
            "type": "string",
            "description": "Name of the company."
          },
          "department": {
            "type": "string",
            "description": "Name of the department."
          },
          "title": {
            "type": "string",
            "description": "Title name given to customer like DR. , Prof., etc."
          },
          "vatId": {
            "type": "string",
            "description": "Unique identity of VAT."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the customer."
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "OrderCustomerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderId",
              "email",
              "salutationId",
              "firstName",
              "lastName",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "email": {
                "type": "string"
              },
              "salutationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "vatIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "customerNumber": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "remoteAddress": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/6d6a7714cdfa4e6e99d14c511637f02a/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fde420cacdd24b9a97352db2d50ca8bf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/6d6a7714cdfa4e6e99d14c511637f02a/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e6750d8878004992890560190d7bcf16"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/6d6a7714cdfa4e6e99d14c511637f02a/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "salutation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "32cd355bb11f487b800933f4a502cf78"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "email",
          "salutationId",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order customer."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderCustomer's version."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "email": {
            "type": "string",
            "description": "Email address of the customer."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "company": {
            "type": "string",
            "description": "Name of the company."
          },
          "title": {
            "type": "string",
            "description": "Title name given to the customer like Dr, prof. etc."
          },
          "vatIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identity of VAT."
          },
          "customerNumber": {
            "type": "string",
            "description": "Unique number assigned to the customer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "remoteAddress": {
            "type": "string",
            "description": "Anonymous IP address of the customer for last session."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "OrderDeliveryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderId",
              "shippingOrderAddressId",
              "shippingMethodId",
              "stateId",
              "trackingCodes",
              "shippingDateEarliest",
              "shippingDateLatest",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingOrderAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingOrderAddressVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "trackingCodes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "shippingDateEarliest": {
                "type": "string",
                "format": "date-time"
              },
              "shippingDateLatest": {
                "type": "string",
                "format": "date-time"
              },
              "shippingCosts": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/b00ddd9269bc49f19e5ee05140cd6bce/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1958d9d6799a423a89464bf01985b906"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/b00ddd9269bc49f19e5ee05140cd6bce/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "edbc2279b99b49b4bf8ea2dc711cb814"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingOrderAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/b00ddd9269bc49f19e5ee05140cd6bce/shippingOrderAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c731f7e33d6e4fac8f48be3119f7b142"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/b00ddd9269bc49f19e5ee05140cd6bce/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "914ab9b9b09a45e28107f7dbb158e15d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "positions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/b00ddd9269bc49f19e5ee05140cd6bce/positions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "62adf65ac4d543b58077ac66e2aaeb7c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order's delivery."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderDelivery's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "shippingOrderAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's shipping address."
          },
          "shippingOrderAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's shipping address version."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "trackingCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tracking code is a unique URL code assigned to each package, which allows you to monitor the movement of the parcel."
          },
          "shippingDateEarliest": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of earliest delivery of products."
          },
          "shippingDateLatest": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of latest delivery of products."
          },
          "shippingCosts": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          }
        },
        "type": "object"
      },
      "OrderDeliveryPositionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderDeliveryId",
              "orderLineItemId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderDeliveryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderDeliveryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "unitPrice": {
                "type": "number",
                "format": "float"
              },
              "totalPrice": {
                "type": "number",
                "format": "float"
              },
              "quantity": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderDelivery": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery-position/075c2dd121994fe1bd7600ccb10b6764/orderDelivery"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_delivery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "00c3c03f210749a1aa998224e2eea33f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery-position/075c2dd121994fe1bd7600ccb10b6764/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "39dbe8de80ef41a0ab4a7e2236c6b668"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderDeliveryId",
          "orderLineItemId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery position."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderDeliveryPosition's version."
          },
          "orderDeliveryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery."
          },
          "orderDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery's version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of line items in an order."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of line item's version in an order."
          },
          "price": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on order delivery price."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": {
            "type": "number",
            "format": "float",
            "description": "Price of product per item (where, quantity=1)."
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "description": "Cost of product based on quantity."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Number of items of each product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderDelivery": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          }
        },
        "type": "object"
      },
      "OrderLineItemJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderId",
              "identifier",
              "quantity",
              "label",
              "position",
              "states",
              "price",
              "children",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "coverId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "identifier": {
                "type": "string"
              },
              "referencedId": {
                "type": "string"
              },
              "quantity": {
                "type": "integer",
                "format": "int64"
              },
              "label": {
                "type": "string"
              },
              "payload": {
                "type": "object"
              },
              "good": {
                "type": "boolean"
              },
              "removable": {
                "type": "boolean"
              },
              "stackable": {
                "type": "boolean"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "price": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "priceDefinition": {
                "type": "object"
              },
              "unitPrice": {
                "type": "number",
                "format": "float"
              },
              "totalPrice": {
                "type": "number",
                "format": "float"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "84976d115b684904b11147fe61ad5891"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ab6c7c4069484277a7000da292359339"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f6566c97e5054c3eac2cd921c922a955"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ac687d3826ed4d42b9342a386dd55056"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveryPositions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/orderDeliveryPositions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "322ad1b5ebd847028ac38745d07ee34b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefundPositions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/orderTransactionCaptureRefundPositions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "9d463ac7753a4f1381aa97c89b6fa18e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "6b8d090504894632a744e5f6e896f6b6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "132c4fa3b7c8447c96aaba8c4939818b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/2d799fb45f524d4ea9959f59cb11a921/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "fec27e25d5804a8690ec42ce1a869f02"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "states",
          "price",
          "children",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderLineItem."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderLineItem's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of products's version."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true,
            "description": "Unique identity of product."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent product."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent's version."
          },
          "coverId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of cover image."
          },
          "identifier": {
            "type": "string",
            "description": "It is a unique identity of an item in cart before its converted to an order."
          },
          "referencedId": {
            "type": "string",
            "description": "Unique identity of type of entity."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Number of items of product."
          },
          "label": {
            "type": "string",
            "description": "It is a typical product name given to the line item."
          },
          "payload": {
            "type": "object",
            "description": "Any data related to product is passed."
          },
          "good": {
            "type": "boolean",
            "description": "When set to true, it indicates the line item is physical else it is virtual."
          },
          "removable": {
            "type": "boolean",
            "description": "Allows the line item to be removable from the cart when set to true."
          },
          "stackable": {
            "type": "boolean",
            "description": "Allows to change the quantity of the line item when set to true."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Position of line items placed in an order."
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Internal field."
          },
          "price": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "priceDefinition": {
            "type": "object",
            "description": "Description of how the price has to be calculated. For example, in percentage or absolute value, etc."
          },
          "unitPrice": {
            "type": "number",
            "format": "float",
            "description": "Price of product per item (where, quantity=1)."
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "description": "Cost of product based on quantity."
          },
          "description": {
            "type": "string",
            "description": "Description of line items in an order."
          },
          "type": {
            "type": "string",
            "description": "Type refers to the entity type of an item whether it is product or promotion for instance."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cover": {
            "$ref": "#/components/schemas/Media"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "orderDeliveryPositions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          },
          "orderTransactionCaptureRefundPositions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          },
          "downloads": {
            "$ref": "#/components/schemas/OrderLineItemDownload"
          },
          "parent": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "children": {
            "$ref": "#/components/schemas/OrderLineItem"
          }
        },
        "type": "object"
      },
      "OrderLineItemDownloadJsonApi": {
        "description": "Added since version: 6.4.19.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderLineItemId",
              "mediaId",
              "position",
              "accessGranted",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "accessGranted": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item-download/6f191f9ba2344797b0208ea9e9a862a4/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fedb4cfef4b249acbd1001b002352bdc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item-download/6f191f9ba2344797b0208ea9e9a862a4/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "431d6711eca84df9b961453213cc2308"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderLineItemDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "orderLineItemId",
          "mediaId",
          "position",
          "accessGranted",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item downloaded digital products."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item downloaded version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of downloaded digital products displayed in the storefront by mentioning numerical values like 1,2,3, etc."
          },
          "accessGranted": {
            "type": "boolean",
            "description": "When boolean value is `true`, the digital product is allowed to download."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order tag."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag given for an order."
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "OrderTransactionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderId",
              "paymentMethodId",
              "amount",
              "stateId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "amount": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "stateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/7fac93309a584efea9f036b1e81b873e/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cac39e402bf04c47a93b16ed7c7f5676"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/7fac93309a584efea9f036b1e81b873e/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "264106603d6e447591d94e2b01da88f9"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/7fac93309a584efea9f036b1e81b873e/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b7cacbdd2a7341269ef2f89cd2744ae6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "captures": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/7fac93309a584efea9f036b1e81b873e/captures"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture"
                            },
                            "id": {
                              "type": "string",
                              "example": "963c6ab0ee9e43268a5d8d9b58074d43"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderTransaction's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of an order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of an order's version."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "captures": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "orderTransactionId",
              "stateId",
              "amount",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderTransactionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderTransactionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalReference": {
                "type": "string"
              },
              "totalAmount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "number",
                "format": "float"
              },
              "amount": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/3a1d9fec30b14ebcba99907072dc3885/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "868fad86f5514b8da2dfd54a3df52aa3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transaction": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/3a1d9fec30b14ebcba99907072dc3885/transaction"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8fc653f06c2b4580934f79113570d8c8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "refunds": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/3a1d9fec30b14ebcba99907072dc3885/refunds"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund"
                            },
                            "id": {
                              "type": "string",
                              "example": "72fd56ade286464ab017a41c2ac99eb5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "orderTransactionId",
          "stateId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture."
          },
          "orderTransactionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction."
          },
          "orderTransactionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction version."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order state."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token."
          },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transaction": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "refunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "versionId": {
            "description": "Unique identity of order transaction capture's version."
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "captureId",
              "stateId",
              "amount",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "captureId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalReference": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "totalAmount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "number",
                "format": "float"
              },
              "amount": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/a6e3bad472414100b850035a99150a6e/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "82d0659913784378bdf7ea48c5fc8eec"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transactionCapture": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/a6e3bad472414100b850035a99150a6e/transactionCapture"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction_capture"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ec19489117c3462cbc3bb942a6d0a82f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "positions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/a6e3bad472414100b850035a99150a6e/positions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "eb6518ef454b42768ecf227a817f1f04"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "captureId",
          "stateId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund."
          },
          "captureId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order state."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token. "
          },
          "reason": {
            "type": "string",
            "description": "Reason for refunding the amount for an order."
          },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          },
          "versionId": {
            "description": "Unique identity of order transaction capture refund's version."
          },
          "captureVersionId": {
            "description": "Unique identity of order transaction capture's version."
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundPositionJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "refundId",
              "orderLineItemId",
              "amount",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "refundId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalReference": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "quantity": {
                "type": "integer",
                "format": "int64"
              },
              "amount": {
                "required": [
                  "unitPrice",
                  "totalPrice",
                  "quantity"
                ],
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      },
                      "discount": {
                        "type": "number",
                        "format": "float"
                      },
                      "percentage": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "refundPrice": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "number",
                "format": "float"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund-position/a4a266f2dc194a4c9ece829f389f33a7/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8dc53493d08c4e2eb7bc937ac2ea5c16"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefund": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund-position/a4a266f2dc194a4c9ece829f389f33a7/orderTransactionCaptureRefund"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction_capture_refund"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "125fddbcc6fd46c7a50ae90174f26dd0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "refundId",
          "orderLineItemId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund position."
          },
          "refundId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line item."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line item version."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token."
          },
          "reason": {
            "type": "string",
            "description": "Reason for refunding the amount for an order."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Quantity of line item to be refunded."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "refundPrice": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "versionId": {
            "description": "Unique identity of order transaction capture refund position's version."
          },
          "refundVersionId": {
            "description": "Unique identity of order transaction capture refund's version."
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "pluginId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "handlerIdentifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "distinguishableName": {
                "type": "string",
                "readOnly": true
              },
              "description": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "afterOrderEnabled": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "formattedHandlerIdentifier": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3b5664b926d740ba923b2a8a598eec33"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e6a28e1afc054245b78a073564c64117"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "f7d0a81272e5409ea3e37a2cdf664d2c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "plugin": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/plugin"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "plugin"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "69c8fd3edbe44fb2864ca02fafd4ba56"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "791facdaa41845ce825a86568072011d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/orderTransactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "d29e82b5a3cf41e9b75fb7228ff8384a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "5e480ef0d9db4787a584b4ea367c4a72"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/caee9ef7d1cd44b8a29a17500d150726/appPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9229c177ea92469ba08c198be320ba2c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "pluginId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of plugin."
          },
          "handlerIdentifier": {
            "type": "string",
            "description": "Internal field that contains system identifier details for payment methods like Paypal."
          },
          "name": {
            "type": "string",
            "description": "Name of the payment method."
          },
          "distinguishableName": {
            "type": "string",
            "readOnly": true,
            "description": "System identifier name for payment method."
          },
          "description": {
            "type": "string",
            "description": "A short description about the payment method."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined payment methods in the storefront by entering numerical values like 1,2,3, etc."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the payment methods are available for selection in the storefront."
          },
          "afterOrderEnabled": {
            "type": "boolean",
            "description": "When set to true, customers are redirected to the payment options page to choose a new payment method on order failure."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "formattedHandlerIdentifier": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "availabilityRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "plugin": {
            "$ref": "#/components/schemas/Plugin"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "appPaymentMethod": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          }
        },
        "type": "object"
      },
      "PluginJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "baseClass",
              "name",
              "autoload",
              "version",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "baseClass": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "composerName": {
                "type": "string"
              },
              "autoload": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "managedByComposer": {
                "type": "boolean"
              },
              "path": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "copyright": {
                "type": "string"
              },
              "license": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "upgradeVersion": {
                "type": "string"
              },
              "installedAt": {
                "type": "string",
                "format": "date-time"
              },
              "upgradedAt": {
                "type": "string",
                "format": "date-time"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "label": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "manufacturerLink": {
                "type": "string"
              },
              "supportLink": {
                "type": "string"
              },
              "changelog": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/plugin/9d65ea7dd96b46b0979d7323879ffbd1/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "a5f555c02082468a9b88060602cf098e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "baseClass",
          "name",
          "autoload",
          "version",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a plugin."
          },
          "baseClass": {
            "type": "string",
            "description": "Name of the new class that extends from Shopware's abstract Plugin class."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the plugin."
          },
          "composerName": {
            "type": "string",
            "description": "Name of the composer package name."
          },
          "autoload": {
            "type": "object",
            "description": "This ensures to automatically load all class files of a project before using them."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the plugin is available."
          },
          "managedByComposer": {
            "type": "boolean",
            "description": "A property to check whether it is installed via composer or not."
          },
          "path": {
            "type": "string",
            "description": "A relative URL to the plugin."
          },
          "author": {
            "type": "string",
            "description": "Creator of the plugin."
          },
          "copyright": {
            "type": "string",
            "description": "Legal rights on the created plugin."
          },
          "license": {
            "type": "string",
            "description": "Software license's like MIT, etc."
          },
          "version": {
            "type": "string",
            "description": "Version of the plugin."
          },
          "upgradeVersion": {
            "type": "string",
            "description": "Update version available for upgrading plugins."
          },
          "installedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the plugin was installed."
          },
          "upgradedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the plugin was upgraded."
          },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "description": "Label given to a plugin."
          },
          "description": {
            "type": "string",
            "description": "A short description about the plugin."
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Links to the manufacturer page"
          },
          "supportLink": {
            "type": "string",
            "description": "Links to the support page"
          },
          "changelog": {
            "type": "object",
            "description": "Deprecated from Shopware version 6.6"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          }
        },
        "type": "object"
      },
      "ProductJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "taxId",
              "price",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productManufacturerVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "unitId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "coverId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productMediaVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "featureSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "canonicalProductId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "type": "object"
              },
              "productNumber": {
                "type": "string"
              },
              "stock": {
                "type": "integer",
                "format": "int64"
              },
              "restockTime": {
                "type": "integer",
                "format": "int64"
              },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "active": {
                "type": "boolean"
              },
              "availableStock": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "available": {
                "type": "boolean",
                "readOnly": true
              },
              "isCloseout": {
                "type": "boolean"
              },
              "variation": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayGroup": {
                "type": "string",
                "readOnly": true
              },
              "configuratorGroupConfig": {
                "type": "object",
                "deprecated": true
              },
              "mainVariantId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "deprecated": true
              },
              "displayParent": {
                "type": "boolean",
                "deprecated": true
              },
              "variantListingConfig": {
                "type": "object"
              },
              "variantRestrictions": {
                "type": "object"
              },
              "manufacturerNumber": {
                "type": "string"
              },
              "ean": {
                "type": "string"
              },
              "purchaseSteps": {
                "type": "integer",
                "format": "int64"
              },
              "maxPurchase": {
                "type": "integer",
                "format": "int64"
              },
              "minPurchase": {
                "type": "integer",
                "format": "int64"
              },
              "purchaseUnit": {
                "type": "number",
                "format": "float"
              },
              "referenceUnit": {
                "type": "number",
                "format": "float"
              },
              "shippingFree": {
                "type": "boolean"
              },
              "purchasePrices": {
                "type": "object"
              },
              "markAsTopseller": {
                "type": "boolean"
              },
              "weight": {
                "type": "number",
                "format": "float"
              },
              "width": {
                "type": "number",
                "format": "float"
              },
              "height": {
                "type": "number",
                "format": "float"
              },
              "length": {
                "type": "number",
                "format": "float"
              },
              "releaseDate": {
                "type": "string",
                "format": "date-time"
              },
              "ratingAverage": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "categoryTree": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "propertyIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "optionIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "streamIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "tagIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "categoryIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "customFieldSetSelectionActive": {
                "type": "boolean"
              },
              "sales": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "metaDescription": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "packUnit": {
                "type": "string"
              },
              "packUnitPlural": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "slotConfig": {
                "type": "object"
              },
              "customSearchKeywords": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                }
              },
              "cheapestPrice": {
                "type": "object",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "d4793e4dd97642e09f560068213b7892"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9c730b73212d420a872235124dd61f53"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "e684a8f00da64d61ae6647f958b9dfd8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8aa5131c6ca84f61b8a9b6ab6de34a0e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d7c46a3abbe14afba5b14fd6d158f2b2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/manufacturer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_manufacturer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "eb325a74c2ad499a8781f059c95ef634"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/unit"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "unit"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "37256a7a0d564d3ab497bb25cfae805c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8982407bf9a84207aae6eceaa97d08de"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "featureSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/featureSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_feature_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9d66a66156964d7d90819f1991b616e8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "83460012f7e041b693dabf3f66536d6d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "canonicalProduct": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/canonicalProduct"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9e9e1721950f4e2b8ce003088b90e011"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "de7a0d1ea0244febbb52dc198014f7fc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "17da8e86a82f4432a0478600eecc468f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/crossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "c56e464ee95747b0868c9896835ba9e5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellingAssignedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/crossSellingAssignedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling_assigned_products"
                            },
                            "id": {
                              "type": "string",
                              "example": "fec94bccb07b471d872bd01c8a853b81"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/configuratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "8449274a2cf54295b9a8f90d16fdc4ca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "visibilities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/visibilities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_visibility"
                            },
                            "id": {
                              "type": "string",
                              "example": "780d218dff8c41d6a473f4fc6fcacc64"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "searchKeywords": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/searchKeywords"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_keyword"
                            },
                            "id": {
                              "type": "string",
                              "example": "33ecc12b5eee4699afe4059c044b21a0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "c2d1686869b5489a833a7eec51d4176b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "8ec6610a25c84f30882e3d95ca1ec42b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "e9d97d2094554577a116f66e305fc493"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "0d79c5314c054cf8b2555b9bef7123ea"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist_product"
                            },
                            "id": {
                              "type": "string",
                              "example": "52de57f67c454ab0b5f692813f67a78a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "98abe65955c84116ade869f927cfe16d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/properties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "42a8f97043ee4f699a77c593ceda6501"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "6f554477b5b1462b97c66031ce43af91"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/streams"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream"
                            },
                            "id": {
                              "type": "string",
                              "example": "d24a3da3ce7a40e4ac0019db00fd1310"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/categoriesRo"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "a8cc3216628f4a0cb932ae87d231bce5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "2fd8f41db37941848cf058ca8910a51e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/9da57d0f121a4a7ca3a40d055ecc4f8c/customFieldSets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set"
                            },
                            "id": {
                              "type": "string",
                              "example": "678b47454a49419583bb7cb1b23ad5e0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "taxId",
          "price",
          "productNumber",
          "stock",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the parent product."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the parent product's version."
          },
          "manufacturerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the manufacturer."
          },
          "productManufacturerVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's manufacturer version."
          },
          "unitId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the unit."
          },
          "taxId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax."
          },
          "coverId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a ProductMedia item used as product cover."
          },
          "productMediaVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product's media version."
          },
          "deliveryTimeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of delivery time."
          },
          "featureSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of feature set."
          },
          "canonicalProductId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of canonical product."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page's version."
          },
          "price": {
            "type": "object",
            "description": "Price of the product."
          },
          "productNumber": {
            "type": "string",
            "description": "Unique number assigned to individual products. Define rules for automatic assignment of every product creation as per your number range."
          },
          "stock": {
            "type": "integer",
            "format": "int64",
            "description": "Indicates the number of products available."
          },
          "restockTime": {
            "type": "integer",
            "format": "int64",
            "description": "The restock time in days indicates how long it will take until a sold out item is back in stock."
          },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Internal field."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the products are available for selection in the storefront for purchase."
          },
          "availableStock": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Indicates the number of products still available. This value results from the stock minus the open orders."
          },
          "available": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates weather the product is available or not."
          },
          "isCloseout": {
            "type": "boolean",
            "description": "When the value is set to true, the product is hidden when sold out."
          },
          "variation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Internal field."
          },
          "displayGroup": {
            "type": "string",
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "configuratorGroupConfig": {
            "type": "object",
            "deprecated": true
          },
          "mainVariantId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "deprecated": true
          },
          "displayParent": {
            "type": "boolean",
            "deprecated": true
          },
          "variantListingConfig": {
            "type": "object",
            "description": "Information regarding if this variant should included in listing or not."
          },
          "variantRestrictions": {
            "type": "object",
            "description": "Configuration about which variants and its combination are not available like red shirt in medium size in not available."
          },
          "manufacturerNumber": {
            "type": "string",
            "description": "Unique number that describes the manufacturer."
          },
          "ean": {
            "type": "string",
            "description": "Indicates EAN of the product."
          },
          "purchaseSteps": {
            "type": "integer",
            "format": "int64",
            "description": "Specifies the scales in which the item is to be offered. For example, a scale of 2 means that your customers can purchase 2, 4, 6 products, etc., but not 1, 3 or 5."
          },
          "maxPurchase": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of items that can be purchased."
          },
          "minPurchase": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum number of items that can be purchased."
          },
          "purchaseUnit": {
            "type": "number",
            "format": "float",
            "description": "Quantity of the item purchased. For example, 500ml, 2kg, etc."
          },
          "referenceUnit": {
            "type": "number",
            "format": "float",
            "description": "Price of purchased item calculated as per the reference unit. Say, you bought 500ml of milk and the price is calculated in reference to 1000ml. "
          },
          "shippingFree": {
            "type": "boolean",
            "description": "Indicates weather the shipping price is free or not."
          },
          "purchasePrices": {
            "type": "object",
            "description": "Actual/cost price of the product."
          },
          "markAsTopseller": {
            "type": "boolean",
            "description": "Indicates weather the product is top seller or not."
          },
          "weight": {
            "type": "number",
            "format": "float",
            "description": "The weight of the product."
          },
          "width": {
            "type": "number",
            "format": "float",
            "description": "The width of the product."
          },
          "height": {
            "type": "number",
            "format": "float",
            "description": "The height of the product."
          },
          "length": {
            "type": "number",
            "format": "float",
            "description": "The length of the product."
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product."
          },
          "ratingAverage": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Average of all the ratings."
          },
          "categoryTree": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Internal field."
          },
          "propertyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of property."
          },
          "optionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of options."
          },
          "streamIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of stream."
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of tags."
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of category."
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Number of variants the product has."
          },
          "customFieldSetSelectionActive": {
            "type": "boolean",
            "description": "When boolean value is `true`, the customFieldSetSelection for products gets enabled."
          },
          "sales": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Frequency of the product sales."
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "description": "Internal field."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the product for search results listings."
          },
          "name": {
            "type": "string",
            "description": "Name of the product."
          },
          "keywords": {
            "type": "string",
            "description": "Keywords that give additional information about the Product."
          },
          "description": {
            "type": "string",
            "description": "Description of the product."
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "packUnit": {
            "type": "string",
            "description": "Type of packing. For example, bottle, tin, crate, etc."
          },
          "packUnitPlural": {
            "type": "string",
            "description": "Type of packing in plural. For example, bottles, tins, crates, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "slotConfig": {
            "type": "object",
            "description": "Specifies detailed information about how the CMS slots are configured for products."
          },
          "customSearchKeywords": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "description": "List of additional keywords in the search."
          },
          "cheapestPrice": {
            "type": "object",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "downloads": {
            "$ref": "#/components/schemas/ProductDownload"
          },
          "parent": {
            "$ref": "#/components/schemas/Product"
          },
          "children": {
            "$ref": "#/components/schemas/Product"
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "cover": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "featureSet": {
            "$ref": "#/components/schemas/ProductFeatureSet"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "canonicalProduct": {
            "$ref": "#/components/schemas/Product"
          },
          "prices": {
            "$ref": "#/components/schemas/ProductPrice"
          },
          "media": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "crossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "crossSellingAssignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          },
          "configuratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "visibilities": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "searchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          },
          "options": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "properties": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "streams": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "categoriesRo": {
            "$ref": "#/components/schemas/Category"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "customFieldSets": {
            "$ref": "#/components/schemas/CustomFieldSet"
          }
        },
        "type": "object"
      },
      "ProductCategory": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "categoryId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Category."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "categoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Category."
          },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Category's version."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        },
        "type": "object"
      },
      "ProductCategoryTree": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "categoryId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Category."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "categoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Category."
          },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Category's version."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        },
        "type": "object"
      },
      "ProductConfiguratorSettingJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "optionId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "optionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "type": "object"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/7b12bd34c1a0457db942d3f5f9b4aca2/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "67bdcc5eef5744359e50180d0b87ccd1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/7b12bd34c1a0457db942d3f5f9b4aca2/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e43c8d796af8429d967d478687572349"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "option": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/7b12bd34c1a0457db942d3f5f9b4aca2/option"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "property_group_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "51dd83245e7f4346a4ae4a842598fa51"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "optionId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product configurator setting."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product configurator setting version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "optionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of option."
          },
          "price": {
            "type": "object",
            "description": "Price of the Product."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined product configuration settings in the storefront by entering numerical values like 1,2,3, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          }
        },
        "type": "object"
      },
      "ProductCrossSellingJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "position",
              "type",
              "productId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "sortBy": {
                "type": "string"
              },
              "sortDirection": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "limit": {
                "type": "integer",
                "format": "int64"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/f9e02eb57e4947eaa2ef06c8bd87120f/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8949f93a57b34013ae0ea88615e3b260"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/f9e02eb57e4947eaa2ef06c8bd87120f/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d70f59f2ff684e5fabc504ab0c80ecc7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "assignedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/f9e02eb57e4947eaa2ef06c8bd87120f/assignedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling_assigned_products"
                            },
                            "id": {
                              "type": "string",
                              "example": "e2a69ee5e42a4c0bb2147cfe0faf8eef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "name",
          "position",
          "type",
          "productId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product cross selling."
          },
          "name": {
            "type": "string",
            "description": "Name defined for Product cross selling."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined cross-selling actions in the storefront by entering numerical values like 1,2,3, etc."
          },
          "sortBy": {
            "type": "string",
            "description": "To sort the display of products by name, price or publication (descending, ascending) date."
          },
          "sortDirection": {
            "type": "string",
            "description": "To sort the display of products by ascending or descending order."
          },
          "type": {
            "type": "string",
            "description": "Type of product assignment for cross-selling. It can either be Dynamic product group or Manual assignment."
          },
          "active": {
            "type": "boolean",
            "description": "When set to active, the cross-selling feature is enabled."
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum number of products to be displayed in cross-selling on the item detail page of your item."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product's version."
          },
          "productStreamId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "assignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          }
        },
        "type": "object"
      },
      "ProductCrossSellingAssignedProductsJsonApi": {
        "description": "Added since version: 6.2.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "crossSellingId",
              "productId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "crossSellingId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling-assigned-products/d276cc331d21443da81b6ae834a3bd79/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "09988149470c41ad934548f7ee3a447b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSelling": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling-assigned-products/d276cc331d21443da81b6ae834a3bd79/crossSelling"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_cross_selling"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "4ac56a0cd0bf4e1288c88461ec2ca506"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "required": [
          "crossSellingId",
          "productId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product CrossSelling Assigned Products."
          },
          "crossSellingId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product CrossSelling."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined product cross-selling in the storefront by entering numerical values like 1,2,3, etc."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "crossSelling": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          }
        },
        "type": "object"
      },
      "ProductCustomFieldSet": {
        "description": "Added since version: 6.3.0.0",
        "required": [
          "productId",
          "customFieldSetId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Custom Field Set."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "customFieldSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of custom Field Set."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          }
        },
        "type": "object"
      },
      "ProductDownloadJsonApi": {
        "description": "Added since version: 6.4.19.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "mediaId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-download/b3a6bb2c7c10477cbc2a480f02160e95/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2d51885f77434039b1f04a0f93b2865f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-download/b3a6bb2c7c10477cbc2a480f02160e95/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "52389076b1c64bdcadb25f557ce7adae"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "productId",
          "mediaId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity downloaded product."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of downloaded product's version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order in which the digital products are downloaded, like 1,2,3, etc.to adjust their order of display."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "ProductExportJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productStreamId",
              "storefrontSalesChannelId",
              "salesChannelId",
              "salesChannelDomainId",
              "currencyId",
              "fileName",
              "accessKey",
              "encoding",
              "fileFormat",
              "generateByCronjob",
              "interval",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "storefrontSalesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelDomainId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fileName": {
                "type": "string"
              },
              "accessKey": {
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "fileFormat": {
                "type": "string"
              },
              "includeVariants": {
                "type": "boolean"
              },
              "generateByCronjob": {
                "type": "boolean"
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "interval": {
                "type": "integer",
                "format": "int64"
              },
              "headerTemplate": {
                "type": "string"
              },
              "bodyTemplate": {
                "type": "string"
              },
              "footerTemplate": {
                "type": "string"
              },
              "pausedSchedule": {
                "type": "boolean"
              },
              "isRunning": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/0cdfb71fd48a45afa4ff4ed2c87a6abc/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "03d320f7f80142ac9bb877e19799927d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "storefrontSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/0cdfb71fd48a45afa4ff4ed2c87a6abc/storefrontSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1427cccdcca34163a2334b532f78a2fc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/0cdfb71fd48a45afa4ff4ed2c87a6abc/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f089abfe0b3d4d5391f04103692fd23f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomain": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/0cdfb71fd48a45afa4ff4ed2c87a6abc/salesChannelDomain"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_domain"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b3d91e68e1b426285ff1b220f516392"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/0cdfb71fd48a45afa4ff4ed2c87a6abc/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "dc83017970ce4829a7c8ac8a2b7b55eb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "productStreamId",
          "storefrontSalesChannelId",
          "salesChannelId",
          "salesChannelDomainId",
          "currencyId",
          "fileName",
          "accessKey",
          "encoding",
          "fileFormat",
          "generateByCronjob",
          "interval",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Exported Product."
          },
          "productStreamId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream ."
          },
          "storefrontSalesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of storefront's Sales Channel."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salesChannel."
          },
          "salesChannelDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales Channel Domain."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file."
          },
          "accessKey": {
            "type": "string",
            "description": "Access key to admin api."
          },
          "encoding": {
            "type": "string",
            "description": "Type of encoding like UTF-8 or ASCII."
          },
          "fileFormat": {
            "type": "string",
            "description": "Type of file formats or extensions like CSV or JSON."
          },
          "includeVariants": {
            "type": "boolean",
            "description": "Toggling the product export settings to determine whether or not to include the variants."
          },
          "generateByCronjob": {
            "type": "boolean",
            "description": "To determine whether the product exports are generated by cron jobs or live."
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the product exports was last generated."
          },
          "interval": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency interval when the product exports are generated like every 5 min, 1 hour, etc."
          },
          "headerTemplate": {
            "type": "string",
            "description": "Property to specify the custom content displayed for the header section."
          },
          "bodyTemplate": {
            "type": "string",
            "description": "Property to specify the custom content displayed for the body section."
          },
          "footerTemplate": {
            "type": "string",
            "description": "Property to specify the custom content displayed for the footer section."
          },
          "pausedSchedule": {
            "type": "boolean",
            "description": "ProductExport generation is paused."
          },
          "isRunning": {
            "type": "boolean",
            "description": "ProductExport is right now generating or not."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "storefrontSalesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "type": "object"
      },
      "ProductFeatureSetJsonApi": {
        "description": "Added since version: 6.3.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "features": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-feature-set/028d88f3ad0e4e158035322fb19d63cd/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "ce2879cef66946fba4b9dc87498ade5f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product feature set."
          },
          "name": {
            "type": "string",
            "description": "Name of product feature set."
          },
          "description": {
            "type": "string",
            "description": "A short description of product feature set."
          },
          "features": {
            "type": "object",
            "description": "The actual product features."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "ProductKeywordDictionaryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "languageId",
              "keyword"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "keyword": {
                "type": "string"
              },
              "reversed": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-keyword-dictionary/e79b7594b0c2458f873aded8015f123c/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9d8b5052d69147228fbfb542278e0937"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "keyword"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product keyword."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "keyword": {
            "type": "string",
            "description": "The keywords that help to search the product."
          },
          "reversed": {
            "type": "string",
            "description": "The keywords are revered for the search."
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        },
        "type": "object"
      },
      "ProductManufacturerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "link": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-manufacturer/d7e696d0494149c0a5dc0819c390040d/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b41766d411b04ba39678157830353839"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-manufacturer/d7e696d0494149c0a5dc0819c390040d/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "3a37ad2e130548668e758c102bd834e6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the Product Manufacturer."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the ProductManufacturer's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "link": {
            "type": "string",
            "description": "URL of the manufacturer's portal."
          },
          "name": {
            "type": "string",
            "description": "Name of the product manufacturer."
          },
          "description": {
            "type": "string",
            "description": "A detailed description of product manufacturer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "ProductMediaJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "mediaId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/ddf3a940103a4ca3b41ea2405d9f3181/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8298e0d8dcdf487ebb0cf763fa5b0023"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/ddf3a940103a4ca3b41ea2405d9f3181/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ef10294305c04371a6caa3c75344d354"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "coverProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/ddf3a940103a4ca3b41ea2405d9f3181/coverProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "8e3bde58bd4b499ba15e695c326e71fd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "mediaId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the Product Media."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the ProductMedia version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the images to be displayed for a product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "coverProducts": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "ProductOption": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "optionId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's price."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "optionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the option."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          }
        },
        "type": "object"
      },
      "ProductPriceJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "ruleId",
              "price",
              "quantityStart",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "type": "object"
              },
              "quantityStart": {
                "type": "integer",
                "format": "int64"
              },
              "quantityEnd": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-price/6549889ee02c4bea969ccd0ecc8dbd5c/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e0e6c794200240e385426dbbdb2db01c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-price/6549889ee02c4bea969ccd0ecc8dbd5c/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "41d8caa1df114ee79a723a7e6a50ebd6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "ruleId",
          "price",
          "quantityStart",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's price."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product price's version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the rule."
          },
          "price": {
            "type": "object",
            "description": "Price of the Product."
          },
          "quantityStart": {
            "type": "integer",
            "format": "int64",
            "description": "Starting range of quantity of an item."
          },
          "quantityEnd": {
            "type": "integer",
            "format": "int64",
            "description": "Ending range of quantity of an item."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "ProductProperty": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "optionId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product property."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "optionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the option."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          }
        },
        "type": "object"
      },
      "ProductReviewJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "salesChannelId",
              "languageId",
              "title",
              "content",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalUser": {
                "type": "string"
              },
              "externalEmail": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "points": {
                "type": "number",
                "format": "float"
              },
              "status": {
                "type": "boolean"
              },
              "comment": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/a9d7fa4e90024aa29ab1615960e0432c/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7ec9442130404c0b8937bcae8871a0a8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/a9d7fa4e90024aa29ab1615960e0432c/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "57148865d9b34654b3d18e2fd583accc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/a9d7fa4e90024aa29ab1615960e0432c/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e5f25ee6dcec4e6d846b2bdf47103b53"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/a9d7fa4e90024aa29ab1615960e0432c/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cc530c6d795f497b95afaed07764743b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's review."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "externalUser": {
            "type": "string",
            "description": "External user name."
          },
          "externalEmail": {
            "type": "string",
            "description": "External user email address."
          },
          "title": {
            "type": "string",
            "description": "Title of product review."
          },
          "content": {
            "type": "string",
            "description": "Short description or subject of the project review."
          },
          "points": {
            "type": "number",
            "format": "float",
            "description": "A floating point number given to rate a product."
          },
          "status": {
            "type": "boolean",
            "description": "When status is set, the rating is made visible."
          },
          "comment": {
            "type": "string",
            "description": "Detailed review about the product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        },
        "type": "object"
      },
      "ProductSearchConfigJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "languageId",
              "andLogic",
              "minSearchLength",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "andLogic": {
                "type": "boolean"
              },
              "minSearchLength": {
                "type": "integer",
                "format": "int64"
              },
              "excludedTerms": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config/e93328a67ec442e3a1ff6bb9ef4352f6/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "df64fa0119084de5a5f3db0cc6fbc9e0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config/e93328a67ec442e3a1ff6bb9ef4352f6/configFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_config_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "4bdfb618090c4eaeacc9369453c6fd90"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "languageId",
          "andLogic",
          "minSearchLength",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Configuration."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "andLogic": {
            "type": "boolean",
            "description": "Product search configuration with add logic."
          },
          "minSearchLength": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum number of characters used for product search."
          },
          "excludedTerms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Excluded terms in product search."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "configFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          }
        },
        "type": "object"
      },
      "ProductSearchConfigFieldJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "searchConfigId",
              "field",
              "tokenize",
              "searchable",
              "ranking",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "searchConfigId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFieldId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "field": {
                "type": "string"
              },
              "tokenize": {
                "type": "boolean"
              },
              "searchable": {
                "type": "boolean"
              },
              "ranking": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "searchConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config-field/2a161cbb99ba4fc4adc1881c9a2e2820/searchConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_search_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "544ef97b6f79455fa6c9ad9c88abb125"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customField": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config-field/2a161cbb99ba4fc4adc1881c9a2e2820/customField"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "10cdb80e8a2e4061b891dd3c755311df"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "searchConfigId",
          "field",
          "tokenize",
          "searchable",
          "ranking",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Configuration field."
          },
          "searchConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Search Configuration."
          },
          "customFieldId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of custom field."
          },
          "field": {
            "type": "string",
            "description": "Configuration of search field."
          },
          "tokenize": {
            "type": "boolean",
            "description": "To decide whether the text within the field should undergo tokenization, which involves splitting it into smaller chunks."
          },
          "searchable": {
            "type": "boolean",
            "description": "To configure whether the field can be used for searching."
          },
          "ranking": {
            "type": "integer",
            "format": "int64",
            "description": "Search ranking."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "searchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          },
          "customField": {
            "$ref": "#/components/schemas/CustomField"
          }
        },
        "type": "object"
      },
      "ProductSearchKeywordJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "languageId",
              "productId",
              "keyword",
              "ranking",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "keyword": {
                "type": "string"
              },
              "ranking": {
                "type": "number",
                "format": "float"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-keyword/48113d46a1bd4f918d20c3f3f87f0020/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5e33cfa8b82f4564aabcda099d35c25f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-keyword/48113d46a1bd4f918d20c3f3f87f0020/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e36310652ce14f9990fc6a1bc85a3b35"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "productId",
          "keyword",
          "ranking",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Keyword."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ProductSearchKeyword's version."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "keyword": {
            "type": "string",
            "description": "The keywords that help to search the product."
          },
          "ranking": {
            "type": "number",
            "format": "float",
            "description": "Search ranking."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        },
        "type": "object"
      },
      "ProductSortingJsonApi": {
        "description": "Added since version: 6.3.2.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "key",
              "priority",
              "active",
              "fields",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "locked": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "priority": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "fields": {
                "type": "object"
              },
              "label": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "required": [
          "key",
          "priority",
          "active",
          "fields",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product sorting."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then ProductSorting cannot be configured."
          },
          "key": {
            "type": "string",
            "description": "A keyword associated to identify product sorting."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize the product sorting."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the product sorting is enabled."
          },
          "fields": {
            "type": "object",
            "description": "Fields used to sort products."
          },
          "label": {
            "type": "string",
            "description": "Label given to a product sorting."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductStreamJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "apiFilter": {
                "type": "object",
                "readOnly": true
              },
              "invalid": {
                "type": "boolean",
                "readOnly": true
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "filters": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/dc52cb69a50a41fb9b1b9f228832db90/filters"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream_filter"
                            },
                            "id": {
                              "type": "string",
                              "example": "4b56974de63b46b8abcaff500adefd10"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productCrossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/dc52cb69a50a41fb9b1b9f228832db90/productCrossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "c280c379b17d4964b36adcbee1445034"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/dc52cb69a50a41fb9b1b9f228832db90/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "8fbe9d31fc884c55a0f824bed6931588"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/dc52cb69a50a41fb9b1b9f228832db90/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "48a966477eda439aa80c84585bc9bd2b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream."
          },
          "apiFilter": {
            "type": "object",
            "readOnly": true,
            "description": "Internal field."
          },
          "invalid": {
            "type": "boolean",
            "readOnly": true,
            "description": "When the boolean value is `true`, the ProductStream is no more available for usage."
          },
          "name": {
            "type": "string",
            "description": "Name of the Dynamic Group to be created."
          },
          "description": {
            "type": "string",
            "description": "Description of the Dynamic group to be created."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "filters": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          },
          "productCrossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          }
        },
        "type": "object"
      },
      "ProductStreamFilterJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productStreamId",
              "type",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": {
                "type": "string"
              },
              "field": {
                "type": "string"
              },
              "operator": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/aa2607473e2445189448cb40d17b2169/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "a20105309fb84d3baf983f95e3e4a4d0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/aa2607473e2445189448cb40d17b2169/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream_filter"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fb249d2bb0e5420d8b3f731e975ffb8d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "queries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/aa2607473e2445189448cb40d17b2169/queries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream_filter"
                            },
                            "id": {
                              "type": "string",
                              "example": "d1a414b2fa994932b52f1028fe70b7dc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productStreamId",
          "type",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream filter."
          },
          "productStreamId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product's parent."
          },
          "type": {
            "type": "string",
            "description": "Type is either `static` or `stream`."
          },
          "field": {
            "type": "string",
            "description": "Filter by field."
          },
          "operator": {
            "type": "string",
            "description": "Filter by operator like >, ==, < , >=, etc."
          },
          "value": {
            "type": "string",
            "description": "Filter by ProductStreamFilter value."
          },
          "parameters": {
            "type": "object",
            "description": "Additional parameters, such as specifying a date starting from a particular point."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined product stream filter to be displayed."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "parent": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          },
          "queries": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          }
        },
        "type": "object"
      },
      "ProductStreamMapping": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "productId",
          "productStreamId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ProductStreamMapping."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product's version."
          },
          "productStreamId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ProductStream."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          }
        },
        "type": "object"
      },
      "ProductTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product tag."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "parentVersionId": {
            "description": "Unique identity of product's parent."
          }
        },
        "type": "object"
      },
      "ProductVisibilityJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "salesChannelId",
              "visibility",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "visibility": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-visibility/4a62e8f3edc248c5be0db1c9da311def/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "03c67dd8b4754a0b93c273cfc6a1121d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-visibility/4a62e8f3edc248c5be0db1c9da311def/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2f2eff46c1e64065ad42a3a014a35a32"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "salesChannelId",
          "visibility",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product visibility."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product visibility."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product visibility."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product visibility."
          },
          "visibility": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identity of product visibility."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "PromotionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "active",
              "priority",
              "exclusive",
              "useCodes",
              "useIndividualCodes",
              "useSetGroups",
              "preventCombination",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time"
              },
              "maxRedemptionsGlobal": {
                "type": "integer",
                "format": "int64"
              },
              "maxRedemptionsPerCustomer": {
                "type": "integer",
                "format": "int64"
              },
              "priority": {
                "type": "integer",
                "format": "int64"
              },
              "exclusive": {
                "type": "boolean"
              },
              "code": {
                "type": "string"
              },
              "useCodes": {
                "type": "boolean"
              },
              "useIndividualCodes": {
                "type": "boolean"
              },
              "individualCodePattern": {
                "type": "string"
              },
              "useSetGroups": {
                "type": "boolean"
              },
              "customerRestriction": {
                "type": "boolean"
              },
              "preventCombination": {
                "type": "boolean"
              },
              "orderCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "ordersPerCustomerCount": {
                "type": "object",
                "readOnly": true
              },
              "exclusionIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                }
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "setgroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/setgroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_setgroup"
                            },
                            "id": {
                              "type": "string",
                              "example": "c862c535179243188bc3534792d58f63"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "f5e1b61028ad45708287fae8dabb26f0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "discounts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/discounts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount"
                            },
                            "id": {
                              "type": "string",
                              "example": "61d541e831b84265b1f6dddf3b585a25"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "individualCodes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/individualCodes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_individual_code"
                            },
                            "id": {
                              "type": "string",
                              "example": "8f7a7c1f07c14a3ca11686b2138146ae"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/personaRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "49606f4b1ad64beeb0ead1ea8d1d46fc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/personaCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "0e524819d4644c4894899a3d6a830eb5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/orderRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "f8fcf8463a0a49ceb094125b4f04e9db"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cartRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/cartRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "307968a167d943109058c61434f07511"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/1e900194c6964420a6c711c07aa0fc9a/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "29305ea3b04742b6bb3c9c719e4b5b3b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "active",
          "priority",
          "exclusive",
          "useCodes",
          "useIndividualCodes",
          "useSetGroups",
          "preventCombination",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the promotions are available for selection in the storefront for purchase."
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time from when the promotion code gets valid."
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time until when the promotion code is valid."
          },
          "maxRedemptionsGlobal": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency at which the voucher can be redeemed worldwide."
          },
          "maxRedemptionsPerCustomer": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency at which the voucher can be redeemed worldwide per customer."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one of the promotions from the list."
          },
          "exclusive": {
            "type": "boolean",
            "description": "Parameter to exclude the promotion codes on certain products"
          },
          "code": {
            "type": "string",
            "description": "Promotion code."
          },
          "useCodes": {
            "type": "boolean",
            "description": "A boolean value that indicates whether the promotion uses code or not."
          },
          "useIndividualCodes": {
            "type": "boolean",
            "description": "Indicates either an individual code or generic code for all users."
          },
          "individualCodePattern": {
            "type": "string",
            "description": "Promotion code pattern."
          },
          "useSetGroups": {
            "type": "boolean",
            "description": "Combine promotions. Promotions that are to be used only on certain products and rest not considered."
          },
          "customerRestriction": {
            "type": "boolean",
            "description": "Indicates who cannot a use the code."
          },
          "preventCombination": {
            "type": "boolean",
            "description": "Indicates which combination of codes are allowed."
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "The number of times the promotion was used."
          },
          "ordersPerCustomerCount": {
            "type": "object",
            "readOnly": true,
            "description": "The number of times the customer has used the code."
          },
          "exclusionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "description": "Unique identity of exclusion."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "setgroups": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "discounts": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "individualCodes": {
            "$ref": "#/components/schemas/PromotionIndividualCode"
          },
          "personaRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "personaCustomers": {
            "$ref": "#/components/schemas/Customer"
          },
          "orderRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "cartRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          }
        },
        "type": "object"
      },
      "PromotionCartRule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion cart rule."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PromotionDiscountJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "promotionId",
              "scope",
              "type",
              "value",
              "considerAdvancedRules",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "scope": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "value": {
                "type": "number",
                "format": "float"
              },
              "considerAdvancedRules": {
                "type": "boolean"
              },
              "maxValue": {
                "type": "number",
                "format": "float"
              },
              "sorterKey": {
                "type": "string"
              },
              "applierKey": {
                "type": "string"
              },
              "usageKey": {
                "type": "string"
              },
              "pickerKey": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/00cb5754ba634ce4b53f16710b348e66/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "bfcd1d81dd784f83955b3807380c430f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "discountRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/00cb5754ba634ce4b53f16710b348e66/discountRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "d30eb905e0764afba779aab600006ab3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/00cb5754ba634ce4b53f16710b348e66/promotionDiscountPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount_prices"
                            },
                            "id": {
                              "type": "string",
                              "example": "bfff0348680149a185c249a669f9ed48"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "scope",
          "type",
          "value",
          "considerAdvancedRules",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion discount."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "scope": {
            "type": "string",
            "description": "Cart or shipping cost."
          },
          "type": {
            "type": "string",
            "description": "Discount is either `absolute` or `percentage`."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "To filter by PromotionDiscount value."
          },
          "considerAdvancedRules": {
            "type": "boolean",
            "description": "When boolean value is `true`, the promotion discount is applied along with advanced rules."
          },
          "maxValue": {
            "type": "number",
            "format": "float",
            "description": "Discount in terms of absolute value."
          },
          "sorterKey": {
            "type": "string",
            "description": "Price from `low to high` or `high to low` to sort the product accordingly."
          },
          "applierKey": {
            "type": "string",
            "description": "Internal field."
          },
          "usageKey": {
            "type": "string",
            "description": "Internal field."
          },
          "pickerKey": {
            "type": "string",
            "description": "Internal field."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "discountRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          }
        },
        "type": "object"
      },
      "PromotionDiscountPricesJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "discountId",
              "currencyId",
              "price",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "discountId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "type": "number",
                "format": "float"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotionDiscount": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount-prices/5a48d41537364b22853752a16f8b5969/promotionDiscount"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion_discount"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "545058cd62614ab08e7f9145c214af42"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount-prices/5a48d41537364b22853752a16f8b5969/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "cbe51e9071374544af7e41d4fd76b102"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "discountId",
          "currencyId",
          "price",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion discount price."
          },
          "discountId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of discount."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price of the discount."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotionDiscount": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "type": "object"
      },
      "PromotionDiscountRule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "discountId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion discount price."
          },
          "discountId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of discount."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "discount": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PromotionIndividualCodeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "promotionId",
              "code",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "code": {
                "type": "string"
              },
              "payload": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-individual-code/86c34d2865584737b24f0626069911ae/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "113d0e8ba26f445d89c1daf5e598de58"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "code",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion individual code."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "code": {
            "type": "string",
            "description": "Promotion code."
          },
          "payload": {
            "type": "object",
            "description": "Any data related to promotion is passed."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          }
        },
        "type": "object"
      },
      "PromotionOrderRule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion order rule."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PromotionPersonaCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "customerId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of PromotionPersonaCustomer."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer."
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "type": "object"
      },
      "PromotionPersonaRule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of PromotionPersonaRule."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PromotionSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "promotionId",
              "salesChannelId",
              "priority",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "priority": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-sales-channel/00a88ae46169491389bcec77cb9ee5b8/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "eebc5bb827d041118b984c9881af91ce"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-sales-channel/00a88ae46169491389bcec77cb9ee5b8/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "416bba7c4b8148758e005fc8ad419928"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "salesChannelId",
          "priority",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion on sales channel."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one of the promotion saleschannels from the list."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "PromotionSetgroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "promotionId",
              "packagerKey",
              "sorterKey",
              "value",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "packagerKey": {
                "type": "string"
              },
              "sorterKey": {
                "type": "string"
              },
              "value": {
                "type": "number",
                "format": "float"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-setgroup/7f3350b094e84fd4a53acfba9e04f401/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3c736407394c4671b767dbc5c5d8a8be"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "setGroupRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-setgroup/7f3350b094e84fd4a53acfba9e04f401/setGroupRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "090e80eed4054ef4b1e9594bb4ed4947"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "packagerKey",
          "sorterKey",
          "value",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion set group."
          },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "packagerKey": {
            "type": "string",
            "description": "Internal field."
          },
          "sorterKey": {
            "type": "string",
            "description": "Internal field."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "To filter by PromotionSetgroup value."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "setGroupRules": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PromotionSetgroupRule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "setgroupId",
          "ruleId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion set group rule."
          },
          "setgroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of set group."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "setgroup": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "PropertyGroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "displayType",
              "sortingType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "displayType": {
                "type": "string"
              },
              "sortingType": {
                "type": "string"
              },
              "filterable": {
                "type": "boolean"
              },
              "visibleOnProductDetailPage": {
                "type": "boolean"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group/8340a0aa551f4440a0e0e62bfeb7ca8a/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "0aa7b4281e6348a08e10aead7001d9ca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayType",
          "sortingType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group."
          },
          "name": {
            "type": "string",
            "description": "Name of the property group."
          },
          "description": {
            "type": "string",
            "description": "Description on property group."
          },
          "displayType": {
            "type": "string",
            "description": "Property groups can be displayed in the form of text, image, dropdown or color."
          },
          "sortingType": {
            "type": "string",
            "description": "Sorting the property group by name or position."
          },
          "filterable": {
            "type": "boolean",
            "description": "When set to true, the property will be displayed in the product filter of product lists."
          },
          "visibleOnProductDetailPage": {
            "type": "boolean",
            "description": "When set to true, the property groups are displayed on product detail page."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined property groups. Enter numerical values like 1,2,3, etc.to adjust their order of display."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "options": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          }
        },
        "type": "object"
      },
      "PropertyGroupOptionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "groupId",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "groupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "colorHexCode": {
                "type": "string"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/d74a6dd1ce0b40f7afbfb5f4e18b6768/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7dea8304d4884debb541f48802535bcd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "group": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/d74a6dd1ce0b40f7afbfb5f4e18b6768/group"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "property_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5992bdf12a0547ccbbf2665796d0522d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/d74a6dd1ce0b40f7afbfb5f4e18b6768/productConfiguratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "d4197f5ff5e34bcdbb806f8d62230c5c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productProperties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/d74a6dd1ce0b40f7afbfb5f4e18b6768/productProperties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "e64e38d96b46436d9be06649b390f2a3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productOptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/d74a6dd1ce0b40f7afbfb5f4e18b6768/productOptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "df855621f5b54354a2c6fc02d5251c1c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group option."
          },
          "groupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group."
          },
          "name": {
            "type": "string",
            "description": "Name of the property group option."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined property group options. Enter numerical values like 1,2,3, etc.to adjust their order of display."
          },
          "colorHexCode": {
            "type": "string",
            "description": "Property group options can be displayed in the form of color. For example: #98e3f5ff."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "group": {
            "$ref": "#/components/schemas/PropertyGroup"
          },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "productProperties": {
            "$ref": "#/components/schemas/Product"
          },
          "productOptions": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "RuleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "priority",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "priority": {
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "type": "string"
              },
              "invalid": {
                "type": "boolean",
                "readOnly": true
              },
              "areas": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                },
                "readOnly": true
              },
              "customFields": {
                "type": "object"
              },
              "moduleTypes": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "conditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/conditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "e8f85d76690e4b5594a372b29edac6f9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/productPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "79d26cc132024c7fbb5512d77daccb9f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/shippingMethodPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "a4ebf74b19054827b15cd35d645aa23b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPriceCalculations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/shippingMethodPriceCalculations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "78d6ca5c7364432c93bececfc58d8b78"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "d84ba0aa57624bba84381a853eb3afca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "1210d777d8a34612a285bf2faa4325a4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/personaPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "a879621ed7a54c768b31474ddb9246dd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/flowSequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "720ae0ca03914058834ceec5b01d78f8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "c20f4f87ad7b4f6198e0685e994fe593"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/orderPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "0c9c17b330d141f69179dbb6bf8f5a08"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cartPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/cartPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "32b4e6a215684fcf9d7f05b3689f80bb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscounts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/promotionDiscounts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount"
                            },
                            "id": {
                              "type": "string",
                              "example": "fbf26b13df15456898d80cc98d1020d6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionSetGroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/promotionSetGroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_setgroup"
                            },
                            "id": {
                              "type": "string",
                              "example": "3df6b51de0504728acb72bb6e25a6182"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "eventActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/a2bab56b8d4a4957ab97f6d64bc7531b/eventActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "event_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "87c6a9d000174edfa1fb2dc721ccb140"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "priority",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "name": {
            "type": "string",
            "description": "Name of the rule defined."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one of the rules from the list."
          },
          "description": {
            "type": "string",
            "description": "Description of the rule."
          },
          "invalid": {
            "type": "boolean",
            "readOnly": true,
            "description": "When the boolean value is `true`, the rule is no more available for usage."
          },
          "areas": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "readOnly": true,
            "description": "Internal field."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "moduleTypes": {
            "type": "object",
            "description": "It can be used in cart or shipping pricing."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "conditions": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "productPrices": {
            "$ref": "#/components/schemas/ProductPrice"
          },
          "shippingMethodPrices": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethodPriceCalculations": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "personaPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "flowSequences": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "orderPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "cartPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionDiscounts": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "promotionSetGroups": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "eventActions": {
            "$ref": "#/components/schemas/EventAction"
          },
          "extensions": {
            "description": "To store additional data to a rule from extensions."
          }
        },
        "type": "object"
      },
      "RuleConditionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "type",
              "ruleId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": {
                "type": "string"
              },
              "ruleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "scriptId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "value": {
                "type": "object"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/bc37f0e88bea4fa48a4f835df102480e/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "08eae009fd6748ffa366942d34b8455d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appScriptCondition": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/bc37f0e88bea4fa48a4f835df102480e/appScriptCondition"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_script_condition"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "838caa31203148a694ab0636369532af"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/bc37f0e88bea4fa48a4f835df102480e/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule_condition"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "65e370dea551463a85f21038c541a33c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/bc37f0e88bea4fa48a4f835df102480e/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "e6a3b7365d0d4faa9a5a118376ae9cd4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "type",
          "ruleId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule condition."
          },
          "type": {
            "type": "string",
            "description": "Different rule types. "
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "scriptId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of script."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent."
          },
          "value": {
            "type": "object",
            "description": "Value of the RuleCondition."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined rule setting configurations in the Administration by entering numerical values like 1,2,3, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "appScriptCondition": {
            "$ref": "#/components/schemas/AppScriptCondition"
          },
          "parent": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "children": {
            "$ref": "#/components/schemas/RuleCondition"
          }
        },
        "type": "object"
      },
      "RuleTag": {
        "description": "Added since version: 6.5.0.0",
        "required": [
          "ruleId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule tag."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "SalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "typeId",
              "languageId",
              "customerGroupId",
              "currencyId",
              "paymentMethodId",
              "shippingMethodId",
              "countryId",
              "navigationCategoryId",
              "accessKey",
              "createdAt",
              "name",
              "homeEnabled"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "typeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "analyticsId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "navigationCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "navigationCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "navigationCategoryDepth": {
                "type": "integer",
                "format": "int64"
              },
              "footerCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "footerCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "serviceCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "serviceCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mailHeaderFooterId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hreflangDefaultDomainId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "shortName": {
                "type": "string"
              },
              "taxCalculationType": {
                "type": "string"
              },
              "accessKey": {
                "type": "string"
              },
              "configuration": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "hreflangActive": {
                "type": "boolean"
              },
              "maintenance": {
                "type": "boolean"
              },
              "maintenanceIpWhitelist": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                }
              },
              "customFields": {
                "type": "object"
              },
              "paymentMethodIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "homeCmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "homeCmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "homeSlotConfig": {
                "type": "object"
              },
              "homeEnabled": {
                "type": "boolean"
              },
              "homeName": {
                "type": "string"
              },
              "homeMetaTitle": {
                "type": "string"
              },
              "homeMetaDescription": {
                "type": "string"
              },
              "homeKeywords": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "extensions": {
                "properties": {
                  "themes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/themes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "theme"
                            },
                            "id": {
                              "type": "string",
                              "example": "01498ac87a884455ba9915893503a4a6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "currencies": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/currencies"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "currency"
                            },
                            "id": {
                              "type": "string",
                              "example": "8735b1c06d644a3e8c17552d0a26106d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "languages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/languages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "language"
                            },
                            "id": {
                              "type": "string",
                              "example": "cb156e65237a4d1e84101565a158d649"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/countries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country"
                            },
                            "id": {
                              "type": "string",
                              "example": "64f5a94e30e64f81909a8d33ad12c0d3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "2974255e85164e16a5c0055aa27b44a7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "0861da57488f431a928945045e11adca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6299bcefe2b345da888934ab95532321"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5b25a7feee85470184fee698a0a17561"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/customerGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6336456fa23345969ffb010486b57bf6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "044d40858980426884938301c7e300b7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9b21f84037fa46adbb5c48f17815ff1f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7cf97baf1a3144c2beba7d413fccc060"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fdd708b48cba47eb91c3ec34e94ba231"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "d0a2f44794c54e238f283a40ec9b3e2b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "34aecf58088c433aac7eb79cde010ef8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "homeCmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/homeCmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2eabd3086dde4e71a7dd38b167612b0b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "domains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/domains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "e42e882df4f64f18b116ff30a4f2f331"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "systemConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/systemConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "system_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "322e91090c154497b41bccc784c1fb1d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "navigationCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/navigationCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6579b55f5eca4481bdddd21af527605b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "footerCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/footerCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e8ea2afa4b4e41d6b6b29f982e8b0c65"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "serviceCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/serviceCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "59eb82461b5543f1869971897090ff87"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productVisibilities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/productVisibilities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_visibility"
                            },
                            "id": {
                              "type": "string",
                              "example": "56e17cab810e497b96c81e9d979197b4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "hreflangDefaultDomain": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/hreflangDefaultDomain"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_domain"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "496399d23b7041ff8c8f1e408541a020"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mailHeaderFooter": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/mailHeaderFooter"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "mail_header_footer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5ca7ede3a4dc4c31a9c3c14da2a5acb1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "c306bae68c9b451b80516be1ee8ca666"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "b8fa2bd48a8c4bc3aba80bfcdf8adec6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/promotionSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "326970c1e9cd4cfc82aa9dd3ad42b695"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/documentBaseConfigSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "7d1c5fd3121845d784f6ae4e118f6794"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "eb230c9af5184e73878d7668504bc25a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "626572fe90144704921042886bf602b7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrlTemplates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/seoUrlTemplates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "681f3db944654037b4aac83dec1218b6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "667a2210d0a242a0920b5a4e79b275a2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "3d90b738cfbc4bc9b5036673c1279ba6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "analytics": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/analytics"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_analytics"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "79bdfe673d0b4912b4c6f239b10c75a1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerGroupsRegistrations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/customerGroupsRegistrations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "2013d58c1fe54577a9a251812fab605f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "eventActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/eventActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "event_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "2de5c69c6fab4f9a876e3cea0b966602"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "11e4cb9c9a0b4abd887e642c8e2505fe"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "boundCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/boundCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "333b8c1c332b4857b7ac8876dd15aeff"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist"
                            },
                            "id": {
                              "type": "string",
                              "example": "f8fac185647f4c2088451fd84438ea59"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "typeId",
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "accessKey",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "typeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of type."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language used."
          },
          "customerGroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer group."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency used."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method used."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "analyticsId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "navigationCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of navigation category."
          },
          "navigationCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of navigation category's version."
          },
          "navigationCategoryDepth": {
            "type": "integer",
            "format": "int64",
            "description": "It determines the number of levels of subcategories in the storefront category menu."
          },
          "footerCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of footer category."
          },
          "footerCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of footer category's version."
          },
          "serviceCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of service category."
          },
          "serviceCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of service category's version."
          },
          "mailHeaderFooterId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail header and footer."
          },
          "hreflangDefaultDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of hreflangDefaultDomain."
          },
          "name": {
            "type": "string",
            "description": "Name of the sales channel."
          },
          "shortName": {
            "type": "string",
            "description": "A short name for sales channel."
          },
          "taxCalculationType": {
            "type": "string",
            "description": "Tax calculation types are `horizontal` and `vertical`."
          },
          "accessKey": {
            "type": "string",
            "description": "Access key to store api."
          },
          "configuration": {
            "type": "object",
            "description": "Internal field."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the sales channel is enabled."
          },
          "hreflangActive": {
            "type": "boolean",
            "description": "When set to true, the sales channel pages are available in different languages."
          },
          "maintenance": {
            "type": "boolean",
            "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
          },
          "maintenanceIpWhitelist": {
            "type": "array",
            "items": {
              "additionalProperties": false
            },
            "description": "List of IP addresseS used when the maintenance mode is active."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "paymentMethodIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity of payment method."
          },
          "homeCmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of home CMS page."
          },
          "homeCmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of home CMS page's version."
          },
          "homeSlotConfig": {
            "type": "object",
            "description": "Specifies detailed information about how the CMS slots are configured for sales channel."
          },
          "homeEnabled": {
            "type": "boolean",
            "description": "When boolean value is `true`, it indicates that sales channel is included in the menu section of the homepage navigation."
          },
          "homeName": {
            "type": "string",
            "description": "Name of the menu section for the sales channel."
          },
          "homeMetaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "homeMetaDescription": {
            "type": "string",
            "description": "A short description of the page for search results listings."
          },
          "homeKeywords": {
            "type": "string",
            "description": "Keywords that help to search the sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "extensions": {
            "properties": {
              "themes": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/1c2d39bbde2445b8bf9d15cc82e0e4d1/themes"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "theme"
                        },
                        "id": {
                          "type": "string",
                          "example": "01498ac87a884455ba9915893503a4a6"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "currencies": {
            "$ref": "#/components/schemas/Currency"
          },
          "languages": {
            "$ref": "#/components/schemas/Language"
          },
          "countries": {
            "$ref": "#/components/schemas/Country"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "type": {
            "$ref": "#/components/schemas/SalesChannelType"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "homeCmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "domains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "systemConfigs": {
            "$ref": "#/components/schemas/SystemConfig"
          },
          "navigationCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "footerCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "serviceCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "productVisibilities": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "mailHeaderFooter": {
            "$ref": "#/components/schemas/MailHeaderFooter"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "promotionSalesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "seoUrlTemplates": {
            "$ref": "#/components/schemas/SeoUrlTemplate"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "analytics": {
            "$ref": "#/components/schemas/SalesChannelAnalytics"
          },
          "customerGroupsRegistrations": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "eventActions": {
            "$ref": "#/components/schemas/EventAction"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "boundCustomers": {
            "$ref": "#/components/schemas/Customer"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlist"
          }
        },
        "type": "object"
      },
      "SalesChannelAnalyticsJsonApi": {
        "description": "Added since version: 6.2.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "trackingId": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "trackOrders": {
                "type": "boolean"
              },
              "anonymizeIp": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-analytics/d67055e6e0e947b4a0ba820d1559a29d/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f44a0bdf03f44a99a0e1713347fcefe8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel analytics."
          },
          "trackingId": {
            "type": "string",
            "description": "Unique identity for tracking."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the sales channel analytics are enabled."
          },
          "trackOrders": {
            "type": "boolean",
            "description": "When boolean value is `true`, it enables Google Analytics to track orders."
          },
          "anonymizeIp": {
            "type": "boolean",
            "description": "Unique identity of anonymize."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SalesChannelCountry": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "countryId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel country."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          }
        },
        "type": "object"
      },
      "SalesChannelCurrency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "currencyId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel currency."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "type": "object"
      },
      "SalesChannelDomainJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "url",
              "salesChannelId",
              "languageId",
              "currencyId",
              "snippetSetId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "url": {
                "type": "string"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "snippetSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hreflangUseOnlyLocale": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8e905764b6c14bb7a8b004a0ff673393"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "46aaa78069e54485a3db75138995d37c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "currency"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1291f2ee1aaf41d39e64ddeb076d9a53"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "snippetSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/snippetSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "snippet_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "de32dcb534e94795b3170383631a9cc7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultHreflang": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/salesChannelDefaultHreflang"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "bb88881c738044038199705a5a017a44"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/af6471b8225f4b6eaadecd10fc78bb1a/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "4ddbed3061804c4097c6bfcc9a31a663"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel domain."
          },
          "url": {
            "type": "string",
            "description": "URL of the sales channel domain."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language used."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "snippetSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet set."
          },
          "hreflangUseOnlyLocale": {
            "type": "boolean",
            "description": "This is used to toggle the language configurations, say between DE and DE-DE for instance."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "snippetSet": {
            "$ref": "#/components/schemas/SnippetSet"
          },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          }
        },
        "type": "object"
      },
      "SalesChannelLanguage": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "languageId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel language."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        },
        "type": "object"
      },
      "SalesChannelPaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "paymentMethodId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Sales Channel Payment Method."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          }
        },
        "type": "object"
      },
      "SalesChannelShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "shippingMethodId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Sales Channel Shipping Method."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          }
        },
        "type": "object"
      },
      "SalesChannelTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "coverUrl": {
                "type": "string"
              },
              "iconName": {
                "type": "string"
              },
              "screenshotUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "name": {
                "type": "string"
              },
              "manufacturer": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "descriptionLong": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-type/9e90a9787f334bd5868a436b78fcabc0/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "5d4164ed7195491aa225335a396fc269"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel type."
          },
          "coverUrl": {
            "type": "string",
            "description": "A url for the sales channel type."
          },
          "iconName": {
            "type": "string",
            "description": "An icon for sales channel type."
          },
          "screenshotUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the sales channel type."
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer name of the sales channel."
          },
          "description": {
            "type": "string",
            "description": "A short description for sales channel type."
          },
          "descriptionLong": {
            "type": "string",
            "description": "A detailed description for sales channel type."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SalutationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationKey": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "letterName": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/91a65647dc204875b988215bd60b2858/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "96062219990d480282c63051775177c3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/91a65647dc204875b988215bd60b2858/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "040e1c93bc314243b258ea14f447c178"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/91a65647dc204875b988215bd60b2858/orderCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "f40307ab1a804bccbba46de9fb895fef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/91a65647dc204875b988215bd60b2858/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "922e2b3367ad42d184ca289b98878e3d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/91a65647dc204875b988215bd60b2858/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "854e35e201a04dc090b448b188d3f243"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salutationKey",
          "createdAt",
          "displayName",
          "letterName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "salutationKey": {
            "type": "string",
            "description": "Technical name given to salutation. For example: mr"
          },
          "displayName": {
            "type": "string",
            "description": "Name given for salutation and displayed in storefront. For example: Mr"
          },
          "letterName": {
            "type": "string",
            "description": "Name given for salutation and used in the mail templates. For example, Dear Mr"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderCustomers": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          }
        },
        "type": "object"
      },
      "ScheduledTaskJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "scheduledTaskClass",
              "runInterval",
              "status",
              "nextExecutionTime",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "scheduledTaskClass": {
                "type": "string"
              },
              "runInterval": {
                "type": "integer",
                "format": "int64"
              },
              "status": {
                "type": "string"
              },
              "lastExecutionTime": {
                "type": "string",
                "format": "date-time"
              },
              "nextExecutionTime": {
                "type": "string",
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "deadMessages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/scheduled-task/534a887646ed45fa8881c6aea5d49796/deadMessages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "dead_message"
                            },
                            "id": {
                              "type": "string",
                              "example": "947ffc28128b4d8c8a0f18ae14886258"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "scheduledTaskClass",
          "runInterval",
          "status",
          "nextExecutionTime",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of scheduled task."
          },
          "name": {
            "type": "string",
            "description": "Name of the scheduled task."
          },
          "scheduledTaskClass": {
            "type": "string",
            "description": "Unique identity of scheduled task."
          },
          "runInterval": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency interval at which the scheduled task must run like 5 min, 1 hours , etc"
          },
          "status": {
            "type": "string",
            "description": "When status is set, the ScheduledTask is made visible."
          },
          "lastExecutionTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the scheduled task was last executed. "
          },
          "nextExecutionTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the scheduled task will execute next. "
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deadMessages": {
            "$ref": "#/components/schemas/DeadMessage"
          },
          "defaultRunInterval": {
            "description": "Default run interval setting."
          }
        },
        "type": "object"
      },
      "ScriptJsonApi": {
        "description": "Added since version: 6.4.7.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "script",
              "hook",
              "name",
              "active",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "script": {
                "type": "string"
              },
              "hook": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/script/ee158138238f49a0be109714fd63d659/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1b392fa42b6b471f8b7d5badb7e3cbde"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "required": [
          "script",
          "hook",
          "name",
          "active",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a script."
          },
          "script": {
            "type": "string",
            "description": "Internal field."
          },
          "hook": {
            "type": "string",
            "description": "Internal field."
          },
          "name": {
            "type": "string",
            "description": "Internal field."
          },
          "active": {
            "type": "boolean",
            "description": "Internal field."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "foreignKey": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "routeName": {
                "type": "string"
              },
              "pathInfo": {
                "type": "string"
              },
              "seoPathInfo": {
                "type": "string"
              },
              "isCanonical": {
                "type": "boolean"
              },
              "isModified": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url/2806343946a34467a4c021da8128fca2/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "89f2d22d0d2f40dbbfa95cc4ca09887e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url/2806343946a34467a4c021da8128fca2/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "adc33fc0a96445099bbbbf8400fca266"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Seo Url."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "foreignKey": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "The key that references to product or category entity ID."
          },
          "routeName": {
            "type": "string",
            "description": "A destination routeName that has been registered somewhere in the app's router. For example: \"frontend.detail.page\""
          },
          "pathInfo": {
            "type": "string",
            "description": "Path to product URL. For example: \"/detail/bbf36734504741c79a3bbe3795b91564\""
          },
          "seoPathInfo": {
            "type": "string",
            "description": "Seo path to product. For example: \"Pepper-white-ground-pearl/SW10098\""
          },
          "isCanonical": {
            "type": "boolean",
            "description": "When set to true, search redirects to the main URL."
          },
          "isModified": {
            "type": "boolean",
            "description": "When boolean value is `true`, the seo url is changed."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "When set to true, the URL is deleted and cannot be used any more but it is still available on table and can be restored later."
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SeoUrlTemplateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "entityName",
              "routeName",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": {
                "type": "string"
              },
              "routeName": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "isValid": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url-template/6ddfdc95e8994aa3ba53acb6c55b3f5a/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "482c12a2bdca454db1d897f9bb2b3b0d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "entityName",
          "routeName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Seo Url template."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "entityName": {
            "type": "string",
            "description": "Name of the entity."
          },
          "routeName": {
            "type": "string",
            "description": "Name of the route."
          },
          "template": {
            "type": "string",
            "description": "Template to generate an URL."
          },
          "isValid": {
            "type": "boolean",
            "description": "Created SEO URL template can be made usable by setting `isValid` to true."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "availabilityRuleId",
              "deliveryTimeId",
              "taxType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxType": {
                "type": "string"
              },
              "taxId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "description": {
                "type": "string"
              },
              "trackingUrl": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c1e9af004e094f239908342bf59a5515"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "57d6e562591c4251bc822b4c6dc5efb0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "0052cbc6ca8f4237bf2e11a2a99676e8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b56851d81ea64c0aaf399f1bf00bf520"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "6cffe43bc6f14585bb5d87ed1cafd69c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "02eb26f6b9eb41869e4ba224ce28c4e7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "4405e48943bf4c1ea58cb130110d6fe5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "9a5f631a5b6141b8a9c06c50392bf69a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/779d2a83167943609db5243f4ccc5a9d/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c39894502d954b349ca59f4463f45755"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "availabilityRuleId",
          "deliveryTimeId",
          "taxType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "name": {
            "type": "string",
            "description": "Name of the shipping method."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the shipping methods are available for selection in the storefront."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined shipping methods in the storefront by entering numerical values like 1,2,3, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of availability rule."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "deliveryTimeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of deliveryTime."
          },
          "taxType": {
            "type": "string",
            "description": "Refers `Free`, `Net` or `Gross` type of taxes."
          },
          "taxId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax."
          },
          "description": {
            "type": "string",
            "description": "Description of each shipping method."
          },
          "trackingUrl": {
            "type": "string",
            "description": "This URL allows to track packages."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "availabilityRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "prices": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          }
        },
        "type": "object"
      },
      "ShippingMethodPriceJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "shippingMethodId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "calculation": {
                "type": "integer",
                "format": "int64"
              },
              "calculationRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "quantityStart": {
                "type": "number",
                "format": "float"
              },
              "quantityEnd": {
                "type": "number",
                "format": "float"
              },
              "currencyPrice": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/851d1894b6974c64821cfe778561e265/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7612312bfc7843c99c3ef078fd7aeec1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/851d1894b6974c64821cfe778561e265/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b939fcc7bef74dea91b01937f97f7c72"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "calculationRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/851d1894b6974c64821cfe778561e265/calculationRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "ad9df142d1ff4bcf9209026c37074f79"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "shippingMethodId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method price."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "calculation": {
            "type": "integer",
            "format": "int64",
            "description": "Shipping price calculated based on quantity, price, weight or volume of items."
          },
          "calculationRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule calculation."
          },
          "quantityStart": {
            "type": "number",
            "format": "float",
            "description": "Starting range of quantity of an item."
          },
          "quantityEnd": {
            "type": "number",
            "format": "float",
            "description": "Ending range of quantity of an item."
          },
          "currencyPrice": {
            "type": "object",
            "description": "Contains currency-based price."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "ShippingMethodTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "shippingMethodId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Shipping method tag."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Shipping method."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "SnippetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "setId",
              "translationKey",
              "value",
              "author",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "setId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "translationKey": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "set": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet/4892898af8e94651973708b2e11ea9ef/set"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "snippet_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7eba152d322d45ab8eff17964384a183"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "setId",
          "translationKey",
          "value",
          "author",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet."
          },
          "setId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity od snippet set."
          },
          "translationKey": {
            "type": "string",
            "description": "Reference to the snippet in the template."
          },
          "value": {
            "type": "string",
            "description": "Value of the key."
          },
          "author": {
            "type": "string",
            "description": "Creator of the Snippet"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "set": {
            "$ref": "#/components/schemas/SnippetSet"
          }
        },
        "type": "object"
      },
      "SnippetSetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "baseFile",
              "iso",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "baseFile": {
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "snippets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet-set/06149d34965940abb63b569707bf5cea/snippets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "snippet"
                            },
                            "id": {
                              "type": "string",
                              "example": "eddf4d030ed2476ab5998beea7dc33e7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet-set/06149d34965940abb63b569707bf5cea/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "8b2ca67b75a3494b9bd5d8ba9345d931"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "baseFile",
          "iso",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet set."
          },
          "name": {
            "type": "string",
            "description": "Name of snippet set."
          },
          "baseFile": {
            "type": "string"
          },
          "iso": {
            "type": "string",
            "description": "ISO nomenclature used to classify languages."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "snippets": {
            "$ref": "#/components/schemas/Snippet"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          }
        },
        "type": "object"
      },
      "StateMachineJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "technicalName",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "technicalName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "initialStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/a8904eed858c456c8fa4cf52068f98d5/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "a65bb0e0c69a4543bc25baa651796179"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/a8904eed858c456c8fa4cf52068f98d5/transitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "53d5ad4de9ef4a97ae019af6b1d1749b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "historyEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/a8904eed858c456c8fa4cf52068f98d5/historyEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "4bcecf7007104716950cb9346787b1c4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of state machine."
          },
          "name": {
            "type": "string",
            "description": "Unique name of state machine."
          },
          "customFields": {
            "type": "object"
          },
          "initialStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "states": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "historyEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          }
        },
        "type": "object"
      },
      "StateMachineHistoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "stateMachineId",
              "entityName",
              "entityId",
              "fromStateId",
              "toStateId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": {
                "type": "string"
              },
              "entityId": {
                "type": "object"
              },
              "fromStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "toStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "transitionActionName": {
                "type": "string"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/6541ce3b88f443cc8e2dd2765b225801/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6fd0f1ceff964f55bf13151a4f0f0323"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/6541ce3b88f443cc8e2dd2765b225801/fromStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "bc6518b37ac547d0b28f787252e12b50"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/6541ce3b88f443cc8e2dd2765b225801/toStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3add29cfb4fa4016a3bca20ae76af166"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/6541ce3b88f443cc8e2dd2765b225801/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "0eb12b49d99a45c192863de34fcf6c6c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "stateMachineId",
          "entityName",
          "entityId",
          "fromStateId",
          "toStateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine history."
          },
          "stateMachineId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine."
          },
          "entityName": {
            "type": "string",
            "description": "Name of the entity."
          },
          "entityId": {
            "type": "object",
            "description": "Unique identity of entity."
          },
          "fromStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of fromState."
          },
          "toStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of toState."
          },
          "transitionActionName": {
            "type": "string",
            "description": "Unique name of transition action."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "referencedId": {
            "description": "Unique identity of reference."
          },
          "referencedVersionId": {
            "description": "Unique identity of reference's version."
          }
        },
        "type": "object"
      },
      "StateMachineStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "technicalName",
              "stateMachineId",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "technicalName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1b22f04794564624b4c078eeb08315cf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineTransitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/fromStateMachineTransitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "dc86b1a4a6054aa79769d885adb7426f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineTransitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/toStateMachineTransitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "8247fd2daba1466eac293f22f612cf7b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/orderTransactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "11149a4403744887884c3051a754729f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "4894998b5e1b4e9d87ddfdd4bece2391"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "ee59ed703e3f4e31898b14f9b0e6b120"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptures": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/orderTransactionCaptures"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture"
                            },
                            "id": {
                              "type": "string",
                              "example": "1b7ed9e4578746bc834836732322822b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefunds": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/orderTransactionCaptureRefunds"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund"
                            },
                            "id": {
                              "type": "string",
                              "example": "292a03db679c401b84ee00a50a31ae7f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/toStateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "127dbe5e23314c14a5c3b9b60901e606"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/5d46672a2faa49fdba84636fcde69451/fromStateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "f89a7eae134745568f7595d7cba913db"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "stateMachineId",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine state."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of StateMachineState."
          },
          "name": {
            "type": "string",
            "description": "Display name of StateMachineState."
          },
          "stateMachineId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of StateMachine."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "fromStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "toStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "orderTransactionCaptures": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "orderTransactionCaptureRefunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "toStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "fromStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          }
        },
        "type": "object"
      },
      "StateMachineTransitionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "actionName",
              "stateMachineId",
              "fromStateId",
              "toStateId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "actionName": {
                "type": "string"
              },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fromStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "toStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/ef1f8d38b558453ea376cc232c35571e/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2114abead18f41d0b8ef5f4f084668a8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/ef1f8d38b558453ea376cc232c35571e/fromStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "92cf42cd140f4a7aae714b2f74306817"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/ef1f8d38b558453ea376cc232c35571e/toStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5b337edb51744567955e1f9e7b3dd445"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "actionName",
          "stateMachineId",
          "fromStateId",
          "toStateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine transition."
          },
          "actionName": {
            "type": "string",
            "description": "Unique name of the action."
          },
          "stateMachineId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine."
          },
          "fromStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of from state."
          },
          "toStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of to state."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "SystemConfigJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "configurationKey",
              "configurationValue",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "configurationKey": {
                "type": "string"
              },
              "configurationValue": {
                "properties": {
                  "_value": {
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/system-config/b85d0973cee847dda67e8fd595f09a4c/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "414a7822bfb74ccf98be0fb4db2755f7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "configurationKey",
          "configurationValue",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of system configuration."
          },
          "configurationKey": {
            "type": "string",
            "description": "Config key for shop configurations."
          },
          "configurationValue": {
            "properties": {
              "_value": {
                "type": "object",
                "description": "Config value for shop configurations."
              }
            },
            "type": "object"
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "TagJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "b1e16056242d4a778cf0f670de0bc0a0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media"
                            },
                            "id": {
                              "type": "string",
                              "example": "a979fc03458d45fe8b2427ce9be67ae1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "83f80bf1a60e469ebbce2500d74375a5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "91def1fa9a7f4c898fa68ff7afb1cb34"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "aecb2459f26e461896693584ab328b51"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "8b3135da1ce446a0b9bb7c892b4631b9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "a77d709f52eb48d7a2679798079a692f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "aef1d9059de6442c8745b40552bb6fc1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/73331e4a69b24431a9684eca342c61ef/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "cb533c908ee54b3497e1c16af72ee11e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the tag."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "rules": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "type": "object"
      },
      "TaxJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "taxRate",
              "name",
              "position",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxRate": {
                "type": "number",
                "format": "float"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "description": "Added since version: 6.4.0.0.",
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/cabcda3fd3164fb1af4f9ea4f05107f0/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "a31cf51132354203acc7c2a0a503ac9d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/cabcda3fd3164fb1af4f9ea4f05107f0/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tax_rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "b63f5b30839941dd9ac59b5bfeb97fd0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/cabcda3fd3164fb1af4f9ea4f05107f0/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "15ca84b17f754e9f81070b4f1f67af8b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "taxRate",
          "name",
          "position",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax."
          },
          "taxRate": {
            "type": "number",
            "format": "float",
            "description": "Rate of tax."
          },
          "name": {
            "type": "string",
            "description": "Name defined for a Tax."
          },
          "position": {
            "description": "The order of the tabs of your defined taxes in the storefront by entering numerical values like 1,2,3, etc.",
            "type": "integer",
            "format": "int64"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "rules": {
            "$ref": "#/components/schemas/TaxRule"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          }
        },
        "type": "object"
      },
      "TaxRuleJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "taxRuleTypeId",
              "countryId",
              "taxRate",
              "taxId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxRuleTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxRate": {
                "type": "number",
                "format": "float"
              },
              "data": {
                "properties": {
                  "states": {
                    "type": "array",
                    "items": {
                      "additionalProperties": false
                    }
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "fromZipCode": {
                    "type": "string"
                  },
                  "toZipCode": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "taxId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/3082e902b443400ebbbbdffeb49fe854/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax_rule_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c9ce2562e5e042d58ca378fb9956c430"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/3082e902b443400ebbbbdffeb49fe854/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "323b6cf6e7264ad8ba99ffd07222b0d1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/3082e902b443400ebbbbdffeb49fe854/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b5a1107a1fed463fb5e771cc3220d0e6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "taxRuleTypeId",
          "countryId",
          "taxRate",
          "taxId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax rule."
          },
          "taxRuleTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax rule type."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "taxRate": {
            "type": "number",
            "format": "float",
            "description": "Rate of tax defined for a tax rule."
          },
          "data": {
            "properties": {
              "states": {
                "type": "array",
                "items": {
                  "additionalProperties": false
                },
                "description": "Parameter that specifies the country's states where the tax rule is applicable."
              },
              "zipCode": {
                "type": "string",
                "description": "Parameter that specifies the country's zipcode where the tax rule is applicable."
              },
              "fromZipCode": {
                "type": "string",
                "description": "Parameter that designates from which zip code the tax rule is applicable."
              },
              "toZipCode": {
                "type": "string",
                "description": "Parameter that designates to which zip code the tax rule is applicable."
              }
            },
            "type": "object"
          },
          "taxId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TaxRuleType"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "activeFrom": {
            "description": "Date and time when the tax rule is enabled."
          }
        },
        "type": "object"
      },
      "TaxRuleTypeJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "technicalName",
              "position",
              "createdAt",
              "typeName"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "technicalName": {
                "type": "string",
                "readOnly": true
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "typeName": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule-type/c9608877c7a441359941538a7f1eb518/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tax_rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "06c757b2dce641e2b632fd6dd687a567"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "technicalName",
          "position",
          "createdAt",
          "typeName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax rule type."
          },
          "technicalName": {
            "type": "string",
            "readOnly": true,
            "description": "Unique name of tax rule type."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined tax rules to be displayed in the storefront by entering numerical values like 1,2,3, etc."
          },
          "typeName": {
            "type": "string",
            "description": "Type name can be zip code, state, or country."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "rules": {
            "$ref": "#/components/schemas/TaxRule"
          }
        },
        "type": "object"
      },
      "ThemeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "author",
              "active",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "technicalName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "labels": {
                "type": "object"
              },
              "helpTexts": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "previewMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentThemeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "baseConfig": {
                "type": "object"
              },
              "configValues": {
                "type": "object"
              },
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/0218fb90e63846be85325888f8055a0b/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "e48382d2b99e42a68d51778fd438226e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/0218fb90e63846be85325888f8055a0b/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media"
                            },
                            "id": {
                              "type": "string",
                              "example": "3cf5f26884144db6bc47f0e6c9f3397f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/0218fb90e63846be85325888f8055a0b/previewMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "72a09fdf46214fd9849f663d24136f83"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dependentThemes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/0218fb90e63846be85325888f8055a0b/dependentThemes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "theme"
                            },
                            "id": {
                              "type": "string",
                              "example": "81f227ba600d4de4b6e7614071b12431"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "childThemes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/0218fb90e63846be85325888f8055a0b/childThemes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "theme"
                            },
                            "id": {
                              "type": "string",
                              "example": "c3736bb25c514d749fbfacbbecff7c00"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "author",
          "active",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Theme."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of Theme."
          },
          "name": {
            "type": "string",
            "description": "Name of theme which is translatable."
          },
          "author": {
            "type": "string",
            "description": "Creator of the theme."
          },
          "description": {
            "type": "string",
            "description": "Description of the theme."
          },
          "labels": {
            "type": "object",
            "description": "Identification label given to theme."
          },
          "helpTexts": {
            "type": "object",
            "description": "Texts from config element."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "previewMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media used for previewing the theme."
          },
          "parentThemeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent theme."
          },
          "baseConfig": {
            "type": "object",
            "description": "Config elements of theme like header, color, etc"
          },
          "configValues": {
            "type": "object",
            "description": "Chosen values for the configuration."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the created theme can be made usable."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "previewMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "dependentThemes": {
            "$ref": "#/components/schemas/Theme"
          },
          "childThemes": {
            "$ref": "#/components/schemas/Theme"
          },
          "themeJson": {
            "description": "Internal field."
          }
        },
        "type": "object"
      },
      "ThemeChild": {
        "description": "Added since version: 6.4.8.0",
        "required": [
          "parentId",
          "childId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ThemeChild."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent."
          },
          "childId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of child."
          },
          "parentTheme": {
            "$ref": "#/components/schemas/Theme"
          },
          "childTheme": {
            "$ref": "#/components/schemas/Theme"
          }
        },
        "type": "object"
      },
      "ThemeMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "themeId",
          "mediaId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ThemeMedia."
          },
          "themeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of theme."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "ThemeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salesChannelId",
          "themeId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ThemeMedia."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "themeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of theme."
          },
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "UnitJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "shortCode",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shortCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/unit/5fa96df0b44442db9e2593b7ed898ada/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "d963d3dfa80e4ea9be13dfcc52a5aebe"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "shortCode",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Unit."
          },
          "shortCode": {
            "type": "string",
            "description": "Short name for unit, e.g., m, kg."
          },
          "name": {
            "type": "string",
            "description": "Full name of the unit, e.g., Meter, kilogram."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "UserJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "localeId",
              "username",
              "firstName",
              "lastName",
              "email",
              "timeZone",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "localeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "avatarId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "username": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "lastUpdatedPasswordAt": {
                "type": "string",
                "format": "date-time"
              },
              "timeZone": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "createdNotifications": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/createdNotifications"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "notification"
                            },
                            "id": {
                              "type": "string",
                              "example": "d95baae8bd3b4e02938aca69eb056f32"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "locale"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2972e6ff0f3d4e1e95fef9220653d336"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "avatarMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/avatarMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e44a5d8a06d34fc282d1126a8c52707c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media"
                            },
                            "id": {
                              "type": "string",
                              "example": "a1dea55b0ae84ee0ac6f8fcf93827f31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "accessKeys": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/accessKeys"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user_access_key"
                            },
                            "id": {
                              "type": "string",
                              "example": "7e5b62a1203240c385caa95e2445f27e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/configs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "71f7049310f94f95a7697346354c41ee"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/stateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "08c8ead209184230a20d5582bb6cdc92"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "importExportLogEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/importExportLogEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "import_export_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "5c4478d60f3c46bfbbe8c95448886c57"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRoles": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/aclRoles"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "acl_role"
                            },
                            "id": {
                              "type": "string",
                              "example": "870d8e9d461f4cda815d6655542f21a5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "recoveryUser": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/recoveryUser"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user_recovery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6c88272c4b7440baa4a180bfcb12c715"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdOrders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/createdOrders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "e382f3dfb84e4b3ba17e56997f24eca6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedOrders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/updatedOrders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order"
                            },
                            "id": {
                              "type": "string",
                              "example": "9b5f7d66e9bb413081415e65317a394c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/createdCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "a0306c2ba5bc415ca3985fd9bd96897a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/f2bc3f1a735646afbfce1e179986f10a/updatedCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "ccf77463fc564711898cee4f3c78e69c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "localeId",
          "username",
          "firstName",
          "lastName",
          "email",
          "timeZone",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the user."
          },
          "localeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of locale."
          },
          "avatarId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the avatar."
          },
          "username": {
            "type": "string",
            "description": "Username of the user."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user."
          },
          "title": {
            "type": "string",
            "description": "Title of the user."
          },
          "email": {
            "type": "string",
            "description": "Email of the user."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the user is enabled."
          },
          "admin": {
            "type": "boolean",
            "description": "Parameter that indicates if the user is an admin."
          },
          "lastUpdatedPasswordAt": {
            "type": "string",
            "format": "date-time",
            "description": "Parameter that indicates when the password was last updated by the user."
          },
          "timeZone": {
            "type": "string",
            "description": "Time configuration in the user's profile."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "createdNotifications": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/f2bc3f1a735646afbfce1e179986f10a/createdNotifications"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "notification"
                        },
                        "id": {
                          "type": "string",
                          "example": "d95baae8bd3b4e02938aca69eb056f32"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "avatarMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "accessKeys": {
            "$ref": "#/components/schemas/UserAccessKey"
          },
          "configs": {
            "$ref": "#/components/schemas/UserConfig"
          },
          "stateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "importExportLogEntries": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "aclRoles": {
            "$ref": "#/components/schemas/AclRole"
          },
          "recoveryUser": {
            "$ref": "#/components/schemas/UserRecovery"
          },
          "createdOrders": {
            "$ref": "#/components/schemas/Order"
          },
          "updatedOrders": {
            "$ref": "#/components/schemas/Order"
          },
          "createdCustomers": {
            "$ref": "#/components/schemas/Customer"
          },
          "updatedCustomers": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "type": "object"
      },
      "UserAccessKeyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "userId",
              "accessKey",
              "secretAccessKey",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "accessKey": {
                "type": "string"
              },
              "secretAccessKey": {
                "type": "string"
              },
              "writeAccess": {
                "type": "boolean",
                "deprecated": true
              },
              "lastUsageAt": {
                "type": "string",
                "format": "date-time"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-access-key/9f49e92425904356b69cfc58d90f8dcf/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "320cbec6aa19464ba8837be53ce4c54f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "userId",
          "accessKey",
          "secretAccessKey",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user access key."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "accessKey": {
            "type": "string",
            "description": "Access key to admin api."
          },
          "secretAccessKey": {
            "type": "string",
            "description": "Secret key to admin api."
          },
          "writeAccess": {
            "type": "boolean",
            "deprecated": true
          },
          "lastUsageAt": {
            "type": "string",
            "format": "date-time",
            "description": "Parameter that indicates when the access key was last accessed."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "UserConfigJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "userId",
              "key",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "key": {
                "type": "string"
              },
              "value": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-config/da2eee01adf74ece8eae914f2490043a/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6acc2fcfa8394627827917885715d3ca"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "userId",
          "key",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user configuration."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "key": {
            "type": "string",
            "description": "Unique key for every userconfig."
          },
          "value": {
            "type": "object",
            "description": "Value of the user configuration."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "UserRecoveryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "hash",
              "userId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hash": {
                "type": "string"
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-recovery/a0302649a21047248bbddb132c613d0d/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "75f2358ecd9147d8891e0992b3b8b6db"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "hash",
          "userId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user recovery."
          },
          "hash": {
            "type": "string",
            "description": "Password hash for user recovery."
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "WebhookJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "eventName",
              "url",
              "errorCount",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "errorCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "active": {
                "type": "boolean"
              },
              "appId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/webhook/58bb15c1408e4ee09839d66306c35d80/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "2b14f42e6ee74cd2af13823d19353abc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "name",
          "eventName",
          "url",
          "errorCount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of webhook."
          },
          "name": {
            "type": "string",
            "description": "Unique name of webhook."
          },
          "eventName": {
            "type": "string",
            "description": "Technical name of the event."
          },
          "url": {
            "type": "string",
            "description": "URL to be called when the event occurs."
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Parameter that indicates a delivery failure to this url."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the webhook is enabled."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": {
            "$ref": "#/components/schemas/App"
          }
        },
        "type": "object"
      },
      "WebhookEventLogJsonApi": {
        "description": "Added since version: 6.4.1.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "webhookName",
              "eventName",
              "deliveryStatus",
              "url",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "appName": {
                "type": "string"
              },
              "webhookName": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              },
              "deliveryStatus": {
                "type": "string"
              },
              "timestamp": {
                "type": "integer",
                "format": "int64"
              },
              "processingTime": {
                "type": "integer",
                "format": "int64"
              },
              "appVersion": {
                "type": "string"
              },
              "requestContent": {
                "type": "object"
              },
              "responseContent": {
                "type": "object"
              },
              "responseStatusCode": {
                "type": "integer",
                "format": "int64"
              },
              "responseReasonPhrase": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "required": [
          "webhookName",
          "eventName",
          "deliveryStatus",
          "url",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of webhook event log."
          },
          "appName": {
            "type": "string",
            "description": "Unique name of app."
          },
          "webhookName": {
            "type": "string",
            "description": "Unique name of webhook."
          },
          "eventName": {
            "type": "string",
            "description": "Unique name of event."
          },
          "deliveryStatus": {
            "type": "string",
            "description": "Parameter that records \"success or failed\" status of the event."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Time at which the event occurred."
          },
          "processingTime": {
            "type": "integer",
            "format": "int64",
            "description": "Time the event took to process."
          },
          "appVersion": {
            "type": "string",
            "description": "Version of teh app."
          },
          "requestContent": {
            "type": "object",
            "description": "Represents the content sent as part of the Request."
          },
          "responseContent": {
            "type": "object",
            "description": "Represents the content sent as part of the Response."
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int64",
            "description": "HTTP status codes that are typically generated to provide informational (1xx), successful (2xx), redirection (3xx), client error (4xx), or server error (5xx) responses."
          },
          "responseReasonPhrase": {
            "type": "string",
            "description": "Parameter that stores the reason phrase or message associated with the response received from a webhook event."
          },
          "url": {
            "type": "string",
            "description": "A URL for the webhook event log."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "infoConfigResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The Shopware version."
          },
          "versionRevision": {
            "type": "string",
            "description": "The Shopware version revision."
          },
          "adminWorker": {
            "type": "object",
            "description": "Information about the admin worker.",
            "properties": {
              "enableAdminWorker": {
                "type": "boolean",
                "description": "State of the admin worker."
              },
              "transports": {
                "type": "array",
                "description": "Configured transports.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "bundles": {
            "type": "object",
            "description": "Asset files of active extensions",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "css": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Url to the css file."
                  }
                },
                "js": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Url to the js file."
                  }
                }
              }
            }
          },
          "settings": {
            "type": "object",
            "properties": {
              "enableUrlFeature": {
                "type": "boolean",
                "description": "State of the `urlFeature` setting."
              }
            }
          }
        }
      },
      "businessEventsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the event"
            },
            "class": {
              "type": "string",
              "description": "Class name of the event"
            },
            "data": {
              "type": "object",
              "description": "Available data of event"
            },
            "aware": {
              "type": "array",
              "description": "Flow builder will base on awareness to show actions",
              "items": {
                "type": "string"
              }
            },
            "extensions": {
              "type": "array",
              "description": "Extensions data of event",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "properties": {
          "name": {
            "description": "Unique name of the businessEventsResponse."
          },
          "class": {
            "description": "Class name of business event."
          },
          "data": {
            "description": "Internal field."
          },
          "aware": {
            "description": "Parameter that indicates the areas in which the business event is supported."
          },
          "extensions": {
            "description": "Internal field."
          }
        }
      },
      "flowBulderActionsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the flow action"
            },
            "requirements": {
              "type": "array",
              "description": "When requirement fit with aware from `events.json` actions will be shown",
              "items": {
                "type": "string"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Extensions data of event"
            }
          }
        },
        "properties": {
          "name": {
            "description": "Unique name of the flowBulderActionsResponse."
          },
          "extensions": {
            "description": "Internal field."
          }
        }
      },
      "Criteria": {
        "description": "Criteria to query entities.",
        "properties": {
          "filter": {
            "properties": {
              "type": {
                "description": "To filter the results and aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter the results and aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter the results and aggregations by value."
              }
            }
          },
          "sort": {
            "properties": {
              "field": {
                "description": "Sort the search results by field like an property identifier."
              },
              "order": {
                "description": "Sort the search results of orders by ascending or descending."
              },
              "naturalSorting": {
                "description": "Sorting for special cases such as German letters with umlauts and similar characters etc."
              }
            }
          },
          "post-filter": {
            "properties": {
              "type": {
                "description": "To filter only the results but not the aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter only the results but not the aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter only the results but not the aggregations by value."
              }
            }
          }
        }
      },
      "Cart": {
        "properties": {
          "id": {
            "description": "Unique identity of cart."
          },
          "errors": {
            "properties": {
              "key": {
                "description": "Unique key for every message."
              },
              "level": {
                "description": "Types of level - Notice, warning and error.  "
              },
              "message": {
                "description": "A persistent error passed from the shopping cart calculation processes to the user end."
              }
            }
          },
          "transactions": {
            "properties": {
              "paymentMethodId": {
                "description": "Unique identity of payment method."
              }
            }
          },
          "modified": {
            "description": "It signifies any changes to cart."
          }
        }
      },
      "SalesChannelContext": {
        "properties": {
          "currentCustomerGroup": {
            "properties": {
              "name": {
                "description": "Name of customer group to which the customer belongs within the specific sales channel they are currently interacting with."
              },
              "displayGross": {
                "description": "When `true`, product's gross price is displayed for that customer group who belongs to the specific sales channel they are currently interacting with."
              }
            }
          },
          "currency": {
            "properties": {
              "isoCode": {
                "description": "Standard international three digit code to represent currency in a given sales channel. For example, USD."
              },
              "factor": {
                "description": "Currency exchange rate in a specific sales channel the customer is currently interacting with."
              },
              "symbol": {
                "description": "A currency symbol is a graphical representation used as shorthand for a currency's name, for example US Dollar - $ in a given sales channel."
              },
              "shortName": {
                "description": "Acronym for international currencies, for example, USD in a given sales channel."
              },
              "name": {
                "description": "Full name of the currency in a given sales channel. For example, US-Dollar."
              },
              "position": {
                "description": "The order of the tabs for multiple currencies defined in a given sales channel."
              },
              "decimalPrecision": {
                "description": "It defines the round off value for currency to the nearest decimal point in a given sales channel. If set to 2, it rounds off to two significant decimal points."
              },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria."
              }
            }
          },
          "salesChannel": {
            "properties": {
              "typeId": {
                "description": "Unique identity of a sales channel's type within a specific sales channel."
              },
              "languageId": {
                "description": "Unique identity of a sales channel's language within a specific sales channel."
              },
              "currencyId": {
                "description": "Unique identity of a sales channel's currency within a specific sales channel."
              },
              "paymentMethodId": {
                "description": "Unique identity of a sales channel's payment method within a specific sales channel."
              },
              "shippingMethodId": {
                "description": "Unique identity of a sales channel's shipping method within a specific sales channel."
              },
              "countryId": {
                "description": "Unique identity of a sales channel's country within a specific sales channel."
              },
              "navigationCategoryId": {
                "description": "Unique identity of a sales channel's navigation category within a specific sales channel."
              },
              "navigationCategoryDepth": {
                "description": "It determines the number of levels of subcategories in the storefront category menu within a specific sales channel."
              },
              "footerCategoryId": {
                "description": "Unique identity of a sales channel's footer category within a specific sales channel."
              },
              "serviceCategoryId": {
                "description": "Unique identity of a sales channel's service category within a specific sales channel."
              },
              "name": {
                "description": "Name of the sales channel."
              },
              "shortName": {
                "description": "A short name for sales channel."
              },
              "accessKey": {
                "description": "Access key to store api."
              },
              "active": {
                "description": "When `true`, the sales channel is enabled."
              },
              "maintenance": {
                "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
              },
              "maintenanceIpWhitelist": {
                "description": "List of IP addresseS used when the maintenance mode is active."
              },
              "mailHeaderFooterId": {
                "description": "Unique identity of a sales channel's mail header and footer within a specific sales channel."
              },
              "customerGroupId": {
                "description": "Unique identity of a sales channel's customer group within a specific sales channel."
              },
              "hreflangActive": {
                "description": "When `true`, the sales channel pages are available in different languages within a specific sales channel."
              },
              "hreflangDefaultDomainId": {
                "description": "Unique identity of a sales channel's hreflangDefaultDomain within a specific sales channel."
              },
              "analyticsId": {
                "description": "Unique identity of a sales channel's analytics within a specific sales channel."
              }
            }
          },
          "taxRules": {
            "properties": {
              "taxRate": {
                "description": "Rate of tax within a specific sales channel."
              },
              "name": {
                "description": "Name defined for a Tax within a specific sales channel."
              }
            }
          },
          "customer": {
            "properties": {
              "groupId": {
                "description": "Unique identity of a customer's group within a specific sales channel."
              },
              "defaultPaymentMethodId": {
                "description": "Unique identity of a customer's default payment method within a specific sales channel."
              },
              "salesChannelId": {
                "description": "Unique identity of sales channel the customer is currently interacting with."
              },
              "languageId": {
                "description": "Unique identity of language within a specific sales channel the customer is interacting."
              },
              "lastPaymentMethodId": {
                "description": "Unique identity of customer's last payment method within a specific sales channel."
              },
              "defaultBillingAddressId": {
                "description": "Unique identity of customer's default billing address within a specific sales channel."
              },
              "defaultShippingAddressId": {
                "description": "Unique identity of customer's default shipping address within a specific sales channel."
              },
              "customerNumber": {
                "description": "Name of the customer within a specific sales channel the customer is interacting."
              },
              "salutationId": {
                "description": "Unique identity of customer's default shipping address within a specific sales channel."
              },
              "firstName": {
                "description": "First name of the customer within a specific sales channel."
              },
              "lastName": {
                "description": "Last name of the customer within a specific sales channel."
              },
              "company": {
                "description": "Company name of the customer within a specific sales channel."
              },
              "password": {
                "description": "Password of the customer within a specific sales channel."
              },
              "email": {
                "description": "Email of the customer within a specific sales channel."
              },
              "title": {
                "description": "Customer's title or honorifics like Mr, Mrs, etc within a specific sales channel."
              },
              "affiliateCode": {
                "description": "An affiliate code is an identification option with which website operators can mark outgoing links within a specific sales channel."
              },
              "campaignCode": {
                "description": "A unique identifier for a campaign within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the status of the customer is set active within a specific sales channel."
              },
              "doubleOptInRegistration": {
                "description": "When `true`, user subscriptions to an email marketing list is allowed within a specific sales channel."
              },
              "doubleOptInEmailSentDate": {
                "description": "Date and time when the double opt-in email was sent within a specific sales channel."
              },
              "doubleOptInConfirmDate": {
                "description": "Date and time when the double opt-in email was confirmed within a specific sales channel."
              },
              "hash": {
                "description": "Password hash for account recovery within a specific sales channel."
              },
              "guest": {
                "description": "Boolean value is `true` for a guest account within a specific sales channel."
              },
              "firstLogin": {
                "description": "Captures date and time of customer's first login within a specific sales channel."
              },
              "lastLogin": {
                "description": "Captures date and time of customer's last login within a specific sales channel."
              },
              "newsletter": {
                "description": "When `true`, then the customer gets subscribe to the newsletter"
              },
              "birthday": {
                "description": "Captures customer's birthday details within a specific sales channel."
              },
              "lastOrderDate": {
                "description": "Captures customer's last order date within a specific sales channel."
              },
              "orderCount": {
                "description": "Captures the number of orders placed by a customer within a specific sales channel."
              },
              "legacyEncoder": {
                "description": "encapsulates shop credentials when needed to migrate shop system from old instance to new instance"
              },
              "legacyPassword": {
                "description": "Hashed password of the old shop system"
              },
              "autoIncrement": {
                "description": "Internal field. "
              },
              "remoteAddress": {
                "description": "Anonymous IP address of the customer for last session."
              }
            }
          },
          "paymentMethod": {
            "properties": {
              "pluginId": {
                "description": "Unique identity of payment plugin within a specific sales channel."
              },
              "handlerIdentifier": {
                "description": "Internal field that contains system identifier details for payment methods like Paypal."
              },
              "name": {
                "description": "Name of the payment method within a specific sales channel."
              },
              "description": {
                "description": "A short description about the payment method within a specific sales channel."
              },
              "position": {
                "description": "The order of the tabs of your defined payment methods in the storefront by entering numerical values like 1,2,3, etc within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the payment method is available for usage within a specific sales channel."
              },
              "availabilityRuleId": {
                "description": "Unique identity of the rule for the payment method."
              },
              "mediaId": {
                "description": "Unique identity of media used in payment method within a specific sales channel."
              },
              "formattedHandlerIdentifier": {
                "description": "Internal field that contains system identifier details for payment methods like Paypal."
              }
            }
          },
          "shippingMethod": {
            "properties": {
              "name": {
                "description": "Name of the shipping method within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the shipping method is available for usage within a specific sales channel."
              },
              "description": {
                "description": "A short description about the shipping method within a specific sales channel."
              },
              "trackingUrl": {
                "description": "URL that allows to track packages for a specific sales channel."
              },
              "deliveryTimeId": {
                "description": "Unique identity of deliveryTime within a specific sales channel."
              },
              "availabilityRuleId": {
                "description": "Unique identity of the rule for the payment method."
              },
              "mediaId": {
                "description": "Unique identity of media used in shipping method within a specific sales channel."
              }
            }
          },
          "context": {
            "properties": {
              "versionId": {
                "description": "Unique identity of context's version in a specific sales channel."
              },
              "currencyId": {
                "description": "Unique identity of currency context in a specific sales channel."
              },
              "currencyFactor": {
                "description": "Unique identity of currency factor context in a specific sales channel."
              },
              "currencyPrecision": {
                "description": "It defines the round off value of currency to the nearest decimal point. If set to 2, it rounds off to two significant decimal points."
              },
              "scope": {
                "description": "Scope defines if its related to system or user context."
              },
              "source": {
                "description": "When context is related to user in the source, then there is userId."
              },
              "taxState": {
                "description": "Tax state can either be `gross` or `net`."
              },
              "useCache": {
                "description": "When boolean value is `true`, caching is used."
              }
            }
          }
        }
      },
      "AccountNewsletterRecipientResult": {
        "properties": {
          "status": {
            "description": "Status indicates if the customer has subscribed to the news letter or not."
          }
        }
      },
      "ProductDetailResponse": {
        "properties": {
          "id": {
            "description": "Unique identity of product detail response."
          },
          "available": {
            "description": "When boolean value is true, the product is available for purchase."
          },
          "isCloseout": {
            "description": "Boolean value to check if the product is still buyable when stock value is 0."
          },
          "displayGroup": {
            "description": "Internal field."
          },
          "manufacturerNumber": {
            "description": "Unique number of the product manufacturer."
          },
          "stock": {
            "description": "Quantity of product available."
          },
          "sortedProperties": {
            "description": "Properties of the product that are sorted"
          }
        }
      },
      "ProductListingCriteria": {
        "properties": {
          "filter": {
            "properties": {
              "type": {
                "description": "To filter the results and aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter the results and aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter the results and aggregations by value."
              }
            }
          },
          "sort": {
            "properties": {
              "field": {
                "description": "Sort the search results by field like an property identifier."
              },
              "order": {
                "description": "Sort the search results of orders by ascending or descending."
              },
              "naturalSorting": {
                "description": "Sorting for special cases such as German letters with umlauts and similar characters etc."
              }
            }
          },
          "post-filter": {
            "properties": {
              "type": {
                "description": "To filter only the results but not the aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter only the results but not the aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter only the results but not the aggregations by value."
              }
            }
          }
        }
      },
      "CartItems": {
        "properties": {
          "items": {
            "properties": {
              "id": {
                "description": "Unique identity of cart item."
              },
              "modified": {
                "description": "When boolean value is `true`, the cart is said to be modified."
              }
            }
          }
        }
      },
      "FindProductVariantRouteResponse": {
        "properties": {
          "foundCombination": {
            "properties": {
              "variantId": {
                "description": "Unique identity of a variant."
              },
              "options": {
                "description": "Available product variant options. For example, for variant `Size`, option would be `XS`, `S`, `M`, `L`, `XL`."
              }
            }
          }
        }
      },
      "OrderProductWarehouse": {
        "properties": {
          "id": {
            "description": "Unique identity of order's product warehouse."
          },
          "versionId": {
            "description": "Unique identity of order product warehouse's version."
          },
          "orderId": {
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "description": "Unique identity of order's version."
          },
          "productId": {
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "description": "Unique identity of product's version."
          },
          "warehouseId": {
            "description": "Unique identity of warehouse."
          },
          "quantity": {
            "description": "Number of items of each product."
          }
        }
      },
      "OrderReturn": {
        "properties": {
          "id": {
            "description": "Unique identity of order return."
          },
          "versionId": {
            "description": "Unique identity of order return's version."
          },
          "orderId": {
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "description": "Unique identity of order return version."
          },
          "price": {
            "properties": {
              "netPrice": {
                "description": "Net price of the product."
              },
              "totalPrice": {
                "description": "Gross price of the product."
              },
              "calculatedTaxes": {
                "description": "Contains calculated tax on order delivery price."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "positionPrice": {
                "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
              },
              "rawTotal": {
                "description": "The total value before rounding off."
              },
              "taxStatus": {
                "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
              }
            }
          },
          "shippingCosts": {
            "properties": {
              "unitPrice": {
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          },
          "stateId": {
            "description": "Unique identity of state."
          },
          "returnNumber": {
            "description": "Reference number for returning order."
          },
          "requestedAt": {
            "description": "Date and time when the order return was requested."
          },
          "amountTotal": {
            "description": "Gross price of the order."
          },
          "amountNet": {
            "description": "Net price of the order."
          },
          "internalComment": {
            "description": "Comments that are visible to only shop owner."
          },
          "createdById": {
            "description": "Unique identity of createdBy."
          },
          "updatedById": {
            "description": "Unique identity of updatedBy."
          }
        }
      },
      "OrderReturnLineItem": {
        "properties": {
          "id": {
            "description": "Unique identity of order return line item."
          },
          "versionId": {
            "description": "Unique identity of order return line item's version."
          },
          "orderReturnId": {
            "description": "Unique identity of order return."
          },
          "orderReturnVersionId": {
            "description": "Unique identity of order return version."
          },
          "orderLineItemId": {
            "description": "Unique identity of order line item."
          },
          "orderLineItemVersionId": {
            "description": "Unique identity of order line items's version."
          },
          "reasonId": {
            "description": "Unique identity of reason for return."
          },
          "quantity": {
            "description": "Number of line items returned."
          },
          "shippingCosts": {
            "properties": {
              "unitPrice": {
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          },
          "refundAmount": {
            "description": "Amount to be refunded."
          },
          "restockQuantity": {
            "description": "Update of stock quantity after the return of certain line items are initiated."
          },
          "internalComment": {
            "description": "Comments that are visible to only shop owner."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "stateId": {
            "description": "Unique identity of state."
          }
        }
      },
      "OrderReturnLineItemReturn": {
        "properties": {
          "shippingCosts": {
            "properties": {
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  }
                }
              }
            }
          }
        }
      },
      "OrderReturnLineItemReason": {
        "properties": {
          "reason": {
            "properties": {
              "id": {
                "description": "Unique identity for reason of return."
              },
              "reasonKey": {
                "description": "Unique key associated with reason for the order return. "
              },
              "content": {
                "description": "Description of the reason of return."
              },
              "translated": {
                "description": "Contains the translations of all translated fields."
              }
            }
          }
        }
      },
      "OrderWarehouseGroup": {
        "properties": {
          "id": {
            "description": "Unique identity of order warehouse group."
          },
          "versionId": {
            "description": "Unique identity of order warehouse group's version."
          },
          "orderId": {
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "description": "Unique identity of order's version'."
          },
          "warehouseGroupId": {
            "description": "Unique identity of warehouse group."
          }
        }
      },
      "ProductReviewSummary": {
        "properties": {
          "id": {
            "description": "Unique identity of products's review summary."
          },
          "productId": {
            "description": "Unique identity of products."
          },
          "productVersionId": {
            "description": "Unique identity of product's version."
          },
          "salesChannelId": {
            "description": "Unique identity of sales channel."
          },
          "summary": {
            "description": "Unique identity of products's review summary."
          },
          "visible": {
            "description": "When boolean value is `true`, the review is displayed to the customer."
          },
          "translated": {
            "description": "Contains the translations of all translated fields."
          }
        }
      },
      "ProductWarehouse": {
        "properties": {
          "id": {
            "description": "Unique identity of product warehouse."
          },
          "productId": {
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "description": "Unique identity of product's version."
          },
          "warehouseId": {
            "description": "Unique identity of warehouse."
          },
          "stock": {
            "description": "Quantity of product available."
          }
        }
      },
      "ProductWarehouseGroup": {
        "properties": {
          "id": {
            "description": "Unique identity of warehouse of product."
          },
          "productId": {
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "description": "Unique identity of product's version."
          },
          "warehouseGroupId": {
            "description": "Unique identity of warehouse group."
          }
        }
      },
      "Subscription": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription."
          },
          "convertedOrder": {
            "description": "An array loaded with persistent information related to cart data."
          },
          "subscriptionNumber": {
            "description": "Unique number associated with subscription."
          },
          "nextSchedule": {
            "description": "Date and time of next scheduled subscription for example: `yyyy-mm-dd hh:mm:ss` - `2023-08-15 15:25:32`."
          },
          "salesChannelId": {
            "description": "Unique identity of sales channel."
          },
          "subscriptionPlanId": {
            "description": "Unique identity of subscription plan."
          },
          "subscriptionPlanName": {
            "description": "Unique name for subscription plan."
          },
          "subscriptionIntervalId": {
            "description": "Unique identity for subscription interval."
          },
          "subscriptionIntervalName": {
            "description": "Unique name for subscription interval."
          },
          "dateInterval": {
            "description": "Relative interval data. For example, `every 3 days`, `every 2 months`, etc."
          },
          "cronInterval": {
            "description": "Absolute interval data. For example, `only on January`, `only on Mondays`, etc."
          },
          "initialExecutionCount": {
            "description": "The initialExecutionCount is the number of contract terms the merchants subscribes for; for example : 12 for 12 months."
          },
          "remainingExecutionCount": {
            "description": "The remainingExecutionCount is the count of executions, the subscriptions has to run through before the customer can cancel it. For example : 3 for 3 months remaining."
          },
          "billingAddressId": {
            "description": "Unique identity of billing address."
          },
          "shippingAddressId": {
            "description": "Unique identity of shipping address."
          },
          "shippingMethodId": {
            "description": "Unique identity of shipping method."
          },
          "paymentMethodId": {
            "description": "Unique identity of payment method."
          },
          "currencyId": {
            "description": "Unique identity of currency."
          },
          "languageId": {
            "description": "Unique identity of language."
          },
          "stateId": {
            "description": "Unique identity of state."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "description": "The cash rounding applied on net prices."
              }
            }
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "description": "The cash rounding applied on net prices. "
              }
            }
          }
        }
      },
      "SubscriptionAddress": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription address."
          },
          "countryId": {
            "description": "Unique identity of country."
          },
          "subscriptionId": {
            "description": "Unique identity of subscription."
          },
          "countryStateId": {
            "description": "Unique identity of state of the country."
          },
          "salutationId": {
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "description": "First name of the subscribed customer."
          },
          "lastName": {
            "description": "Last name of the subscribed customer."
          },
          "street": {
            "description": "Street address"
          },
          "zipcode": {
            "description": "Zip code of the country."
          },
          "city": {
            "description": "Name of the city."
          },
          "company": {
            "description": "Name of the company."
          },
          "department": {
            "description": "Name of the department."
          },
          "title": {
            "description": "Title name given to customer's order address."
          },
          "vatId": {
            "description": "Unique identity of VAT."
          },
          "phoneNumber": {
            "description": "Phone number of the customer."
          },
          "additionalAddressLine1": {
            "description": "Additional address input if necessary."
          },
          "additionalAddressLine2": {
            "description": "Additional address input if necessary."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "email": {
            "description": "Last name of the subscribed customer. "
          }
        }
      },
      "SubscriptionCustomer": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription customer."
          },
          "subscriptionId": {
            "description": "Unique identity of subscription."
          },
          "customerId": {
            "description": "Unique identity of the customer."
          },
          "salutationId": {
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "description": "Email address of the subscribed customer."
          },
          "lastName": {
            "description": "Last name of the subscribed customer. "
          },
          "company": {
            "description": "Name of the customer's company."
          },
          "title": {
            "description": "Title name given to customer's order address."
          },
          "customerNumber": {
            "description": "Unique number for subscribed customer."
          },
          "vatId": {
            "description": "Unique identity of VAT."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "remoteAddress": {
            "description": "Anonymous IP address of the customer for last session."
          }
        }
      },
      "SubscriptionInterval": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription interval."
          },
          "name": {
            "description": "Name of the subscription interval."
          },
          "active": {
            "description": "When `true`, the defined subscription interval is available for selection in storefront."
          },
          "dateInterval": {
            "description": "Relative interval data. For example, `every 3 days`, `every 2 months`, etc."
          },
          "cronInterval": {
            "description": "Absolute interval data. For example, `only on January`, `only on Mondays`, etc."
          },
          "availabilityRuleId": {
            "description": "Unique identity of rule."
          },
          "translated": {
            "description": "Contains the translations of all translated fields."
          }
        }
      },
      "SubscriptionPlan": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription plan."
          },
          "name": {
            "description": "Name of the subscription plan."
          },
          "description": {
            "description": "A short description about the subscription plan."
          },
          "active": {
            "description": "When `true`, the subscription plan is available for selection in storefront."
          },
          "minimumExecutionCount": {
            "description": "The minimumExecutionCount is the minimum count of executions i.e, the minimum subscription limit set for the subscribers. For example, 2 months."
          },
          "activeStorefrontLabel": {
            "description": "When boolean value id `true`, the label overrides the plan name."
          },
          "availabilityRuleId": {
            "description": "Unique identity of rule."
          },
          "label": {
            "description": "Label that can overwrite the active plan name. "
          },
          "translated": {
            "description": "Contains the translations of all translated fields."
          }
        }
      },
      "SubscriptionPlanIntervalMapping": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription plan interval mapping."
          },
          "subscriptionIntervalId": {
            "description": "Unique identity of subscription interval."
          },
          "subscriptionPlanId": {
            "description": "Unique identity of subscription plan."
          }
        }
      },
      "SubscriptionPlanProductMapping": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription plan for product mapping."
          },
          "productId": {
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "description": "Unique identity of product's version."
          },
          "subscriptionPlanId": {
            "description": "Unique identity of subscription plan."
          }
        }
      },
      "SubscriptionTagMapping": {
        "properties": {
          "id": {
            "description": "Unique identity of subscription tag."
          },
          "subscriptionId": {
            "description": "Unique identity of subscription."
          },
          "tagId": {
            "description": "Unique identity of subscription tag."
          }
        }
      },
      "SwagDelayAction": {
        "properties": {
          "id": {
            "description": "Unique identity of swag delay action for flow builder."
          },
          "eventName": {
            "description": "Unique name of the event."
          },
          "flowId": {
            "description": "Unique identity of flow."
          },
          "orderId": {
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "description": "Unique identity of order's version."
          },
          "customerId": {
            "description": "Unique identity of customer."
          },
          "executionTime": {
            "description": "Parameters that determine when the flow action is to be executed."
          },
          "expired": {
            "description": "Parameter that determines when the flow action ceases to run."
          },
          "delaySequenceId": {
            "description": "Unique identity of delaySequence."
          },
          "stored": {
            "description": "Internal field."
          }
        }
      },
      "SwagSequenceWebhookEventLog": {
        "properties": {
          "id": {
            "description": "Unique identity of Swag Sequence Webhook Event Log."
          },
          "sequenceId": {
            "description": "Unique identity of sequence."
          },
          "webhookEventLogId": {
            "description": "Unique identity of Webhook Event Log."
          }
        }
      },
      "TaxProvider": {
        "properties": {
          "id": {
            "description": "Unique identity of tax provider."
          },
          "identifier": {
            "description": "Unique identity of tax provider."
          },
          "active": {
            "description": "When boolean value is `true`, the tax providers are available for selection in the storefront."
          },
          "name": {
            "description": "Name of the tax provider."
          },
          "priority": {
            "description": "A numerical value to prioritize one of the tax providers from the list."
          },
          "processUrl": {
            "description": "External URL makes request to get tax info."
          },
          "availabilityRuleId": {
            "description": "Unique identity of availability Rule."
          },
          "appId": {
            "description": "Unique identity of app."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "translated": {
            "description": "Contains the translations of all translated fields."
          }
        }
      },
      "Warehouse": {
        "properties": {
          "id": {
            "description": "Unique identity of warehouse."
          },
          "name": {
            "description": "Unique name of warehouse."
          },
          "description": {
            "description": "A short description of warehouse."
          }
        }
      },
      "WarehouseGroup": {
        "properties": {
          "id": {
            "description": "Unique identity of warehouse group."
          },
          "name": {
            "description": "Unique name of warehouse group."
          },
          "description": {
            "description": "A short description of warehouse group."
          },
          "priority": {
            "description": "A numerical value to prioritize one of the warehouse groups from the list."
          },
          "ruleId": {
            "description": "Unique identity of rule."
          }
        }
      },
      "WarehouseGroupWarehouse": {
        "properties": {
          "id": {
            "description": "Unique identity of WarehouseGroupWarehouse."
          },
          "warehouseId": {
            "description": "Unique identity of Warehouse."
          },
          "warehouseGroupId": {
            "description": "Unique identity of WarehouseGroup."
          },
          "priority": {
            "description": "A numerical value to prioritize one the WarehouseGroupWarehouse from the list."
          }
        }
      },
      "LineItem": {
        "properties": {
          "id": {
            "description": "Unique identity of line item."
          },
          "referencedId": {
            "description": "Unique identity of type of entity."
          },
          "label": {
            "description": "It is a typical product name given to the line item."
          },
          "quantity": {
            "description": "Number of items of product."
          },
          "type": {
            "description": "Type refers to the entity type of an item whether it is product or promotion for instance."
          },
          "good": {
            "description": "When set to true, it indicates the line item is physical else it is virtual."
          },
          "description": {
            "description": "Description of line items in an order."
          },
          "removable": {
            "description": "Allows the line item to be removable from the cart when set to true."
          },
          "stackable": {
            "description": "Allows to change the quantity of the line item when set to true."
          },
          "modified": {
            "description": "When boolean value is `true`, line items are said to be modified."
          }
        }
      },
      "CrossSellingElementCollection": {
        "properties": {
          "total": {
            "description": "Number of cross selling elements found."
          }
        }
      },
      "NavigationRouteResponse": {
        "properties": {
          "id": {
            "description": "Unique identity of navigation route response."
          }
        }
      },
      "WishlistLoadRouteResponse": {
        "properties": {
          "wishlist": {
            "properties": {
              "customerId": {
                "description": "Unique identity of the customer."
              },
              "salesChannelId": {
                "description": "Unique identity of the sales channel."
              }
            }
          }
        }
      },
      "Sitemap": {
        "properties": {
          "filename": {
            "description": "Name of the file which holds a list of all URL's."
          }
        }
      },
      "AdvancedSearchConfig": {
        "properties": {
          "id": {
            "description": "Unique identity of advanced search config."
          },
          "salesChannelId": {
            "description": "Unique identity of sales channel."
          },
          "esEnabled": {
            "description": "When boolean value is `true`, advanced search is enabled."
          },
          "andLogic": {
            "description": "Advanced search configuration with add logic."
          },
          "minSearchLength": {
            "description": "Minimum number of characters used for advanced search."
          },
          "hitCount": {
            "description": "Parameter that indicates the number of times the product is searched.",
            "properties": {
              "product": {
                "properties": {
                  "maxSuggestCount": {
                    "description": "Maximum number of suggested product hits or recommendations that will be provided in response to a search."
                  },
                  "maxSearchCount": {
                    "description": "The maximum count value that you can specify for the product search."
                  }
                }
              },
              "product_manufacturer": {
                "properties": {
                  "maxSuggestCount": {
                    "description": "Maximum number of suggested hits or recommendations that will be provided in response to a search."
                  },
                  "maxSearchCount": {
                    "description": "The maximum count value that you can specify for the product_manufacturer search."
                  }
                }
              },
              "category": {
                "properties": {
                  "maxSuggestCount": {
                    "description": "Maximum number of suggested hits or recommendations that will be provided in response to a search."
                  },
                  "maxSearchCount": {
                    "description": "The maximum count value that you can specify for the category search."
                  }
                }
              }
            }
          },
          "fields": {
            "properties": {
              "id": {
                "description": "Unique identity of fields."
              },
              "configId": {
                "description": "Unique identity of config."
              },
              "customFieldId": {
                "description": "Unique identity of custom field."
              },
              "entity": {
                "description": "Indicates in which particular entity."
              },
              "field": {
                "description": "Information of the configured advanced search field."
              },
              "tokenize": {
                "description": "To decide whether the text within the field should undergo tokenization, which involves splitting it into smaller chunks."
              },
              "searchable": {
                "description": "When a field is searchable, it means that it can be used as a search criterion when conducting advanced searches. "
              },
              "ranking": {
                "description": "Search ranking."
              }
            }
          }
        }
      },
      "AdvancedSearchConfigField": {
        "properties": {
          "id": {
            "description": "Unique identity of advanced search config field."
          },
          "configId": {
            "description": "Unique identity of configuration."
          },
          "customFieldId": {
            "description": "Unique identity of custom field."
          },
          "entity": {
            "description": "Indicates in which particular entity."
          },
          "field": {
            "description": "Information of the configured advanced search field."
          },
          "tokenize": {
            "description": "To decide whether the text within the field should undergo tokenization, which involves splitting it into smaller chunks."
          },
          "searchable": {
            "description": "When a field is searchable, it means that it can be used as a search criterion when conducting advanced searches. "
          },
          "ranking": {
            "description": "Search ranking."
          },
          "config": {
            "properties": {
              "id": {
                "description": "Unique identity of advanced search field."
              },
              "salesChannelId": {
                "description": "Unique identity of sales channel."
              },
              "esEnabled": {
                "description": "When boolean value is `true`, advanced search is enabled."
              },
              "andLogic": {
                "description": "Advanced search field configuration with add logic."
              },
              "minSearchLength": {
                "description": "Minimum number of characters used for advanced search field."
              },
              "hitCount": {
                "description": "Parameter that indicates the number of times the product is searched.",
                "properties": {
                  "product": {
                    "properties": {
                      "maxSuggestCount": {
                        "description": "Maximum number of suggested hits or recommendations that will be provided in response to a search."
                      },
                      "maxSearchCount": {
                        "description": "The maximum count value that you can specify for the product search."
                      }
                    }
                  },
                  "product_manufacturer": {
                    "properties": {
                      "maxSuggestCount": {
                        "description": "Maximum number of suggested hits or recommendations that will be provided in response to a search."
                      },
                      "maxSearchCount": {
                        "description": "The maximum count value that you can specify for the product_manufacturer search."
                      }
                    }
                  },
                  "category": {
                    "properties": {
                      "maxSuggestCount": {
                        "description": "Maximum number of suggested hits or recommendations that will be provided in response to a search."
                      },
                      "maxSearchCount": {
                        "description": "The maximum count value that you can specify for the category search."
                      }
                    }
                  }
                }
              },
              "fields": {
                "properties": {
                  "id": {
                    "description": "Unique identity of fields."
                  },
                  "configId": {
                    "description": "Unique identity of config."
                  },
                  "customFieldId": {
                    "description": "Unique identity of custom field."
                  },
                  "entity": {
                    "description": "Indicates in which particular entity."
                  },
                  "field": {
                    "description": "Information of the configured advanced search field."
                  },
                  "tokenize": {
                    "description": "To decide whether the text within the field should undergo tokenization, which involves splitting it into smaller chunks."
                  },
                  "searchable": {
                    "description": "When a field is searchable, it means that it can be used as a search criterion when conducting advanced searches. "
                  },
                  "ranking": {
                    "description": "Search ranking."
                  }
                }
              }
            }
          }
        }
      },
      "AppFlowEvent": {
        "properties": {
          "id": {
            "description": "Unique identity of app flow event."
          },
          "appId": {
            "description": "Unique identity of app."
          },
          "name": {
            "description": "Unique name of the AppFlowEvent."
          },
          "aware": {
            "description": "Parameter that indicates the areas in which the app flow event is supported."
          },
          "customFields": {
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          }
        }
      },
      "CustomPrice": {
        "properties": {
          "id": {
            "description": "Unique identity of the custom price."
          },
          "productId": {
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "description": "Unique identity of the product's version."
          },
          "customerId": {
            "description": "Unique identity of the customer."
          },
          "customerGroupId": {
            "description": "Unique identity of the customer's group."
          },
          "price": {
            "description": "Detailed information of price."
          }
        }
      },
      "CustomerSpecificFeatures": {
        "properties": {
          "id": {
            "description": "Unique identity of the customer specific features."
          },
          "customerId": {
            "description": "Unique identity of the customer."
          },
          "features": {
            "description": "The actual product features."
          }
        }
      },
      "MediaAiTag": {
        "properties": {
          "id": {
            "description": "Unique identity of the AI media tag."
          },
          "mediaId": {
            "description": "Unique identity of the media."
          },
          "needsAnalysis": {
            "description": "When boolean value is `true`, indicates whether the associated media content requires further analysis by AI."
          },
          "tag": {
            "description": "Tag that indicates if the media is made by AI or not."
          },
          "translated": {
            "description": "Contains the translations of all translated fields."
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          }
        }
      },
      "204": {
        "description": "No Content"
      }
    },
    "securitySchemes": {
      "oAuth": {
        "type": "oauth2",
        "description": "Authentication API",
        "flows": {
          "password": {
            "tokenUrl": "http://localhost:8000/api/oauth/token",
            "scopes": {
              "write": "Full write access"
            }
          },
          "clientCredentials": {
            "tokenUrl": "http://localhost:8000/api/oauth/token",
            "scopes": {
              "write": "Full write access"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oAuth": [
        "write"
      ]
    }
  ],
  "tags": [
    {
      "name": "Acl Role",
      "description": "The endpoint for operations on Acl Role"
    },
    {
      "name": "App",
      "description": "The endpoint for operations on App"
    },
    {
      "name": "App Action Button",
      "description": "The endpoint for operations on App Action Button"
    },
    {
      "name": "App Administration Snippet",
      "description": "The endpoint for operations on App Administration Snippet"
    },
    {
      "name": "App Cms Block",
      "description": "The endpoint for operations on App Cms Block"
    },
    {
      "name": "App Flow Action",
      "description": "The endpoint for operations on App Flow Action"
    },
    {
      "name": "App Payment Method",
      "description": "The endpoint for operations on App Payment Method"
    },
    {
      "name": "App Script Condition",
      "description": "The endpoint for operations on App Script Condition"
    },
    {
      "name": "App Template",
      "description": "The endpoint for operations on App Template"
    },
    {
      "name": "Category",
      "description": "The endpoint for operations on Category"
    },
    {
      "name": "Cms Block",
      "description": "The endpoint for operations on Cms Block"
    },
    {
      "name": "Cms Page",
      "description": "The endpoint for operations on Cms Page"
    },
    {
      "name": "Cms Section",
      "description": "The endpoint for operations on Cms Section"
    },
    {
      "name": "Cms Slot",
      "description": "The endpoint for operations on Cms Slot"
    },
    {
      "name": "Country",
      "description": "The endpoint for operations on Country"
    },
    {
      "name": "Country State",
      "description": "The endpoint for operations on Country State"
    },
    {
      "name": "Currency",
      "description": "The endpoint for operations on Currency"
    },
    {
      "name": "Currency Country Rounding",
      "description": "The endpoint for operations on Currency Country Rounding"
    },
    {
      "name": "Custom Entity",
      "description": "The endpoint for operations on Custom Entity"
    },
    {
      "name": "Custom Field",
      "description": "The endpoint for operations on Custom Field"
    },
    {
      "name": "Custom Field Set",
      "description": "The endpoint for operations on Custom Field Set"
    },
    {
      "name": "Custom Field Set Relation",
      "description": "The endpoint for operations on Custom Field Set Relation"
    },
    {
      "name": "Customer",
      "description": "The endpoint for operations on Customer"
    },
    {
      "name": "Customer Address",
      "description": "The endpoint for operations on Customer Address"
    },
    {
      "name": "Customer Group",
      "description": "The endpoint for operations on Customer Group"
    },
    {
      "name": "Customer Recovery",
      "description": "The endpoint for operations on Customer Recovery"
    },
    {
      "name": "Customer Wishlist",
      "description": "The endpoint for operations on Customer Wishlist"
    },
    {
      "name": "Customer Wishlist Product",
      "description": "The endpoint for operations on Customer Wishlist Product"
    },
    {
      "name": "Dead Message",
      "description": "The endpoint for operations on Dead Message"
    },
    {
      "name": "Delivery Time",
      "description": "The endpoint for operations on Delivery Time"
    },
    {
      "name": "Document",
      "description": "The endpoint for operations on Document"
    },
    {
      "name": "Document Base Config",
      "description": "The endpoint for operations on Document Base Config"
    },
    {
      "name": "Document Base Config Sales Channel",
      "description": "The endpoint for operations on Document Base Config Sales Channel"
    },
    {
      "name": "Document Type",
      "description": "The endpoint for operations on Document Type"
    },
    {
      "name": "Event Action",
      "description": "The endpoint for operations on Event Action"
    },
    {
      "name": "Flow",
      "description": "The endpoint for operations on Flow"
    },
    {
      "name": "Flow Sequence",
      "description": "The endpoint for operations on Flow Sequence"
    },
    {
      "name": "Flow Template",
      "description": "The endpoint for operations on Flow Template"
    },
    {
      "name": "Import Export File",
      "description": "The endpoint for operations on Import Export File"
    },
    {
      "name": "Import Export Log",
      "description": "The endpoint for operations on Import Export Log"
    },
    {
      "name": "Import Export Profile",
      "description": "The endpoint for operations on Import Export Profile"
    },
    {
      "name": "Integration",
      "description": "The endpoint for operations on Integration"
    },
    {
      "name": "Landing Page",
      "description": "The endpoint for operations on Landing Page"
    },
    {
      "name": "Language",
      "description": "The endpoint for operations on Language"
    },
    {
      "name": "Locale",
      "description": "The endpoint for operations on Locale"
    },
    {
      "name": "Log Entry",
      "description": "The endpoint for operations on Log Entry"
    },
    {
      "name": "Mail Header Footer",
      "description": "The endpoint for operations on Mail Header Footer"
    },
    {
      "name": "Mail Template",
      "description": "The endpoint for operations on Mail Template"
    },
    {
      "name": "Mail Template Type",
      "description": "The endpoint for operations on Mail Template Type"
    },
    {
      "name": "Main Category",
      "description": "The endpoint for operations on Main Category"
    },
    {
      "name": "Media",
      "description": "The endpoint for operations on Media"
    },
    {
      "name": "Media Default Folder",
      "description": "The endpoint for operations on Media Default Folder"
    },
    {
      "name": "Media Folder",
      "description": "The endpoint for operations on Media Folder"
    },
    {
      "name": "Media Folder Configuration",
      "description": "The endpoint for operations on Media Folder Configuration"
    },
    {
      "name": "Media Thumbnail",
      "description": "The endpoint for operations on Media Thumbnail"
    },
    {
      "name": "Media Thumbnail Size",
      "description": "The endpoint for operations on Media Thumbnail Size"
    },
    {
      "name": "Message Queue Stats",
      "description": "The endpoint for operations on Message Queue Stats"
    },
    {
      "name": "Newsletter Recipient",
      "description": "The endpoint for operations on Newsletter Recipient"
    },
    {
      "name": "Notification",
      "description": "The endpoint for operations on Notification"
    },
    {
      "name": "Number Range",
      "description": "The endpoint for operations on Number Range"
    },
    {
      "name": "Number Range Sales Channel",
      "description": "The endpoint for operations on Number Range Sales Channel"
    },
    {
      "name": "Number Range State",
      "description": "The endpoint for operations on Number Range State"
    },
    {
      "name": "Number Range Type",
      "description": "The endpoint for operations on Number Range Type"
    },
    {
      "name": "Order",
      "description": "The endpoint for operations on Order"
    },
    {
      "name": "Order Address",
      "description": "The endpoint for operations on Order Address"
    },
    {
      "name": "Order Customer",
      "description": "The endpoint for operations on Order Customer"
    },
    {
      "name": "Order Delivery",
      "description": "The endpoint for operations on Order Delivery"
    },
    {
      "name": "Order Delivery Position",
      "description": "The endpoint for operations on Order Delivery Position"
    },
    {
      "name": "Order Line Item",
      "description": "The endpoint for operations on Order Line Item"
    },
    {
      "name": "Order Line Item Download",
      "description": "The endpoint for operations on Order Line Item Download"
    },
    {
      "name": "Order Transaction",
      "description": "The endpoint for operations on Order Transaction"
    },
    {
      "name": "Order Transaction Capture",
      "description": "The endpoint for operations on Order Transaction Capture"
    },
    {
      "name": "Order Transaction Capture Refund",
      "description": "The endpoint for operations on Order Transaction Capture Refund"
    },
    {
      "name": "Order Transaction Capture Refund Position",
      "description": "The endpoint for operations on Order Transaction Capture Refund Position"
    },
    {
      "name": "Payment Method",
      "description": "The endpoint for operations on Payment Method"
    },
    {
      "name": "Plugin",
      "description": "The endpoint for operations on Plugin"
    },
    {
      "name": "Product",
      "description": "The endpoint for operations on Product"
    },
    {
      "name": "Product Configurator Setting",
      "description": "The endpoint for operations on Product Configurator Setting"
    },
    {
      "name": "Product Cross Selling",
      "description": "The endpoint for operations on Product Cross Selling"
    },
    {
      "name": "Product Cross Selling Assigned Products",
      "description": "The endpoint for operations on Product Cross Selling Assigned Products"
    },
    {
      "name": "Product Download",
      "description": "The endpoint for operations on Product Download"
    },
    {
      "name": "Product Export",
      "description": "The endpoint for operations on Product Export"
    },
    {
      "name": "Product Feature Set",
      "description": "The endpoint for operations on Product Feature Set"
    },
    {
      "name": "Product Keyword Dictionary",
      "description": "The endpoint for operations on Product Keyword Dictionary"
    },
    {
      "name": "Product Manufacturer",
      "description": "The endpoint for operations on Product Manufacturer"
    },
    {
      "name": "Product Media",
      "description": "The endpoint for operations on Product Media"
    },
    {
      "name": "Product Price",
      "description": "The endpoint for operations on Product Price"
    },
    {
      "name": "Product Review",
      "description": "The endpoint for operations on Product Review"
    },
    {
      "name": "Product Search Config",
      "description": "The endpoint for operations on Product Search Config"
    },
    {
      "name": "Product Search Config Field",
      "description": "The endpoint for operations on Product Search Config Field"
    },
    {
      "name": "Product Search Keyword",
      "description": "The endpoint for operations on Product Search Keyword"
    },
    {
      "name": "Product Sorting",
      "description": "The endpoint for operations on Product Sorting"
    },
    {
      "name": "Product Stream",
      "description": "The endpoint for operations on Product Stream"
    },
    {
      "name": "Product Stream Filter",
      "description": "The endpoint for operations on Product Stream Filter"
    },
    {
      "name": "Product Visibility",
      "description": "The endpoint for operations on Product Visibility"
    },
    {
      "name": "Promotion",
      "description": "The endpoint for operations on Promotion"
    },
    {
      "name": "Promotion Discount",
      "description": "The endpoint for operations on Promotion Discount"
    },
    {
      "name": "Promotion Discount Prices",
      "description": "The endpoint for operations on Promotion Discount Prices"
    },
    {
      "name": "Promotion Individual Code",
      "description": "The endpoint for operations on Promotion Individual Code"
    },
    {
      "name": "Promotion Sales Channel",
      "description": "The endpoint for operations on Promotion Sales Channel"
    },
    {
      "name": "Promotion Setgroup",
      "description": "The endpoint for operations on Promotion Setgroup"
    },
    {
      "name": "Property Group",
      "description": "The endpoint for operations on Property Group"
    },
    {
      "name": "Property Group Option",
      "description": "The endpoint for operations on Property Group Option"
    },
    {
      "name": "Rule",
      "description": "The endpoint for operations on Rule"
    },
    {
      "name": "Rule Condition",
      "description": "The endpoint for operations on Rule Condition"
    },
    {
      "name": "Sales Channel",
      "description": "The endpoint for operations on Sales Channel"
    },
    {
      "name": "Sales Channel Analytics",
      "description": "The endpoint for operations on Sales Channel Analytics"
    },
    {
      "name": "Sales Channel Domain",
      "description": "The endpoint for operations on Sales Channel Domain"
    },
    {
      "name": "Sales Channel Type",
      "description": "The endpoint for operations on Sales Channel Type"
    },
    {
      "name": "Salutation",
      "description": "The endpoint for operations on Salutation"
    },
    {
      "name": "Scheduled Task",
      "description": "The endpoint for operations on Scheduled Task"
    },
    {
      "name": "Script",
      "description": "The endpoint for operations on Script"
    },
    {
      "name": "Seo Url",
      "description": "The endpoint for operations on Seo Url"
    },
    {
      "name": "Seo Url Template",
      "description": "The endpoint for operations on Seo Url Template"
    },
    {
      "name": "Shipping Method",
      "description": "The endpoint for operations on Shipping Method"
    },
    {
      "name": "Shipping Method Price",
      "description": "The endpoint for operations on Shipping Method Price"
    },
    {
      "name": "Snippet",
      "description": "The endpoint for operations on Snippet"
    },
    {
      "name": "Snippet Set",
      "description": "The endpoint for operations on Snippet Set"
    },
    {
      "name": "State Machine",
      "description": "The endpoint for operations on State Machine"
    },
    {
      "name": "State Machine History",
      "description": "The endpoint for operations on State Machine History"
    },
    {
      "name": "State Machine State",
      "description": "The endpoint for operations on State Machine State"
    },
    {
      "name": "State Machine Transition",
      "description": "The endpoint for operations on State Machine Transition"
    },
    {
      "name": "System Config",
      "description": "The endpoint for operations on System Config"
    },
    {
      "name": "Tag",
      "description": "The endpoint for operations on Tag"
    },
    {
      "name": "Tax",
      "description": "The endpoint for operations on Tax"
    },
    {
      "name": "Tax Rule",
      "description": "The endpoint for operations on Tax Rule"
    },
    {
      "name": "Tax Rule Type",
      "description": "The endpoint for operations on Tax Rule Type"
    },
    {
      "name": "Theme",
      "description": "The endpoint for operations on Theme"
    },
    {
      "name": "Unit",
      "description": "The endpoint for operations on Unit"
    },
    {
      "name": "User",
      "description": "The endpoint for operations on User"
    },
    {
      "name": "User Access Key",
      "description": "The endpoint for operations on User Access Key"
    },
    {
      "name": "User Config",
      "description": "The endpoint for operations on User Config"
    },
    {
      "name": "User Recovery",
      "description": "The endpoint for operations on User Recovery"
    },
    {
      "name": "Webhook",
      "description": "The endpoint for operations on Webhook"
    },
    {
      "name": "Webhook Event Log",
      "description": "The endpoint for operations on Webhook Event Log"
    }
  ]
}
